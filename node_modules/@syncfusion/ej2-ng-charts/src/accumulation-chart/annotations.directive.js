var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';
import { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-ng-base';
var input = ['content', 'coordinateUnits', 'description', 'horizontalAlignment', 'region', 'verticalAlignment', 'x', 'y'];
var outputs = ['content', 'coordinateUnits', 'description', 'horizontalAlignment', 'region', 'verticalAlignment', 'x', 'y'];
/**
 * AccumulationAnnotations Directive
 * ```html
 * <e-accumulation-annotations>
 * <e-accumulation-annotation></e-accumulation-annotation>
 * </e-accumulation-annotations>
 * ```
 */
var AccumulationAnnotationDirective = /** @class */ (function (_super) {
    __extends(AccumulationAnnotationDirective, _super);
    function AccumulationAnnotationDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        setValue('currentInstance', _this, _this.viewContainerRef);
        return _this;
        //this.registerEvents(outputs);
    }
    AccumulationAnnotationDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'e-accumulation-annotations>e-accumulation-annotation',
                    inputs: input,
                    queries: {}
                },] },
    ];
    /** @nocollapse */
    AccumulationAnnotationDirective.ctorParameters = function () { return [
        { type: ViewContainerRef, },
    ]; };
    return AccumulationAnnotationDirective;
}(ComplexBase));
export { AccumulationAnnotationDirective };
/**
 * AccumulationAnnotation Array Directive
 * @private
 */
var AccumulationAnnotationsDirective = /** @class */ (function (_super) {
    __extends(AccumulationAnnotationsDirective, _super);
    function AccumulationAnnotationsDirective() {
        return _super.call(this, 'annotations') || this;
    }
    AccumulationAnnotationsDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'ej-accumulationchart>e-accumulation-annotations',
                    queries: {
                        children: new ContentChildren(AccumulationAnnotationDirective)
                    },
                },] },
    ];
    /** @nocollapse */
    AccumulationAnnotationsDirective.ctorParameters = function () { return []; };
    return AccumulationAnnotationsDirective;
}(ArrayBase));
export { AccumulationAnnotationsDirective };
//# sourceMappingURL=annotations.directive.js.map