var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';
import { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-ng-base';
var input = ['animationDuration', 'dataSource', 'enableAnimation', 'enableSmartLabels', 'fill', 'marker', 'name', 'opacity', 'points', 'reactance', 'resistance', 'tooltip', 'visibility', 'width'];
var outputs = ['animationDuration', 'dataSource', 'enableAnimation', 'enableSmartLabels', 'fill', 'marker', 'name', 'opacity', 'points', 'reactance', 'resistance', 'tooltip', 'visibility', 'width'];
var SmithchartSeriesDirective = /** @class */ (function (_super) {
    __extends(SmithchartSeriesDirective, _super);
    function SmithchartSeriesDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        setValue('currentInstance', _this, _this.viewContainerRef);
        return _this;
        //this.registerEvents(outputs);
    }
    SmithchartSeriesDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'e-seriesCollection>e-series',
                    inputs: input,
                    queries: {}
                },] },
    ];
    /** @nocollapse */
    SmithchartSeriesDirective.ctorParameters = function () { return [
        { type: ViewContainerRef, },
    ]; };
    return SmithchartSeriesDirective;
}(ComplexBase));
export { SmithchartSeriesDirective };
/**
 * SmithchartSeries Array Directive
 * @private
 */
var SmithchartSeriesCollectionDirective = /** @class */ (function (_super) {
    __extends(SmithchartSeriesCollectionDirective, _super);
    function SmithchartSeriesCollectionDirective() {
        return _super.call(this, 'series') || this;
    }
    SmithchartSeriesCollectionDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'ejs-smithchart>e-seriesCollection',
                    queries: {
                        children: new ContentChildren(SmithchartSeriesDirective)
                    },
                },] },
    ];
    /** @nocollapse */
    SmithchartSeriesCollectionDirective.ctorParameters = function () { return []; };
    return SmithchartSeriesCollectionDirective;
}(ArrayBase));
export { SmithchartSeriesCollectionDirective };
//# sourceMappingURL=series.directive.js.map