var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';
import { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-ng-base';
var input = ['border', 'height'];
var outputs = ['border', 'height'];
/**
 * Row Directive
 * ```html
 * <e-rows><e-row></e-row><e-rows>
 * ```
 */
var RowDirective = /** @class */ (function (_super) {
    __extends(RowDirective, _super);
    function RowDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        setValue('currentInstance', _this, _this.viewContainerRef);
        return _this;
        //this.registerEvents(outputs);
    }
    RowDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'e-rows>e-row',
                    inputs: input,
                    queries: {}
                },] },
    ];
    /** @nocollapse */
    RowDirective.ctorParameters = function () { return [
        { type: ViewContainerRef, },
    ]; };
    return RowDirective;
}(ComplexBase));
export { RowDirective };
/**
 * Row Array Directive
 * @private
 */
var RowsDirective = /** @class */ (function (_super) {
    __extends(RowsDirective, _super);
    function RowsDirective() {
        return _super.call(this, 'rows') || this;
    }
    RowsDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'ejs-chart>e-rows',
                    queries: {
                        children: new ContentChildren(RowDirective)
                    },
                },] },
    ];
    /** @nocollapse */
    RowsDirective.ctorParameters = function () { return []; };
    return RowsDirective;
}(ArrayBase));
export { RowsDirective };
//# sourceMappingURL=rows.directive.js.map