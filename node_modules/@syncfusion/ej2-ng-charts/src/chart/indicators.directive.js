var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';
import { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-ng-base';
var input = ['animation', 'bandColor', 'close', 'dPeriod', 'dashArray', 'dataSource', 'fastPeriod', 'field', 'fill', 'high', 'kPeriod', 'low', 'lowerLine', 'macdLine', 'macdNegativeColor', 'macdPositiveColor', 'macdType', 'open', 'overBought', 'overSold', 'period', 'periodLine', 'pointColorMapping', 'query', 'segmentAxis', 'segments', 'seriesName', 'showZones', 'slowPeriod', 'standardDeviation', 'type', 'upperLine', 'volume', 'width', 'xAxisName', 'xName', 'yAxisName'];
var outputs = ['animation', 'bandColor', 'close', 'dPeriod', 'dashArray', 'dataSource', 'fastPeriod', 'field', 'fill', 'high', 'kPeriod', 'low', 'lowerLine', 'macdLine', 'macdNegativeColor', 'macdPositiveColor', 'macdType', 'open', 'overBought', 'overSold', 'period', 'periodLine', 'pointColorMapping', 'query', 'segmentAxis', 'segments', 'seriesName', 'showZones', 'slowPeriod', 'standardDeviation', 'type', 'upperLine', 'volume', 'width', 'xAxisName', 'xName', 'yAxisName'];
/**
 * Indicator Directive
 * ```html
 * <e-indicators>
 * <e-indicator></e-indicator>
 * </e-indicators>
 * ```
 */
var IndicatorDirective = /** @class */ (function (_super) {
    __extends(IndicatorDirective, _super);
    function IndicatorDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        setValue('currentInstance', _this, _this.viewContainerRef);
        return _this;
        //this.registerEvents(outputs);
    }
    IndicatorDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'e-indicators>e-indicator',
                    inputs: input,
                    queries: {}
                },] },
    ];
    /** @nocollapse */
    IndicatorDirective.ctorParameters = function () { return [
        { type: ViewContainerRef, },
    ]; };
    return IndicatorDirective;
}(ComplexBase));
export { IndicatorDirective };
/**
 * Indicator Array Directive
 * @private
 */
var IndicatorsDirective = /** @class */ (function (_super) {
    __extends(IndicatorsDirective, _super);
    function IndicatorsDirective() {
        return _super.call(this, 'indicators') || this;
    }
    IndicatorsDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'ej-chart>e-indicators',
                    queries: {
                        children: new ContentChildren(IndicatorDirective)
                    },
                },] },
    ];
    /** @nocollapse */
    IndicatorsDirective.ctorParameters = function () { return []; };
    return IndicatorsDirective;
}(ArrayBase));
export { IndicatorsDirective };
//# sourceMappingURL=indicators.directive.js.map