var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';
import { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-ng-base';
var input = ['border', 'width'];
var outputs = ['border', 'width'];
/**
 * Column Directive
 * ```html
 * <e-columns><e-column></e-column><e-columns>
 * ```
 */
var ColumnDirective = /** @class */ (function (_super) {
    __extends(ColumnDirective, _super);
    function ColumnDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        setValue('currentInstance', _this, _this.viewContainerRef);
        return _this;
        //this.registerEvents(outputs);
    }
    ColumnDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'e-columns>e-column',
                    inputs: input,
                    queries: {}
                },] },
    ];
    /** @nocollapse */
    ColumnDirective.ctorParameters = function () { return [
        { type: ViewContainerRef, },
    ]; };
    return ColumnDirective;
}(ComplexBase));
export { ColumnDirective };
/**
 * Column Array Directive
 * @private
 */
var ColumnsDirective = /** @class */ (function (_super) {
    __extends(ColumnsDirective, _super);
    function ColumnsDirective() {
        return _super.call(this, 'columns') || this;
    }
    ColumnsDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'ejs-chart>e-columns',
                    queries: {
                        children: new ContentChildren(ColumnDirective)
                    },
                },] },
    ];
    /** @nocollapse */
    ColumnsDirective.ctorParameters = function () { return []; };
    return ColumnsDirective;
}(ArrayBase));
export { ColumnsDirective };
//# sourceMappingURL=columns.directive.js.map