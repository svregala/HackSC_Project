var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';
import { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-ng-base';
var input = ['color', 'dashArray', 'value'];
var outputs = ['color', 'dashArray', 'value'];
/**
 * Series Directive
 * ```html
 * <e-series-collection>
 * <e-series>
 * <e-segments>
 * <e-segment>
 * </e-segment>
 * </e-segments>
 * </e-series-collection>
 * ```
 */
var SegmentDirective = /** @class */ (function (_super) {
    __extends(SegmentDirective, _super);
    function SegmentDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        setValue('currentInstance', _this, _this.viewContainerRef);
        return _this;
        //this.registerEvents(outputs);
    }
    SegmentDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'e-series>e-segments>e-segment',
                    inputs: input,
                    queries: {}
                },] },
    ];
    /** @nocollapse */
    SegmentDirective.ctorParameters = function () { return [
        { type: ViewContainerRef, },
    ]; };
    return SegmentDirective;
}(ComplexBase));
export { SegmentDirective };
/**
 * Segment Array Directive
 * @private
 */
var SegmentsDirective = /** @class */ (function (_super) {
    __extends(SegmentsDirective, _super);
    function SegmentsDirective() {
        return _super.call(this, 'segments') || this;
    }
    SegmentsDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'e-series>e-segments',
                    queries: {
                        children: new ContentChildren(SegmentDirective)
                    },
                },] },
    ];
    /** @nocollapse */
    SegmentsDirective.ctorParameters = function () { return []; };
    return SegmentsDirective;
}(ArrayBase));
export { SegmentsDirective };
//# sourceMappingURL=segments.directive.js.map