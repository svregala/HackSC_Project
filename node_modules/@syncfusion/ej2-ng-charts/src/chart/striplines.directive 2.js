var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';
import { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-ng-base';
var input = ['border', 'color', 'end', 'horizontalAlignment', 'opacity', 'rotation', 'size', 'start', 'startFromAxis', 'text', 'textStyle', 'verticalAlignment', 'visible', 'zIndex'];
var outputs = ['border', 'color', 'end', 'horizontalAlignment', 'opacity', 'rotation', 'size', 'start', 'startFromAxis', 'text', 'textStyle', 'verticalAlignment', 'visible', 'zIndex'];
/**
 * StripLine Directive
 * ```html
 * <e-axis>
 * <e-striplines>
 * <e-stripline></e-stripline>
 * </e-striplines>
 * </e-axis>
 * ```
 */
var StripLineDirective = /** @class */ (function (_super) {
    __extends(StripLineDirective, _super);
    function StripLineDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        setValue('currentInstance', _this, _this.viewContainerRef);
        return _this;
        //this.registerEvents(outputs);
    }
    StripLineDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'e-axis>e-striplines>e-stripline',
                    inputs: input,
                    queries: {}
                },] },
    ];
    /** @nocollapse */
    StripLineDirective.ctorParameters = function () { return [
        { type: ViewContainerRef, },
    ]; };
    return StripLineDirective;
}(ComplexBase));
export { StripLineDirective };
/**
 * StripLine Array Directive
 * @private
 */
var StripLinesDirective = /** @class */ (function (_super) {
    __extends(StripLinesDirective, _super);
    function StripLinesDirective() {
        return _super.call(this, 'striplines') || this;
    }
    StripLinesDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'e-axis>e-striplines',
                    queries: {
                        children: new ContentChildren(StripLineDirective)
                    },
                },] },
    ];
    /** @nocollapse */
    StripLinesDirective.ctorParameters = function () { return []; };
    return StripLinesDirective;
}(ArrayBase));
export { StripLinesDirective };
//# sourceMappingURL=striplines.directive.js.map