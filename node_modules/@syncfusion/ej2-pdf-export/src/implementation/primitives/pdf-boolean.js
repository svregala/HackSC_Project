define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PdfBoolean = (function () {
        function PdfBoolean(value) {
            this.currentPosition = -1;
            this.value = value;
        }
        Object.defineProperty(PdfBoolean.prototype, "status", {
            get: function () {
                return this.objectStatus;
            },
            set: function (value) {
                this.objectStatus = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfBoolean.prototype, "isSaving", {
            get: function () {
                return this.saving;
            },
            set: function (value) {
                this.saving = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfBoolean.prototype, "objectCollectionIndex", {
            get: function () {
                return this.index;
            },
            set: function (value) {
                this.index = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfBoolean.prototype, "position", {
            get: function () {
                return this.currentPosition;
            },
            set: function (value) {
                this.currentPosition = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfBoolean.prototype, "clonedObject", {
            get: function () {
                var rValue = null;
                return rValue;
            },
            enumerable: true,
            configurable: true
        });
        PdfBoolean.prototype.save = function (writer) {
            writer.write(this.boolToStr(this.value));
        };
        PdfBoolean.prototype.clone = function (crossTable) {
            var newNumber = new PdfBoolean(this.value);
            return newNumber;
        };
        PdfBoolean.prototype.boolToStr = function (value) {
            return value ? 'true' : 'false';
        };
        return PdfBoolean;
    }());
    exports.PdfBoolean = PdfBoolean;
});
