define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DictionaryProperties = (function () {
        function DictionaryProperties() {
            this.pages = 'Pages';
            this.kids = 'Kids';
            this.count = 'Count';
            this.resources = 'Resources';
            this.type = 'Type';
            this.size = 'Size';
            this.mediaBox = 'MediaBox';
            this.parent = 'Parent';
            this.root = 'Root';
            this.decodeParms = 'DecodeParms';
            this.filter = 'Filter';
            this.font = 'Font';
            this.type1 = 'Type1';
            this.baseFont = 'BaseFont';
            this.encoding = 'Encoding';
            this.subtype = 'Subtype';
            this.contents = 'Contents';
            this.procset = 'ProcSet';
            this.colorSpace = 'ColorSpace';
            this.extGState = 'ExtGState';
            this.pattern = 'Pattern';
            this.xObject = 'XObject';
            this.length = 'Length';
            this.width = 'Width';
            this.height = 'Height';
            this.bitsPerComponent = 'BitsPerComponent';
            this.image = 'Image';
            this.dctdecode = 'DCTDecode';
            this.columns = 'Columns';
            this.blackIs1 = 'BlackIs1';
            this.k = 'K';
            this.s = 'S';
            this.predictor = 'Predictor';
            this.deviceRgb = 'DeviceRGB';
            this.next = 'Next';
            this.action = 'Action';
            this.link = 'Link';
            this.a = 'A';
            this.annot = 'Annot';
            this.p = 'P';
            this.c = 'C';
            this.rect = 'Rect';
            this.uri = 'URI';
            this.annots = 'Annots';
            this.ca = 'ca';
            this.CA = 'CA';
            this.xyz = 'XYZ';
            this.fit = 'Fit';
            this.dest = 'Dest';
            this.BM = 'BM';
            this.flatedecode = 'FlateDecode';
            this.rotate = 'Rotate';
            this.bBox = 'BBox';
            this.form = 'Form';
            this.w = 'W';
            this.cIDFontType2 = 'CIDFontType2';
            this.cIDToGIDMap = 'CIDToGIDMap';
            this.identity = 'Identity';
            this.dw = 'DW';
            this.fontDescriptor = 'FontDescriptor';
            this.cIDSystemInfo = 'CIDSystemInfo';
            this.fontName = 'FontName';
            this.flags = 'Flags';
            this.fontBBox = 'FontBBox';
            this.missingWidth = 'MissingWidth';
            this.stemV = 'StemV';
            this.italicAngle = 'ItalicAngle';
            this.capHeight = 'CapHeight';
            this.ascent = 'Ascent';
            this.descent = 'Descent';
            this.leading = 'Leading';
            this.avgWidth = 'AvgWidth';
            this.fontFile2 = 'FontFile2';
            this.maxWidth = 'MaxWidth';
            this.xHeight = 'XHeight';
            this.stemH = 'StemH';
            this.registry = 'Registry';
            this.ordering = 'Ordering';
            this.supplement = 'Supplement';
            this.type0 = 'Type0';
            this.identityH = 'Identity-H';
            this.toUnicode = 'ToUnicode';
            this.descendantFonts = 'DescendantFonts';
        }
        return DictionaryProperties;
    }());
    exports.DictionaryProperties = DictionaryProperties;
});
