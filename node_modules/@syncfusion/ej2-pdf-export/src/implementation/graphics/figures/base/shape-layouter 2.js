var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "./element-layouter", "./../../../drawing/pdf-drawing"], function (require, exports, element_layouter_1, pdf_drawing_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ShapeLayouter = (function (_super) {
        __extends(ShapeLayouter, _super);
        function ShapeLayouter(element) {
            var _this = _super.call(this, element) || this;
            _this.olderPdfForm = 0;
            _this.shapeBounds = new pdf_drawing_1.RectangleF();
            _this.totalPageSize = 0;
            return _this;
        }
        Object.defineProperty(ShapeLayouter.prototype, "element", {
            get: function () {
                return this.elements;
            },
            enumerable: true,
            configurable: true
        });
        ShapeLayouter.prototype.layoutInternal = function (param) {
            var currentPage = param.page;
            var currentBounds = param.bounds;
            var shapeLayoutBounds = this.element.getBounds();
            shapeLayoutBounds.x = 0;
            shapeLayoutBounds.y = 0;
            var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;
            if ((this.isPdfGrid) && (!(isEmpty))) {
                shapeLayoutBounds = this.shapeBounds;
            }
            var result = null;
            var pageResult = new ShapeLayoutResult();
            pageResult.page = currentPage;
            return result;
        };
        ShapeLayouter.index = 0;
        ShapeLayouter.splitDiff = 0;
        ShapeLayouter.last = false;
        ShapeLayouter.borderWidth = 0;
        return ShapeLayouter;
    }(element_layouter_1.ElementLayouter));
    exports.ShapeLayouter = ShapeLayouter;
    var ShapeLayoutResult = (function () {
        function ShapeLayoutResult() {
        }
        return ShapeLayoutResult;
    }());
});
