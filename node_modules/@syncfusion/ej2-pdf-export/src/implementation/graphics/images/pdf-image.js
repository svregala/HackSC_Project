define(["require", "exports", "./../../drawing/pdf-drawing", "./../enum", "./../unit-convertor"], function (require, exports, pdf_drawing_1, enum_1, unit_convertor_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PdfImage = (function () {
        function PdfImage() {
        }
        Object.defineProperty(PdfImage.prototype, "width", {
            get: function () {
                return this.imageWidth;
            },
            set: function (value) {
                this.imageWidth = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfImage.prototype, "height", {
            get: function () {
                return this.imageHeight;
            },
            set: function (value) {
                this.imageHeight = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfImage.prototype, "size", {
            set: function (value) {
                this.width = value.width;
                this.height = value.height;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfImage.prototype, "physicalDimension", {
            get: function () {
                this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);
                return new pdf_drawing_1.SizeF(this.width, this.height);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfImage.prototype, "element", {
            get: function () {
                return this.imageStream;
            },
            enumerable: true,
            configurable: true
        });
        PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {
            if (typeof horizontalResolution === 'undefined') {
                var dpiX = unit_convertor_1.PdfUnitConverter.horizontalResolution;
                var dpiY = unit_convertor_1.PdfUnitConverter.verticalResolution;
                var size = this.getPointSize(width, height, dpiX, dpiY);
                return size;
            }
            else {
                var ucX = new unit_convertor_1.PdfUnitConverter(horizontalResolution);
                var ucY = new unit_convertor_1.PdfUnitConverter(verticalResolution);
                var ptWidth = ucX.convertUnits(width, enum_1.PdfGraphicsUnit.Pixel, enum_1.PdfGraphicsUnit.Point);
                var ptHeight = ucY.convertUnits(height, enum_1.PdfGraphicsUnit.Pixel, enum_1.PdfGraphicsUnit.Point);
                var size = new pdf_drawing_1.SizeF(ptWidth, ptHeight);
                return size;
            }
        };
        return PdfImage;
    }());
    exports.PdfImage = PdfImage;
});
