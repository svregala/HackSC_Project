define(["require", "exports", "./../pages/enum"], function (require, exports, enum_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PdfDocumentTemplate = (function () {
        function PdfDocumentTemplate() {
        }
        Object.defineProperty(PdfDocumentTemplate.prototype, "left", {
            get: function () {
                return this.leftTemplate;
            },
            set: function (value) {
                this.leftTemplate = this.checkElement(value, enum_1.TemplateType.Left);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocumentTemplate.prototype, "top", {
            get: function () {
                return this.topTemplate;
            },
            set: function (value) {
                this.topTemplate = this.checkElement(value, enum_1.TemplateType.Top);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocumentTemplate.prototype, "right", {
            get: function () {
                return this.rightTemplate;
            },
            set: function (value) {
                this.rightTemplate = this.checkElement(value, enum_1.TemplateType.Right);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocumentTemplate.prototype, "bottom", {
            get: function () {
                return this.bottomTemplate;
            },
            set: function (value) {
                this.bottomTemplate = this.checkElement(value, enum_1.TemplateType.Bottom);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocumentTemplate.prototype, "EvenLeft", {
            get: function () {
                return this.evenLeft;
            },
            set: function (value) {
                this.evenLeft = this.checkElement(value, enum_1.TemplateType.Left);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocumentTemplate.prototype, "EvenTop", {
            get: function () {
                return this.evenTop;
            },
            set: function (value) {
                this.evenTop = this.checkElement(value, enum_1.TemplateType.Top);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocumentTemplate.prototype, "EvenRight", {
            get: function () {
                return this.evenRight;
            },
            set: function (value) {
                this.evenRight = this.checkElement(value, enum_1.TemplateType.Right);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocumentTemplate.prototype, "EvenBottom", {
            get: function () {
                return this.evenBottom;
            },
            set: function (value) {
                this.evenBottom = this.checkElement(value, enum_1.TemplateType.Bottom);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocumentTemplate.prototype, "OddLeft", {
            get: function () {
                return this.oddLeft;
            },
            set: function (value) {
                this.oddLeft = this.checkElement(value, enum_1.TemplateType.Left);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocumentTemplate.prototype, "OddTop", {
            get: function () {
                return this.oddTop;
            },
            set: function (value) {
                this.oddTop = this.checkElement(value, enum_1.TemplateType.Top);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocumentTemplate.prototype, "OddRight", {
            get: function () {
                return this.oddRight;
            },
            set: function (value) {
                this.oddRight = this.checkElement(value, enum_1.TemplateType.Right);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocumentTemplate.prototype, "OddBottom", {
            get: function () {
                return this.oddBottom;
            },
            set: function (value) {
                this.oddBottom = this.checkElement(value, enum_1.TemplateType.Bottom);
            },
            enumerable: true,
            configurable: true
        });
        PdfDocumentTemplate.prototype.getLeft = function (page) {
            if (page == null) {
                throw new Error('ArgumentNullException:page');
            }
            var template = null;
            var even = this.isEven(page);
            if (even) {
                template = (this.EvenLeft != null) ? this.EvenLeft : this.left;
            }
            else {
                template = (this.OddLeft != null) ? this.OddLeft : this.left;
            }
            return template;
        };
        PdfDocumentTemplate.prototype.getTop = function (page) {
            if (page == null) {
                throw new Error('ArgumentNullException:page');
            }
            var template = null;
            var even = this.isEven(page);
            if (even) {
                template = (this.EvenTop != null) ? this.EvenTop : this.top;
            }
            else {
                template = (this.OddTop != null) ? this.OddTop : this.top;
            }
            return template;
        };
        PdfDocumentTemplate.prototype.getRight = function (page) {
            if (page == null) {
                throw new Error('ArgumentNullException:page');
            }
            var template = null;
            var even = this.isEven(page);
            if (even) {
                template = (this.EvenRight != null) ? this.EvenRight : this.right;
            }
            else {
                template = (this.OddRight != null) ? this.OddRight : this.right;
            }
            return template;
        };
        PdfDocumentTemplate.prototype.getBottom = function (page) {
            if (page == null) {
                throw new Error('ArgumentNullException:page');
            }
            var template = null;
            var even = this.isEven(page);
            if (even) {
                template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;
            }
            else {
                template = (this.OddBottom != null) ? this.OddBottom : this.bottom;
            }
            return template;
        };
        PdfDocumentTemplate.prototype.isEven = function (page) {
            var pages = page.section.document.pages;
            var index = 0;
            if (pages.pageCollectionIndex.containsKey(page)) {
                index = pages.pageCollectionIndex.getValue(page) + 1;
            }
            else {
                index = pages.indexOf(page) + 1;
            }
            var even = ((index % 2) === 0);
            return even;
        };
        PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {
            if (templateElement != null) {
                if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== enum_1.TemplateType.None)) {
                    throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');
                }
                templateElement.type = type;
            }
            return templateElement;
        };
        return PdfDocumentTemplate;
    }());
    exports.PdfDocumentTemplate = PdfDocumentTemplate;
});
