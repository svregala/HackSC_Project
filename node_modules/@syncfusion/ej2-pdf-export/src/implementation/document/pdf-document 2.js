var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "./../input-output/pdf-writer", "./../input-output/pdf-main-object-collection", "./pdf-document-base", "./../input-output/pdf-cross-table", "./pdf-catalog", "./../pages/pdf-page-settings", "./../pages/pdf-section-collection", "./../pages/pdf-document-page-collection", "./../general/pdf-cache-collection", "./../graphics/enum", "./pdf-document-template", "./../graphics/fonts/enum", "./../graphics/fonts/pdf-standard-font"], function (require, exports, pdf_writer_1, pdf_main_object_collection_1, pdf_document_base_1, pdf_cross_table_1, pdf_catalog_1, pdf_page_settings_1, pdf_section_collection_1, pdf_document_page_collection_1, pdf_cache_collection_1, enum_1, pdf_document_template_1, enum_2, pdf_standard_font_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PdfDocument = (function (_super) {
        __extends(PdfDocument, _super);
        function PdfDocument(isMerging) {
            var _this = _super.call(this) || this;
            _this.defaultMargin = 40.0;
            _this.streamWriter = null;
            _this = _super.call(this, _this) || this;
            if (isMerging === true || isMerging === false || typeof isMerging !== 'undefined') {
                var objects = new pdf_main_object_collection_1.PdfMainObjectCollection();
                _this.setMainObjectCollection(objects);
                var crossTable = new pdf_cross_table_1.PdfCrossTable();
                crossTable.isMerging = isMerging;
                crossTable.document = _this;
                _this.setCrossTable(crossTable);
                var catalog = new pdf_catalog_1.PdfCatalog();
                _this.setCatalog(catalog);
                objects.add(catalog);
                catalog.position = -1;
                _this.sectionCollection = new pdf_section_collection_1.PdfSectionCollection(_this);
                _this.documentPageCollection = new pdf_document_page_collection_1.PdfDocumentPageCollection(_this);
                catalog.pages = _this.sectionCollection;
            }
            else {
                PdfDocument.cacheCollection = new pdf_cache_collection_1.PdfCacheCollection();
                _this.constructor(false);
            }
            return _this;
        }
        Object.defineProperty(PdfDocument, "defaultFont", {
            get: function () {
                if (this.defaultStandardFont == null) {
                    this.defaultStandardFont = new pdf_standard_font_1.PdfStandardFont(enum_2.PdfFontFamily.Helvetica, 8);
                }
                return this.defaultStandardFont;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocument.prototype, "sections", {
            get: function () {
                return this.sectionCollection;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocument.prototype, "pageSettings", {
            get: function () {
                if (this.settings == null) {
                    this.settings = new pdf_page_settings_1.PdfPageSettings(this.defaultMargin);
                }
                return this.settings;
            },
            set: function (value) {
                this.settings = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocument.prototype, "pages", {
            get: function () {
                return this.documentPageCollection;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocument, "cache", {
            get: function () {
                if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {
                    return new pdf_cache_collection_1.PdfCacheCollection();
                }
                return PdfDocument.cacheCollection;
            },
            set: function (value) {
                this.cacheCollection = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocument, "enableCache", {
            get: function () {
                return this.isCacheEnabled;
            },
            set: function (value) {
                this.isCacheEnabled = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocument.prototype, "colorSpace", {
            get: function () {
                if ((this.pdfColorSpace === enum_1.PdfColorSpace.Rgb) || ((this.pdfColorSpace === enum_1.PdfColorSpace.Cmyk)
                    || (this.pdfColorSpace === enum_1.PdfColorSpace.GrayScale))) {
                    return this.pdfColorSpace;
                }
                else {
                    return enum_1.PdfColorSpace.Rgb;
                }
            },
            set: function (value) {
                if ((value === enum_1.PdfColorSpace.Rgb) || ((value === enum_1.PdfColorSpace.Cmyk) ||
                    (value === enum_1.PdfColorSpace.GrayScale))) {
                    this.pdfColorSpace = value;
                }
                else {
                    this.pdfColorSpace = enum_1.PdfColorSpace.Rgb;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PdfDocument.prototype, "template", {
            get: function () {
                if (this.pageTemplate == null) {
                    this.pageTemplate = new pdf_document_template_1.PdfDocumentTemplate();
                }
                return this.pageTemplate;
            },
            set: function (value) {
                this.pageTemplate = value;
            },
            enumerable: true,
            configurable: true
        });
        PdfDocument.prototype.docSave = function (stream, arg2, arg3) {
            this.checkPagesPresence();
            if (stream === null) {
                throw new Error('ArgumentNullException : stream');
            }
            this.streamWriter = stream;
            var writer = new pdf_writer_1.PdfWriter(stream);
            writer.document = this;
            if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {
                return this.crossTable.save(writer);
            }
            else {
                this.crossTable.save(writer, arg2);
            }
        };
        PdfDocument.prototype.checkPagesPresence = function () {
            if (this.pages.count === 0) {
                this.pages.add();
            }
        };
        PdfDocument.prototype.destroy = function () {
            this.catalog = undefined;
            this.colorSpace = undefined;
            this.currentSavingObj = undefined;
            this.documentPageCollection = undefined;
            this.isStreamCopied = undefined;
            this.pageSettings = undefined;
            this.pageTemplate = undefined;
            this.pdfColorSpace = undefined;
            this.sectionCollection = undefined;
            PdfDocument.cache.destroy();
            this.crossTable.pdfObjects.destroy();
            PdfDocument.cache = undefined;
            this.streamWriter.destroy();
        };
        PdfDocument.defaultStandardFont = null;
        PdfDocument.isCacheEnabled = true;
        return PdfDocument;
    }(pdf_document_base_1.PdfDocumentBase));
    exports.PdfDocument = PdfDocument;
});
