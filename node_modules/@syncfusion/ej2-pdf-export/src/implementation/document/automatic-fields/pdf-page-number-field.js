var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "./../../graphics/brushes/pdf-brush", "./../../pages/enum", "./pdf-numbers-convertor", "./multiple-value-field"], function (require, exports, pdf_brush_1, enum_1, pdf_numbers_convertor_1, multiple_value_field_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PdfPageNumberField = (function (_super) {
        __extends(PdfPageNumberField, _super);
        function PdfPageNumberField(font, arg2) {
            var _this = _super.call(this) || this;
            _this.internalNumberStyle = enum_1.PdfNumberStyle.Numeric;
            if (typeof arg2 === 'undefined') {
                _this.font = font;
            }
            else if (arg2 instanceof pdf_brush_1.PdfBrush) {
                _this.font = font;
                _this.brush = arg2;
            }
            else {
                _this.font = font;
                _this.bounds = arg2;
            }
            return _this;
        }
        Object.defineProperty(PdfPageNumberField.prototype, "numberStyle", {
            get: function () {
                return this.internalNumberStyle;
            },
            set: function (value) {
                this.internalNumberStyle = value;
            },
            enumerable: true,
            configurable: true
        });
        PdfPageNumberField.prototype.getValue = function (graphics) {
            var result = null;
            var page = this.getPageFromGraphics(graphics);
            result = this.internalGetValue(page);
            return result;
        };
        PdfPageNumberField.prototype.internalGetValue = function (page) {
            var document = page.document;
            var pageIndex = document.pages.indexOf(page) + 1;
            return pdf_numbers_convertor_1.PdfNumbersConvertor.convert(pageIndex, this.numberStyle);
        };
        return PdfPageNumberField;
    }(multiple_value_field_1.PdfMultipleValueField));
    exports.PdfPageNumberField = PdfPageNumberField;
});
