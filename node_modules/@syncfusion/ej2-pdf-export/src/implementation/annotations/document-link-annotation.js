var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "./link-annotation"], function (require, exports, link_annotation_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PdfDocumentLinkAnnotation = (function (_super) {
        __extends(PdfDocumentLinkAnnotation, _super);
        function PdfDocumentLinkAnnotation(rectangle, destination) {
            var _this = _super.call(this, rectangle) || this;
            _this.pdfDestination = null;
            if (typeof destination !== 'undefined') {
                _this.destination = destination;
            }
            return _this;
        }
        Object.defineProperty(PdfDocumentLinkAnnotation.prototype, "destination", {
            get: function () {
                return this.pdfDestination;
            },
            set: function (value) {
                this.pdfDestination = value;
            },
            enumerable: true,
            configurable: true
        });
        PdfDocumentLinkAnnotation.prototype.save = function () {
            _super.prototype.save.call(this);
            if (this.pdfDestination != null) {
                this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);
            }
        };
        PdfDocumentLinkAnnotation.prototype.clone = function () {
            var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);
            annot.color = this.color;
            annot.brush = this.brush;
            annot.destination = this.destination;
            annot.font = this.font;
            return annot;
        };
        return PdfDocumentLinkAnnotation;
    }(link_annotation_1.PdfLinkAnnotation));
    exports.PdfDocumentLinkAnnotation = PdfDocumentLinkAnnotation;
});
