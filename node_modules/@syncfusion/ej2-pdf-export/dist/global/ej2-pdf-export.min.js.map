{"version":3,"file":"ej2-pdf-export.min.js","sources":["../src/es5/implementation/collections/utils.js","../../node_modules/@syncfusion/ej2-file-utils/dist/src/es5/encoding.js","../src/es5/implementation/collections/dictionary.js","../src/es5/implementation/primitives/pdf-name.js","../src/es5/implementation/input-output/pdf-operators.js","../src/es5/implementation/input-output/pdf-dictionary-properties.js","../src/es5/implementation/primitives/pdf-dictionary.js","../src/es5/implementation/primitives/pdf-number.js","../src/es5/implementation/primitives/pdf-array.js","../../node_modules/@syncfusion/ej2-file-utils/dist/src/es5/save.js","../../node_modules/@syncfusion/ej2-file-utils/dist/src/es5/stream-writer.js","../../node_modules/@syncfusion/ej2-compression/dist/src/es5/compression-writer.js","../../node_modules/@syncfusion/ej2-compression/dist/src/es5/zip-archive.js","../src/es5/implementation/primitives/pdf-string.js","../src/es5/implementation/primitives/pdf-stream.js","../src/es5/implementation/graphics/enum.js","../src/es5/implementation/primitives/pdf-reference.js","../src/es5/implementation/actions/action.js","../src/es5/implementation/actions/uri-action.js","../src/es5/implementation/graphics/pdf-color.js","../src/es5/implementation/graphics/fonts/enum.js","../src/es5/implementation/drawing/pdf-drawing.js","../src/es5/implementation/graphics/brushes/pdf-brush.js","../src/es5/implementation/graphics/brushes/pdf-solid-brush.js","../src/es5/implementation/graphics/fonts/pdf-string-format.js","../src/es5/implementation/graphics/fonts/string-layouter.js","../src/es5/implementation/graphics/fonts/string-tokenizer.js","../src/es5/implementation/graphics/fonts/pdf-font.js","../src/es5/implementation/input-output/enum.js","../src/es5/implementation/input-output/pdf-writer.js","../src/es5/implementation/input-output/pdf-main-object-collection.js","../src/es5/implementation/input-output/cross-table.js","../src/es5/implementation/document/pdf-document-base.js","../src/es5/implementation/document/pdf-catalog.js","../src/es5/implementation/pages/enum.js","../src/es5/implementation/input-output/pdf-cross-table.js","../src/es5/implementation/pages/pdf-page-size.js","../src/es5/implementation/graphics/pdf-margins.js","../src/es5/implementation/graphics/images/image-decoder.js","../src/es5/implementation/pages/pdf-page-settings.js","../src/es5/implementation/input-output/pdf-stream-writer.js","../src/es5/implementation/graphics/pdf-pen.js","../src/es5/implementation/graphics/pdf-transformation-matrix.js","../src/es5/implementation/graphics/constants.js","../src/es5/implementation/collections/object-object-pair/dictionary.js","../src/es5/implementation/graphics/pdf-transparency.js","../src/es5/implementation/document/automatic-fields/automatic-field-info-collection.js","../src/es5/implementation/graphics/figures/base/graphics-element.js","../src/es5/implementation/document/automatic-fields/automatic-field.js","../src/es5/implementation/document/automatic-fields/automatic-field-info.js","../src/es5/implementation/graphics/images/byte-array.js","../src/es5/implementation/primitives/pdf-boolean.js","../src/es5/implementation/graphics/figures/enum.js","../src/es5/implementation/graphics/unit-convertor.js","../src/es5/implementation/graphics/images/pdf-image.js","../src/es5/implementation/graphics/images/pdf-bitmap.js","../src/es5/implementation/graphics/fonts/ttf-table-info.js","../src/es5/implementation/graphics/fonts/ttf-name-table.js","../src/es5/implementation/graphics/fonts/ttf-name-record.js","../src/es5/implementation/graphics/fonts/ttf-head-table.js","../src/es5/implementation/graphics/fonts/ttf-metrics.js","../src/es5/implementation/graphics/fonts/ttf-horizontal-header-table.js","../src/es5/implementation/graphics/fonts/ttf-OS2-Table.js","../src/es5/implementation/graphics/fonts/ttf-post-table.js","../src/es5/implementation/graphics/fonts/ttf-long-hor-metric.js","../src/es5/implementation/graphics/fonts/ttf-cmap-sub-table.js","../src/es5/implementation/graphics/fonts/ttf-cmap-table.js","../src/es5/implementation/graphics/fonts/ttf-glyph-info.js","../src/es5/implementation/graphics/fonts/ttf-loca-table.js","../src/es5/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js","../src/es5/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js","../src/es5/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js","../src/es5/implementation/graphics/fonts/ttf-glyph-header.js","../src/es5/implementation/input-output/big-endian-writer.js","../src/es5/implementation/graphics/fonts/ttf-reader.js","../src/es5/implementation/graphics/fonts/pdf-font-metrics.js","../src/es5/implementation/graphics/fonts/unicode-true-type-font.js","../src/es5/implementation/graphics/pdf-graphics.js","../src/es5/implementation/pages/pdf-page-layer.js","../src/es5/implementation/general/pdf-collection.js","../src/es5/implementation/pages/pdf-page-layer-collection.js","../src/es5/implementation/graphics/figures/pdf-template.js","../src/es5/implementation/graphics/pdf-resources.js","../src/es5/implementation/pages/pdf-page-base.js","../src/es5/implementation/annotations/annotation-collection.js","../src/es5/implementation/pages/pdf-page.js","../src/es5/implementation/pages/page-added-event-arguments.js","../src/es5/implementation/pages/pdf-section-page-collection.js","../src/es5/implementation/document/pdf-document-template.js","../src/es5/implementation/pages/pdf-section-templates.js","../src/es5/implementation/pages/pdf-section.js","../src/es5/implementation/pages/pdf-section-collection.js","../src/es5/implementation/pages/pdf-document-page-collection.js","../src/es5/implementation/general/pdf-cache-collection.js","../src/es5/implementation/document/pdf-document.js","../src/es5/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","../src/es5/implementation/graphics/fonts/pdf-standard-font.js","../src/es5/implementation/annotations/annotation.js","../src/es5/implementation/annotations/link-annotation.js","../src/es5/implementation/annotations/action-link-annotation.js","../src/es5/implementation/annotations/document-link-annotation.js","../src/es5/implementation/graphics/figures/base/element-layouter.js","../src/es5/implementation/general/enum.js","../src/es5/implementation/graphics/figures/layout-element.js","../src/es5/implementation/graphics/figures/base/text-layouter.js","../src/es5/implementation/graphics/figures/text-element.js","../src/es5/implementation/annotations/uri-annotation.js","../src/es5/implementation/annotations/pdf-text-web-link.js","../src/es5/implementation/document/automatic-fields/pdf-numbers-convertor.js","../src/es5/implementation/document/automatic-fields/pdf-template-value-pair.js","../src/es5/implementation/document/automatic-fields/multiple-value-field.js","../src/es5/implementation/document/automatic-fields/pdf-page-number-field.js","../src/es5/implementation/document/automatic-fields/composite-field.js","../src/es5/implementation/document/automatic-fields/single-value-field.js","../src/es5/implementation/document/automatic-fields/page-count-field.js","../src/es5/implementation/general/pdf-destination.js","../src/es5/implementation/structured-elements/tables/light-tables/enum.js","../src/es5/implementation/graphics/fonts/pdf-true-type-font.js","../src/es5/implementation/pages/pdf-page-template-element.js","../src/es5/implementation/structured-elements/grid/styles/pdf-borders.js","../src/es5/implementation/structured-elements/grid/styles/style.js","../src/es5/implementation/structured-elements/grid/pdf-grid-cell.js","../src/es5/implementation/structured-elements/grid/pdf-grid-column.js","../src/es5/implementation/structured-elements/grid/pdf-grid-row.js","../src/es5/implementation/structured-elements/grid/pdf-grid.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Encoding class: Contains the details about encoding type, whether to write a Unicode byte order mark (BOM).\n * ```typescript\n * let encoding : Encoding = new Encoding();\n * encoding.type = 'Utf8';\n * encoding.getBytes('Encoding', 0, 5);\n * ```\n */\nvar Encoding = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the Encoding class. A parameter specifies whether to write a Unicode byte order mark\n     * @param  {boolean} includeBom?-true to specify that a Unicode byte order mark is written; otherwise, false.\n     */\n    function Encoding(includeBom) {\n        this.emitBOM = true;\n        this.encodingType = 'Ansi';\n        this.initBOM(includeBom);\n    }\n    Object.defineProperty(Encoding.prototype, \"includeBom\", {\n        /**\n         * Gets a value indicating whether to write a Unicode byte order mark\n         * @returns boolean- true to specify that a Unicode byte order mark is written; otherwise, false\n         */\n        get: function () {\n            return this.emitBOM;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Encoding.prototype, \"type\", {\n        /**\n         * Gets the encoding type.\n         * @returns EncodingType\n         */\n        get: function () {\n            return this.encodingType;\n        },\n        /**\n         * Sets the encoding type.\n         * @param  {EncodingType} value\n         */\n        set: function (value) {\n            this.encodingType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initialize the includeBom to emit BOM or Not\n     * @param  {boolean} includeBom\n     */\n    Encoding.prototype.initBOM = function (includeBom) {\n        if (includeBom === undefined || includeBom === null) {\n            this.emitBOM = true;\n        }\n        else {\n            this.emitBOM = includeBom;\n        }\n    };\n    /**\n     * Calculates the number of bytes produced by encoding the characters in the specified string\n     * @param  {string} chars - The string containing the set of characters to encode\n     * @returns {number} - The number of bytes produced by encoding the specified characters\n     */\n    Encoding.prototype.getByteCount = function (chars) {\n        var byteCount = 0;\n        validateNullOrUndefined(chars, 'string');\n        if (chars === '') {\n            var byte = this.utf8Len(chars.charCodeAt(0));\n            return byte;\n        }\n        if (this.type === null || this.type === undefined) {\n            this.type = 'Ansi';\n        }\n        return this.getByteCountInternal(chars, 0, chars.length);\n    };\n    /**\n     * Return the Byte of character\n     * @param  {number} codePoint\n     * @returns {number}\n     */\n    Encoding.prototype.utf8Len = function (codePoint) {\n        var bytes = codePoint <= 0x7F ? 1 :\n            codePoint <= 0x7FF ? 2 :\n                codePoint <= 0xFFFF ? 3 :\n                    codePoint <= 0x1FFFFF ? 4 : 0;\n        return bytes;\n    };\n    /**\n     * for 4 byte character return surrogate pair true, otherwise false\n     * @param  {number} codeUnit\n     * @returns {boolean}\n     */\n    Encoding.prototype.isHighSurrogate = function (codeUnit) {\n        return codeUnit >= 0xD800 && codeUnit <= 0xDBFF;\n    };\n    /**\n     * for 4byte character generate the surrogate pair\n     * @param  {number} highCodeUnit\n     * @param  {number} lowCodeUnit\n     */\n    Encoding.prototype.toCodepoint = function (highCodeUnit, lowCodeUnit) {\n        highCodeUnit = (0x3FF & highCodeUnit) << 10;\n        var u = highCodeUnit | (0x3FF & lowCodeUnit);\n        return u + 0x10000;\n    };\n    /**\n     * private method to get the byte count for specific charindex and count\n     * @param  {string} chars\n     * @param  {number} charIndex\n     * @param  {number} charCount\n     */\n    Encoding.prototype.getByteCountInternal = function (chars, charIndex, charCount) {\n        var byteCount = 0;\n        if (this.encodingType === 'Utf8' || this.encodingType === 'Unicode') {\n            var isUtf8 = this.encodingType === 'Utf8';\n            for (var i = 0; i < charCount; i++) {\n                var charCode = chars.charCodeAt(isUtf8 ? charIndex : charIndex++);\n                if (this.isHighSurrogate(charCode)) {\n                    if (isUtf8) {\n                        var high = charCode;\n                        var low = chars.charCodeAt(++charIndex);\n                        byteCount += this.utf8Len(this.toCodepoint(high, low));\n                    }\n                    else {\n                        byteCount += 4;\n                        ++i;\n                    }\n                }\n                else {\n                    if (isUtf8) {\n                        byteCount += this.utf8Len(charCode);\n                    }\n                    else {\n                        byteCount += 2;\n                    }\n                }\n                if (isUtf8) {\n                    charIndex++;\n                }\n            }\n            return byteCount;\n        }\n        else {\n            byteCount = charCount;\n            return byteCount;\n        }\n    };\n    /**\n     * Encodes a set of characters from the specified string into the ArrayBuffer.\n     * @param  {string} s- The string containing the set of characters to encode\n     * @param  {number} charIndex-The index of the first character to encode.\n     * @param  {number} charCount- The number of characters to encode.\n     * @returns {ArrayBuffer} - The ArrayBuffer that contains the resulting sequence of bytes.\n     */\n    Encoding.prototype.getBytes = function (s, charIndex, charCount) {\n        validateNullOrUndefined(s, 'string');\n        validateNullOrUndefined(charIndex, 'charIndex');\n        validateNullOrUndefined(charCount, 'charCount');\n        if (charIndex < 0 || charCount < 0) {\n            throw new RangeError('Argument Out Of Range Exception: charIndex or charCount is less than zero');\n        }\n        if (s.length - charIndex < charCount) {\n            throw new RangeError('Argument Out Of Range Exception: charIndex and charCount do not denote a valid range in string');\n        }\n        var bytes;\n        if (s === '') {\n            bytes = new ArrayBuffer(0);\n            return bytes;\n        }\n        if (this.type === null || this.type === undefined) {\n            this.type = 'Ansi';\n        }\n        var byteCount = this.getByteCountInternal(s, charIndex, charCount);\n        switch (this.type) {\n            case 'Utf8':\n                bytes = this.getBytesOfUtf8Encoding(byteCount, s, charIndex, charCount);\n                return bytes;\n            case 'Unicode':\n                bytes = this.getBytesOfUnicodeEncoding(byteCount, s, charIndex, charCount);\n                return bytes;\n            default:\n                bytes = this.getBytesOfAnsiEncoding(byteCount, s, charIndex, charCount);\n                return bytes;\n        }\n    };\n    /**\n     * Decodes a sequence of bytes from the specified ArrayBuffer into the string.\n     * @param  {ArrayBuffer} bytes- The ArrayBuffer containing the sequence of bytes to decode.\n     * @param  {number} index- The index of the first byte to decode.\n     * @param  {number} count- The number of bytes to decode.\n     * @returns {string} - The string that contains the resulting set of characters.\n     */\n    Encoding.prototype.getString = function (bytes, index, count) {\n        validateNullOrUndefined(bytes, 'bytes');\n        validateNullOrUndefined(index, 'index');\n        validateNullOrUndefined(count, 'count');\n        if (index < 0 || count < 0) {\n            throw new RangeError('Argument Out Of Range Exception: index or count is less than zero');\n        }\n        if (bytes.byteLength - index < count) {\n            throw new RangeError('Argument Out Of Range Exception: index and count do not denote a valid range in bytes');\n        }\n        if (bytes.byteLength === 0 || count === 0) {\n            return '';\n        }\n        if (this.type === null || this.type === undefined) {\n            this.type = 'Ansi';\n        }\n        var out = '';\n        var byteCal = new Uint8Array(bytes);\n        switch (this.type) {\n            case 'Utf8':\n                var s = this.getStringOfUtf8Encoding(byteCal, index, count);\n                return s;\n            case 'Unicode':\n                var byteUnicode = new Uint16Array(bytes);\n                out = this.getStringofUnicodeEncoding(byteUnicode, index, count);\n                return out;\n            default:\n                var j = index;\n                for (var i = 0; i < count; i++) {\n                    var c = byteCal[j];\n                    out += String.fromCharCode(c); // 1 byte(ASCII) character                  \n                    j++;\n                }\n                return out;\n        }\n    };\n    Encoding.prototype.getBytesOfAnsiEncoding = function (byteCount, s, charIndex, charCount) {\n        var bytes = new ArrayBuffer(byteCount);\n        var bufview = new Uint8Array(bytes);\n        var k = 0;\n        for (var i = 0; i < charCount; i++) {\n            var charcode = s.charCodeAt(charIndex++);\n            if (charcode < 0x800) {\n                bufview[k] = charcode;\n            }\n            else {\n                bufview[k] = 63; //replacement character '?'\n            }\n            k++;\n        }\n        return bytes;\n    };\n    Encoding.prototype.getBytesOfUtf8Encoding = function (byteCount, s, charIndex, charCount) {\n        var bytes = new ArrayBuffer(byteCount);\n        var uint = new Uint8Array(bytes);\n        var index = charIndex;\n        var j = 0;\n        for (var i = 0; i < charCount; i++) {\n            var charcode = s.charCodeAt(index);\n            if (charcode <= 0x7F) {\n                uint[j] = charcode;\n            }\n            else if (charcode < 0x800) {\n                uint[j] = 0xc0 | (charcode >> 6);\n                uint[++j] = 0x80 | (charcode & 0x3f);\n            }\n            else if ((charcode < 0xd800 || charcode >= 0xe000)) {\n                uint[j] = 0xe0 | (charcode >> 12);\n                uint[++j] = 0x80 | ((charcode >> 6) & 0x3f);\n                uint[++j] = 0x80 | (charcode & 0x3f);\n            }\n            else {\n                uint[j] = 0xef;\n                uint[++j] = 0xbf;\n                uint[++j] = 0xbd; // U+FFFE \"replacement character\"\n            }\n            ++j;\n            ++index;\n        }\n        return bytes;\n    };\n    Encoding.prototype.getBytesOfUnicodeEncoding = function (byteCount, s, charIndex, charCount) {\n        var bytes = new ArrayBuffer(byteCount);\n        var uint16 = new Uint16Array(bytes);\n        for (var i = 0; i < charCount; i++) {\n            var charcode = s.charCodeAt(i);\n            uint16[i] = charcode;\n        }\n        return bytes;\n    };\n    Encoding.prototype.getStringOfUtf8Encoding = function (byteCal, index, count) {\n        var j = 0;\n        var i = index;\n        var s = '';\n        for (j; j < count; j++) {\n            var c = byteCal[i++];\n            while (i > byteCal.length) {\n                return s;\n            }\n            if (c > 127) {\n                if (c > 191 && c < 224 && i < count) {\n                    c = (c & 31) << 6 | byteCal[i] & 63;\n                }\n                else if (c > 223 && c < 240 && i < byteCal.byteLength) {\n                    c = (c & 15) << 12 | (byteCal[i] & 63) << 6 | byteCal[++i] & 63;\n                }\n                else if (c > 239 && c < 248 && i < byteCal.byteLength) {\n                    c = (c & 7) << 18 | (byteCal[i] & 63) << 12 | (byteCal[++i] & 63) << 6 | byteCal[++i] & 63;\n                }\n                ++i;\n            }\n            s += String.fromCharCode(c); // 1 byte(ASCII) character                          \n        }\n        return s;\n    };\n    Encoding.prototype.getStringofUnicodeEncoding = function (byteUni, index, count) {\n        if (count > byteUni.length) {\n            throw new RangeError('ArgumentOutOfRange_Count');\n        }\n        var byte16 = new Uint16Array(count);\n        var out = '';\n        for (var i = 0; i < count && i < byteUni.length; i++) {\n            byte16[i] = byteUni[index++];\n        }\n        out = String.fromCharCode.apply(null, byte16);\n        return out;\n    };\n    /**\n     * To clear the encoding instance\n     * @return {void}\n     */\n    Encoding.prototype.destroy = function () {\n        this.emitBOM = undefined;\n        this.encodingType = undefined;\n    };\n    return Encoding;\n}());\nexport { Encoding };\n/**\n * To check the object is null or undefined and throw error if it is null or undefined\n * @param {Object} value - object to check is null or undefined\n * @return {boolean}\n * @throws {ArgumentException} - if the value is null or undefined\n * @private\n */\nexport function validateNullOrUndefined(value, message) {\n    if (value === null || value === undefined) {\n        throw new Error('ArgumentException: ' + message + ' cannot be null or undefined');\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","/**\n * Save class provide method to save file\n * ```typescript\n * let blob : Blob = new Blob([''], { type: 'text/plain' });\n * Save.save('fileName.txt',blob);\n */\nvar Save = /** @class */ (function () {\n    /**\n     * Initialize new instance of {save}\n     */\n    function Save() {\n        // tslint:disable\n    }\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName- file name to save.\n     * @param  {Blob} buffer- the content to write in file\n     * @param  {boolean} isMicrosoftBrowser- specify whether microsoft browser or not\n     * @returns {void}\n     */\n    Save.save = function (fileName, buffer) {\n        if (fileName === null || fileName === undefined || fileName === '') {\n            throw new Error('ArgumentException: fileName cannot be undefined, null or empty');\n        }\n        var extension = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length);\n        var mimeType = this.getMimeType(extension);\n        if (mimeType !== '') {\n            buffer = new Blob([buffer], { type: mimeType });\n        }\n        if (this.isMicrosoftBrowser) {\n            navigator.msSaveBlob(buffer, fileName);\n        }\n        else {\n            var downloadLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n            this.saveInternal(fileName, extension, buffer, downloadLink, 'download' in downloadLink);\n        }\n    };\n    Save.saveInternal = function (fileName, extension, buffer, downloadLink, hasDownloadAttribute) {\n        if (hasDownloadAttribute) {\n            downloadLink.download = fileName;\n            var dataUrl_1 = window.URL.createObjectURL(buffer);\n            downloadLink.href = dataUrl_1;\n            var event_1 = document.createEvent('MouseEvent');\n            event_1.initEvent('click', true, true);\n            downloadLink.dispatchEvent(event_1);\n            setTimeout(function () {\n                window.URL.revokeObjectURL(dataUrl_1);\n                dataUrl_1 = undefined;\n            });\n        }\n        else {\n            if (extension !== 'docx' && extension !== 'xlsx') {\n                var url = window.URL.createObjectURL(buffer);\n                var isPopupBlocked = window.open(url, '_blank');\n                if (!isPopupBlocked) {\n                    window.location.href = url;\n                }\n            }\n            else {\n                var reader_1 = new FileReader();\n                reader_1.onloadend = function () {\n                    var isPopupBlocked = window.open(reader_1.result, '_blank');\n                    if (!isPopupBlocked) {\n                        window.location.href = reader_1.result;\n                    }\n                };\n                reader_1.readAsDataURL(buffer);\n            }\n        }\n    };\n    /**\n     *\n     * @param {string} extension - get mime type of the specified extension\n     * @private\n     */\n    Save.getMimeType = function (extension) {\n        var mimeType = '';\n        switch (extension) {\n            case 'html':\n                mimeType = 'text/html';\n                break;\n            case 'pdf':\n                mimeType = 'application/pdf';\n                break;\n            case 'docx':\n                mimeType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n                break;\n            case 'xlsx':\n                mimeType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n                break;\n            case 'txt':\n                mimeType = 'text/plain';\n                break;\n        }\n        return mimeType;\n    };\n    return Save;\n}());\nexport { Save };\n","import { Encoding, validateNullOrUndefined } from './encoding';\nimport { Save } from './save';\n/**\n * StreamWriter class contains the implementation for writing characters to a file in a particular encoding\n * ```typescript\n * let writer = new StreamWriter();\n * writer.write('Hello World');\n * writer.save('Sample.txt');\n * writer.dispose();\n * ```\n */\nvar StreamWriter = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the StreamWriter class by using the specified encoding.\n     * @param  {Encoding} encoding?- The character encoding to use.\n     */\n    function StreamWriter(encoding) {\n        this.bufferBlob = new Blob(['']);\n        this.bufferText = '';\n        this.init(encoding);\n        Save.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n    }\n    Object.defineProperty(StreamWriter.prototype, \"buffer\", {\n        /**\n         * Gets the content written to the StreamWriter as Blob.\n         * @returns Blob\n         */\n        get: function () {\n            this.flush();\n            return this.bufferBlob;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StreamWriter.prototype, \"encoding\", {\n        /**\n         * Gets the encoding.\n         * @returns Encoding\n         */\n        get: function () {\n            return this.enc;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StreamWriter.prototype.init = function (encoding) {\n        if (encoding === null || encoding === undefined) {\n            this.enc = new Encoding(false);\n            this.enc.type = 'Utf8';\n        }\n        else {\n            this.enc = encoding;\n            this.setBomByte();\n        }\n    };\n    /**\n     * Private method to set Byte Order Mark(BOM) value based on EncodingType\n     */\n    StreamWriter.prototype.setBomByte = function () {\n        if (this.encoding.includeBom) {\n            switch (this.encoding.type) {\n                case 'Unicode':\n                    var arrayUnicode = new ArrayBuffer(2);\n                    var uint8 = new Uint8Array(arrayUnicode);\n                    uint8[0] = 255;\n                    uint8[1] = 254;\n                    this.bufferBlob = new Blob([arrayUnicode]);\n                    break;\n                case 'Utf8':\n                    var arrayUtf8 = new ArrayBuffer(3);\n                    var utf8 = new Uint8Array(arrayUtf8);\n                    utf8[0] = 239;\n                    utf8[1] = 187;\n                    utf8[2] = 191;\n                    this.bufferBlob = new Blob([arrayUtf8]);\n                    break;\n                default:\n                    this.bufferBlob = new Blob(['']);\n                    break;\n            }\n        }\n    };\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName - The file name to save\n     * @returns {void}\n     */\n    StreamWriter.prototype.save = function (fileName) {\n        if (this.bufferText !== '') {\n            this.flush();\n        }\n        Save.save(fileName, this.buffer);\n    };\n    /**\n     * Writes the specified string.\n     * @param  {string} value - The string to write. If value is null or undefined, nothing is written.\n     * @returns {void}\n     */\n    StreamWriter.prototype.write = function (value) {\n        if (this.encoding === undefined) {\n            throw new Error('Object Disposed Exception: current writer is disposed');\n        }\n        validateNullOrUndefined(value, 'string');\n        this.bufferText += value;\n        if (this.bufferText.length >= 10240) {\n            this.flush();\n        }\n    };\n    StreamWriter.prototype.flush = function () {\n        if (this.bufferText === undefined || this.bufferText === null || this.bufferText.length === 0) {\n            return;\n        }\n        var bufferArray = this.encoding.getBytes(this.bufferText, 0, this.bufferText.length);\n        this.bufferText = '';\n        this.bufferBlob = new Blob([this.bufferBlob, bufferArray]);\n    };\n    /**\n     * Writes the specified string followed by a line terminator\n     * @param  {string} value - The string to write. If value is null or undefined, nothing is written\n     * @returns {void}\n     */\n    StreamWriter.prototype.writeLine = function (value) {\n        if (this.encoding === undefined) {\n            throw new Error('Object Disposed Exception: current writer is disposed');\n        }\n        validateNullOrUndefined(value, 'string');\n        this.bufferText = this.bufferText + value + '\\r\\n';\n        if (this.bufferText.length >= 10240) {\n            this.flush();\n        }\n    };\n    /**\n     * Releases the resources used by the StreamWriter\n     * @returns {void}\n     */\n    StreamWriter.prototype.destroy = function () {\n        this.bufferBlob = undefined;\n        this.bufferText = undefined;\n        if (this.enc instanceof Encoding) {\n            this.enc.destroy();\n        }\n        this.enc = undefined;\n    };\n    return StreamWriter;\n}());\nexport { StreamWriter };\n","import { Encoding } from '@syncfusion/ej2-file-utils';\n/**\n * array literal codes\n */\nvar arrLiteralCodes = new Int16Array(286);\nvar arrLiteralLengths = new Uint8Array(286);\nvar arrDistanceCodes = new Int16Array(30);\nvar arrDistanceLengths = new Uint8Array(30);\n/**\n * represent compression stream writer\n * ```typescript\n * let compressedWriter = new CompressedStreamWriter();\n * let text: string = 'Hello world!!!';\n * compressedWriter.write(text, 0, text.length);\n * compressedWriter.close();\n * ```\n */\nvar CompressedStreamWriter = /** @class */ (function () {\n    /**\n     * Initializes compressor and writes ZLib header if needed.\n     * @param {boolean} noWrap - optional if true, ZLib header and checksum will not be written.\n     */\n    function CompressedStreamWriter(noWrap) {\n        this.pendingBuffer = new Uint8Array(1 << 16);\n        this.pendingBufLength = 0;\n        this.pendingBufCache = 0;\n        this.pendingBufBitsInCache = 0;\n        this.bufferPosition = 0;\n        this.extraBits = 0;\n        this.currentHash = 0;\n        this.matchStart = 0;\n        this.matchLength = 0;\n        this.matchPrevAvail = false;\n        this.blockStart = 0;\n        this.stringStart = 0;\n        this.lookAhead = 0;\n        this.totalBytesIn = 0;\n        this.inputOffset = 0;\n        this.inputEnd = 0;\n        this.windowSize = 1 << 15;\n        this.windowMask = this.windowSize - 1;\n        this.hashSize = 1 << 15;\n        this.hashMask = this.hashSize - 1;\n        this.hashShift = Math.floor((15 + 3 - 1) / 3);\n        this.maxDist = this.windowSize - 262;\n        this.checkSum = 1;\n        this.noWrap = false;\n        this.treeLiteral = new CompressorHuffmanTree(this, 286, 257, 15);\n        this.treeDistances = new CompressorHuffmanTree(this, 30, 1, 15);\n        this.treeCodeLengths = new CompressorHuffmanTree(this, 19, 4, 7);\n        this.arrDistances = new Uint16Array((1 << 14));\n        this.arrLiterals = new Uint8Array((1 << 14));\n        this.stream = [];\n        this.dataWindow = new Uint8Array(2 * this.windowSize);\n        this.hashHead = new Int16Array(this.hashSize);\n        this.hashPrevious = new Int16Array(this.windowSize);\n        this.blockStart = this.stringStart = 1;\n        this.noWrap = noWrap;\n        if (!noWrap) {\n            this.writeZLibHeader();\n        }\n    }\n    Object.defineProperty(CompressedStreamWriter.prototype, \"compressedData\", {\n        /**\n         * get compressed data\n         */\n        get: function () {\n            return this.stream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompressedStreamWriter.prototype, \"getCompressedString\", {\n        get: function () {\n            var compressedString = '';\n            if (this.stream !== undefined) {\n                for (var i = 0; i < this.stream.length; i++) {\n                    compressedString += String.fromCharCode.apply(null, this.stream[i]);\n                }\n            }\n            return compressedString;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Compresses data and writes it to the stream.\n     * @param {Uint8Array} data - data to compress\n     * @param {number} offset - offset in data\n     * @param {number} length - length of the data\n     * @returns {void}\n     */\n    CompressedStreamWriter.prototype.write = function (data, offset, length) {\n        if (data === undefined || data === null) {\n            throw new Error('ArgumentException: data cannot null or undefined');\n        }\n        var end = offset + length;\n        if (0 > offset || offset > end || end > data.length) {\n            throw new Error('ArgumentOutOfRangeException: Offset or length is incorrect');\n        }\n        if (typeof data === 'string') {\n            var encode = new Encoding(false);\n            encode.type = 'Utf8';\n            data = new Uint8Array(encode.getBytes(data, 0, data.length));\n            end = offset + data.length;\n        }\n        this.inputBuffer = data;\n        this.inputOffset = offset;\n        this.inputEnd = end;\n        if (!this.noWrap) {\n            this.checkSum = ChecksumCalculator.checksumUpdate(this.checkSum, this.inputBuffer, this.inputOffset, end);\n        }\n        while (!(this.inputEnd === this.inputOffset) || !(this.pendingBufLength === 0)) {\n            this.pendingBufferFlush();\n            this.compressData(false);\n        }\n    };\n    /**\n     * write ZLib header to the compressed data\n     * @return {void}\n     */\n    CompressedStreamWriter.prototype.writeZLibHeader = function () {\n        /* Initialize header.*/\n        var headerDate = (8 + (7 << 4)) << 8;\n        /* Save compression level.*/\n        headerDate |= ((5 >> 2) & 3) << 6;\n        /* Align header.*/\n        headerDate += 31 - (headerDate % 31);\n        /* Write header to stream.*/\n        this.pendingBufferWriteShortBytes(headerDate);\n    };\n    /**\n     *  Write Most Significant Bytes in to stream\n     * @param {number} s - check sum value\n     */\n    CompressedStreamWriter.prototype.pendingBufferWriteShortBytes = function (s) {\n        this.pendingBuffer[this.pendingBufLength++] = s >> 8;\n        this.pendingBuffer[this.pendingBufLength++] = s;\n    };\n    CompressedStreamWriter.prototype.compressData = function (finish) {\n        var success;\n        do {\n            this.fillWindow();\n            var canFlush = (finish && this.inputEnd === this.inputOffset);\n            success = this.compressSlow(canFlush, finish);\n        } while (this.pendingBufLength === 0 && success);\n        return success;\n    };\n    CompressedStreamWriter.prototype.compressSlow = function (flush, finish) {\n        if (this.lookAhead < 262 && !flush) {\n            return false;\n        }\n        while (this.lookAhead >= 262 || flush) {\n            if (this.lookAhead === 0) {\n                return this.lookAheadCompleted(finish);\n            }\n            if (this.stringStart >= 2 * this.windowSize - 262) {\n                this.slideWindow();\n            }\n            var prevMatch = this.matchStart;\n            var prevLen = this.matchLength;\n            if (this.lookAhead >= 3) {\n                this.discardMatch();\n            }\n            if (prevLen >= 3 && this.matchLength <= prevLen) {\n                prevLen = this.matchPreviousBest(prevMatch, prevLen);\n            }\n            else {\n                this.matchPreviousAvailable();\n            }\n            if (this.bufferPosition >= (1 << 14)) {\n                return this.huffmanIsFull(finish);\n            }\n        }\n        return true;\n    };\n    CompressedStreamWriter.prototype.discardMatch = function () {\n        var hashHead = this.insertString();\n        if (hashHead !== 0 && this.stringStart - hashHead <= this.maxDist && this.findLongestMatch(hashHead)) {\n            if (this.matchLength <= 5 && (this.matchLength === 3 && this.stringStart - this.matchStart > 4096)) {\n                this.matchLength = 3 - 1;\n            }\n        }\n    };\n    CompressedStreamWriter.prototype.matchPreviousAvailable = function () {\n        if (this.matchPrevAvail) {\n            this.huffmanTallyLit(this.dataWindow[this.stringStart - 1] & 0xff);\n        }\n        this.matchPrevAvail = true;\n        this.stringStart++;\n        this.lookAhead--;\n    };\n    CompressedStreamWriter.prototype.matchPreviousBest = function (prevMatch, prevLen) {\n        this.huffmanTallyDist(this.stringStart - 1 - prevMatch, prevLen);\n        prevLen -= 2;\n        do {\n            this.stringStart++;\n            this.lookAhead--;\n            if (this.lookAhead >= 3) {\n                this.insertString();\n            }\n        } while (--prevLen > 0);\n        this.stringStart++;\n        this.lookAhead--;\n        this.matchPrevAvail = false;\n        this.matchLength = 3 - 1;\n        return prevLen;\n    };\n    CompressedStreamWriter.prototype.lookAheadCompleted = function (finish) {\n        if (this.matchPrevAvail) {\n            this.huffmanTallyLit(this.dataWindow[this.stringStart - 1] & 0xff);\n        }\n        this.matchPrevAvail = false;\n        this.huffmanFlushBlock(this.dataWindow, this.blockStart, this.stringStart - this.blockStart, finish);\n        this.blockStart = this.stringStart;\n        return false;\n    };\n    CompressedStreamWriter.prototype.huffmanIsFull = function (finish) {\n        var len = this.stringStart - this.blockStart;\n        if (this.matchPrevAvail) {\n            len--;\n        }\n        var lastBlock = (finish && this.lookAhead === 0 && !this.matchPrevAvail);\n        this.huffmanFlushBlock(this.dataWindow, this.blockStart, len, lastBlock);\n        this.blockStart += len;\n        return !lastBlock;\n    };\n    CompressedStreamWriter.prototype.fillWindow = function () {\n        if (this.stringStart >= this.windowSize + this.maxDist) {\n            this.slideWindow();\n        }\n        while (this.lookAhead < 262 && this.inputOffset < this.inputEnd) {\n            var more = 2 * this.windowSize - this.lookAhead - this.stringStart;\n            if (more > this.inputEnd - this.inputOffset) {\n                more = this.inputEnd - this.inputOffset;\n            }\n            this.dataWindow.set(this.inputBuffer.subarray(this.inputOffset, this.inputOffset + more), this.stringStart + this.lookAhead);\n            this.inputOffset += more;\n            this.totalBytesIn += more;\n            this.lookAhead += more;\n        }\n        if (this.lookAhead >= 3) {\n            this.updateHash();\n        }\n    };\n    CompressedStreamWriter.prototype.slideWindow = function () {\n        this.dataWindow.set(this.dataWindow.subarray(this.windowSize, this.windowSize + this.windowSize), 0);\n        this.matchStart -= this.windowSize;\n        this.stringStart -= this.windowSize;\n        this.blockStart -= this.windowSize;\n        for (var i = 0; i < this.hashSize; ++i) {\n            var m = this.hashHead[i] & 0xffff;\n            this.hashHead[i] = (((m >= this.windowSize) ? (m - this.windowSize) : 0));\n        }\n        for (var i = 0; i < this.windowSize; i++) {\n            var m = this.hashPrevious[i] & 0xffff;\n            this.hashPrevious[i] = ((m >= this.windowSize) ? (m - this.windowSize) : 0);\n        }\n    };\n    CompressedStreamWriter.prototype.insertString = function () {\n        var match;\n        var hash = ((this.currentHash << this.hashShift) ^ this.dataWindow[this.stringStart + (3 - 1)]) & this.hashMask;\n        this.hashPrevious[this.stringStart & this.windowMask] = match = this.hashHead[hash];\n        this.hashHead[hash] = this.stringStart;\n        this.currentHash = hash;\n        return match & 0xffff;\n    };\n    CompressedStreamWriter.prototype.findLongestMatch = function (curMatch) {\n        var chainLen = 4096;\n        var niceLen = 258;\n        var scan = this.stringStart;\n        var match;\n        var bestEnd = this.stringStart + this.matchLength;\n        var bestLength = Math.max(this.matchLength, 3 - 1);\n        var limit = Math.max(this.stringStart - this.maxDist, 0);\n        var stringEnd = this.stringStart + 258 - 1;\n        var scanEnd1 = this.dataWindow[bestEnd - 1];\n        var scanEnd = this.dataWindow[bestEnd];\n        var data = this.dataWindow;\n        if (bestLength >= 32) {\n            chainLen >>= 2;\n        }\n        if (niceLen > this.lookAhead) {\n            niceLen = this.lookAhead;\n        }\n        do {\n            if (data[curMatch + bestLength] !== scanEnd ||\n                data[curMatch + bestLength - 1] !== scanEnd1 ||\n                data[curMatch] !== data[scan] ||\n                data[curMatch + 1] !== data[scan + 1]) {\n                continue;\n            }\n            match = curMatch + 2;\n            scan += 2;\n            /* tslint:disable */\n            while (data[++scan] === data[++match] && data[++scan] === data[++match] &&\n                data[++scan] === data[++match] && data[++scan] === data[++match] &&\n                data[++scan] === data[++match] && data[++scan] === data[++match] &&\n                data[++scan] === data[++match] && data[++scan] === data[++match] && scan < stringEnd) {\n                /* tslint:disable */\n            }\n            if (scan > bestEnd) {\n                this.matchStart = curMatch;\n                bestEnd = scan;\n                bestLength = scan - this.stringStart;\n                if (bestLength >= niceLen) {\n                    break;\n                }\n                scanEnd1 = data[bestEnd - 1];\n                scanEnd = data[bestEnd];\n            }\n            scan = this.stringStart;\n        } while ((curMatch = (this.hashPrevious[curMatch & this.windowMask] & 0xffff)) > limit && --chainLen !== 0);\n        this.matchLength = Math.min(bestLength, this.lookAhead);\n        return this.matchLength >= 3;\n    };\n    CompressedStreamWriter.prototype.updateHash = function () {\n        this.currentHash = (this.dataWindow[this.stringStart] << this.hashShift) ^ this.dataWindow[this.stringStart + 1];\n    };\n    CompressedStreamWriter.prototype.huffmanTallyLit = function (literal) {\n        this.arrDistances[this.bufferPosition] = 0;\n        this.arrLiterals[this.bufferPosition++] = literal;\n        this.treeLiteral.codeFrequencies[literal]++;\n        return this.bufferPosition >= (1 << 14);\n    };\n    CompressedStreamWriter.prototype.huffmanTallyDist = function (dist, len) {\n        this.arrDistances[this.bufferPosition] = dist;\n        this.arrLiterals[this.bufferPosition++] = (len - 3);\n        var lc = this.huffmanLengthCode(len - 3);\n        this.treeLiteral.codeFrequencies[lc]++;\n        if (lc >= 265 && lc < 285) {\n            this.extraBits += Math.floor((lc - 261) / 4);\n        }\n        var dc = this.huffmanDistanceCode(dist - 1);\n        this.treeDistances.codeFrequencies[dc]++;\n        if (dc >= 4) {\n            this.extraBits += Math.floor((dc / 2 - 1));\n        }\n        return this.bufferPosition >= (1 << 14);\n    };\n    CompressedStreamWriter.prototype.huffmanFlushBlock = function (stored, storedOffset, storedLength, lastBlock) {\n        this.treeLiteral.codeFrequencies[256]++;\n        this.treeLiteral.buildTree();\n        this.treeDistances.buildTree();\n        this.treeLiteral.calculateBLFreq(this.treeCodeLengths);\n        this.treeDistances.calculateBLFreq(this.treeCodeLengths);\n        this.treeCodeLengths.buildTree();\n        var blTreeCodes = 4;\n        for (var i = 18; i > blTreeCodes; i--) {\n            if (this.treeCodeLengths.codeLengths[CompressorHuffmanTree.huffCodeLengthOrders[i]] > 0) {\n                blTreeCodes = i + 1;\n            }\n        }\n        var opt_len = 14 + blTreeCodes * 3 + this.treeCodeLengths.getEncodedLength() +\n            this.treeLiteral.getEncodedLength() + this.treeDistances.getEncodedLength() + this.extraBits;\n        var static_len = this.extraBits;\n        for (var i = 0; i < 286; i++) {\n            static_len += this.treeLiteral.codeFrequencies[i] * arrLiteralLengths[i];\n        }\n        for (var i = 0; i < 30; i++) {\n            static_len += this.treeDistances.codeFrequencies[i] * arrDistanceLengths[i];\n        }\n        if (opt_len >= static_len) {\n            // Force static trees.\n            opt_len = static_len;\n        }\n        if (storedOffset >= 0 && storedLength + 4 < opt_len >> 3) {\n            this.huffmanFlushStoredBlock(stored, storedOffset, storedLength, lastBlock);\n        }\n        else if (opt_len == static_len) {\n            // Encode with static tree.\n            this.pendingBufferWriteBits((1 << 1) + (lastBlock ? 1 : 0), 3);\n            this.treeLiteral.setStaticCodes(arrLiteralCodes, arrLiteralLengths);\n            this.treeDistances.setStaticCodes(arrDistanceCodes, arrDistanceLengths);\n            this.huffmanCompressBlock();\n            this.huffmanReset();\n        }\n        else {\n            this.pendingBufferWriteBits((2 << 1) + (lastBlock ? 1 : 0), 3);\n            this.huffmanSendAllTrees(blTreeCodes);\n            this.huffmanCompressBlock();\n            this.huffmanReset();\n        }\n    };\n    CompressedStreamWriter.prototype.huffmanFlushStoredBlock = function (stored, storedOffset, storedLength, lastBlock) {\n        this.pendingBufferWriteBits((0 << 1) + (lastBlock ? 1 : 0), 3);\n        this.pendingBufferAlignToByte();\n        this.pendingBufferWriteShort(storedLength);\n        this.pendingBufferWriteShort(~storedLength);\n        this.pendingBufferWriteByteBlock(stored, storedOffset, storedLength);\n        this.huffmanReset();\n    };\n    CompressedStreamWriter.prototype.huffmanLengthCode = function (len) {\n        if (len === 255) {\n            return 285;\n        }\n        var code = 257;\n        while (len >= 8) {\n            code += 4;\n            len >>= 1;\n        }\n        return code + len;\n    };\n    CompressedStreamWriter.prototype.huffmanDistanceCode = function (distance) {\n        var code = 0;\n        while (distance >= 4) {\n            code += 2;\n            distance >>= 1;\n        }\n        return code + distance;\n    };\n    CompressedStreamWriter.prototype.huffmanSendAllTrees = function (blTreeCodes) {\n        this.treeCodeLengths.buildCodes();\n        this.treeLiteral.buildCodes();\n        this.treeDistances.buildCodes();\n        this.pendingBufferWriteBits(this.treeLiteral.treeLength - 257, 5);\n        this.pendingBufferWriteBits(this.treeDistances.treeLength - 1, 5);\n        this.pendingBufferWriteBits(blTreeCodes - 4, 4);\n        for (var rank = 0; rank < blTreeCodes; rank++) {\n            this.pendingBufferWriteBits(this.treeCodeLengths.codeLengths[CompressorHuffmanTree.huffCodeLengthOrders[rank]], 3);\n        }\n        this.treeLiteral.writeTree(this.treeCodeLengths);\n        this.treeDistances.writeTree(this.treeCodeLengths);\n    };\n    CompressedStreamWriter.prototype.huffmanReset = function () {\n        this.bufferPosition = 0;\n        this.extraBits = 0;\n        this.treeLiteral.reset();\n        this.treeDistances.reset();\n        this.treeCodeLengths.reset();\n    };\n    CompressedStreamWriter.prototype.huffmanCompressBlock = function () {\n        for (var i = 0; i < this.bufferPosition; i++) {\n            var literalLen = this.arrLiterals[i] & 255;\n            var dist = this.arrDistances[i];\n            if (dist-- !== 0) {\n                var lc = this.huffmanLengthCode(literalLen);\n                this.treeLiteral.writeCodeToStream(lc);\n                var bits = Math.floor((lc - 261) / 4);\n                if (bits > 0 && bits <= 5) {\n                    this.pendingBufferWriteBits(literalLen & ((1 << bits) - 1), bits);\n                }\n                var dc = this.huffmanDistanceCode(dist);\n                this.treeDistances.writeCodeToStream(dc);\n                bits = Math.floor(dc / 2 - 1);\n                if (bits > 0) {\n                    this.pendingBufferWriteBits(dist & ((1 << bits) - 1), bits);\n                }\n            }\n            else {\n                this.treeLiteral.writeCodeToStream(literalLen);\n            }\n        }\n        this.treeLiteral.writeCodeToStream(256);\n    };\n    /**\n     * write bits in to internal buffer\n     * @param {number} b - source of bits\n     * @param {number} count - count of bits to write\n     */\n    CompressedStreamWriter.prototype.pendingBufferWriteBits = function (b, count) {\n        var uint = new Uint32Array(1);\n        uint[0] = this.pendingBufCache | (b << this.pendingBufBitsInCache);\n        this.pendingBufCache = uint[0];\n        this.pendingBufBitsInCache += count;\n        this.pendingBufferFlushBits();\n    };\n    CompressedStreamWriter.prototype.pendingBufferFlush = function (isClose) {\n        this.pendingBufferFlushBits();\n        if (this.pendingBufLength > 0) {\n            var array = new Uint8Array(this.pendingBufLength);\n            array.set(this.pendingBuffer.subarray(0, this.pendingBufLength), 0);\n            this.stream.push(array);\n        }\n        this.pendingBufLength = 0;\n    };\n    CompressedStreamWriter.prototype.pendingBufferFlushBits = function () {\n        var result = 0;\n        while (this.pendingBufBitsInCache >= 8 && this.pendingBufLength < (1 << 16)) {\n            this.pendingBuffer[this.pendingBufLength++] = this.pendingBufCache;\n            this.pendingBufCache >>= 8;\n            this.pendingBufBitsInCache -= 8;\n            result++;\n        }\n        return result;\n    };\n    CompressedStreamWriter.prototype.pendingBufferWriteByteBlock = function (data, offset, length) {\n        var array = data.subarray(offset, offset + length);\n        this.pendingBuffer.set(array, this.pendingBufLength);\n        this.pendingBufLength += length;\n    };\n    CompressedStreamWriter.prototype.pendingBufferWriteShort = function (s) {\n        this.pendingBuffer[this.pendingBufLength++] = s;\n        this.pendingBuffer[this.pendingBufLength++] = (s >> 8);\n    };\n    CompressedStreamWriter.prototype.pendingBufferAlignToByte = function () {\n        if (this.pendingBufBitsInCache > 0) {\n            this.pendingBuffer[this.pendingBufLength++] = this.pendingBufCache;\n        }\n        this.pendingBufCache = 0;\n        this.pendingBufBitsInCache = 0;\n    };\n    /**\n     * close the stream and write all pending buffer in to stream\n     * @returns {void}\n     */\n    CompressedStreamWriter.prototype.close = function () {\n        do {\n            this.pendingBufferFlush(true);\n            if (!this.compressData(true)) {\n                this.pendingBufferFlush(true);\n                this.pendingBufferAlignToByte();\n                if (!this.noWrap) {\n                    this.pendingBufferWriteShortBytes(this.checkSum >> 16);\n                    this.pendingBufferWriteShortBytes(this.checkSum & 0xffff);\n                }\n                this.pendingBufferFlush(true);\n            }\n        } while (!(this.inputEnd === this.inputOffset) ||\n            !(this.pendingBufLength === 0));\n    };\n    /**\n     * release allocated un-managed resource\n     * @returns {void}\n     */\n    CompressedStreamWriter.prototype.destroy = function () {\n        this.stream = [];\n        this.stream = undefined;\n        this.pendingBuffer = undefined;\n        this.treeLiteral = undefined;\n        this.treeDistances = undefined;\n        this.treeCodeLengths = undefined;\n        this.arrLiterals = undefined;\n        this.arrDistances = undefined;\n        this.hashHead = undefined;\n        this.hashPrevious = undefined;\n        this.dataWindow = undefined;\n        this.inputBuffer = undefined;\n        this.pendingBufLength = undefined;\n        this.pendingBufCache = undefined;\n        this.pendingBufBitsInCache = undefined;\n        this.bufferPosition = undefined;\n        this.extraBits = undefined;\n        this.currentHash = undefined;\n        this.matchStart = undefined;\n        this.matchLength = undefined;\n        this.matchPrevAvail = undefined;\n        this.blockStart = undefined;\n        this.stringStart = undefined;\n        this.lookAhead = undefined;\n        this.totalBytesIn = undefined;\n        this.inputOffset = undefined;\n        this.inputEnd = undefined;\n        this.windowSize = undefined;\n        this.windowMask = undefined;\n        this.hashSize = undefined;\n        this.hashMask = undefined;\n        this.hashShift = undefined;\n        this.maxDist = undefined;\n        this.checkSum = undefined;\n        this.noWrap = undefined;\n    };\n    return CompressedStreamWriter;\n}());\nexport { CompressedStreamWriter };\n/**\n * represent the Huffman Tree\n */\nvar CompressorHuffmanTree = /** @class */ (function () {\n    /**\n     * Create new Huffman Tree\n     * @param {CompressedStreamWriter} writer instance\n     * @param {number} elementCount - element count\n     * @param {number} minCodes - minimum count\n     * @param {number} maxLength - maximum count\n     */\n    function CompressorHuffmanTree(writer, elementCount, minCodes, maxLength) {\n        this.writer = writer;\n        this.codeMinCount = minCodes;\n        this.maxLength = maxLength;\n        this.codeFrequency = new Uint16Array(elementCount);\n        this.lengthCount = new Int32Array(maxLength);\n    }\n    Object.defineProperty(CompressorHuffmanTree.prototype, \"treeLength\", {\n        get: function () {\n            return this.codeCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompressorHuffmanTree.prototype, \"codeLengths\", {\n        get: function () {\n            return this.codeLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompressorHuffmanTree.prototype, \"codeFrequencies\", {\n        get: function () {\n            return this.codeFrequency;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompressorHuffmanTree.prototype.setStaticCodes = function (codes, lengths) {\n        var temp = new Int16Array(codes.length);\n        temp.set(codes, 0);\n        this.codes = temp;\n        var lengthTemp = new Uint8Array(lengths.length);\n        lengthTemp.set(lengths, 0);\n        this.codeLength = lengthTemp;\n    };\n    /**\n     * reset all code data in tree\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.reset = function () {\n        for (var i = 0; i < this.codeFrequency.length; i++) {\n            this.codeFrequency[i] = 0;\n        }\n        this.codes = undefined;\n        this.codeLength = undefined;\n    };\n    /**\n     * write code to the compressor output stream\n     * @param {number} code - code to be written\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.writeCodeToStream = function (code) {\n        this.writer.pendingBufferWriteBits(this.codes[code] & 0xffff, this.codeLength[code]);\n    };\n    /**\n     * calculate code from their frequencies\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.buildCodes = function () {\n        var nextCode = new Int32Array(this.maxLength);\n        this.codes = new Int16Array(this.codeCount);\n        var code = 0;\n        for (var bitsCount = 0; bitsCount < this.maxLength; bitsCount++) {\n            nextCode[bitsCount] = code;\n            code += this.lengthCount[bitsCount] << (15 - bitsCount);\n        }\n        for (var i = 0; i < this.codeCount; i++) {\n            var bits = this.codeLength[i];\n            if (bits > 0) {\n                this.codes[i] = CompressorHuffmanTree.bitReverse(nextCode[bits - 1]);\n                nextCode[bits - 1] += 1 << (16 - bits);\n            }\n        }\n    };\n    CompressorHuffmanTree.bitReverse = function (value) {\n        return (CompressorHuffmanTree.reverseBits[value & 15] << 12\n            | CompressorHuffmanTree.reverseBits[(value >> 4) & 15] << 8\n            | CompressorHuffmanTree.reverseBits[(value >> 8) & 15] << 4\n            | CompressorHuffmanTree.reverseBits[value >> 12]);\n    };\n    /**\n     * calculate length of compressed data\n     * @returns {number}\n     */\n    CompressorHuffmanTree.prototype.getEncodedLength = function () {\n        var len = 0;\n        for (var i = 0; i < this.codeFrequency.length; i++) {\n            len += this.codeFrequency[i] * this.codeLength[i];\n        }\n        return len;\n    };\n    /**\n     * calculate code frequencies\n     * @param {CompressorHuffmanTree} blTree\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.calculateBLFreq = function (blTree) {\n        var maxCount;\n        var minCount;\n        var count;\n        var curLen = -1;\n        var i = 0;\n        while (i < this.codeCount) {\n            count = 1;\n            var nextLen = this.codeLength[i];\n            if (nextLen === 0) {\n                maxCount = 138;\n                minCount = 3;\n            }\n            else {\n                maxCount = 6;\n                minCount = 3;\n                if (curLen !== nextLen) {\n                    blTree.codeFrequency[nextLen]++;\n                    count = 0;\n                }\n            }\n            curLen = nextLen;\n            i++;\n            while (i < this.codeCount && curLen === this.codeLength[i]) {\n                i++;\n                if (++count >= maxCount) {\n                    break;\n                }\n            }\n            if (count < minCount) {\n                blTree.codeFrequency[curLen] += count;\n            }\n            else if (curLen !== 0) {\n                blTree.codeFrequency[16]++;\n            }\n            else if (count <= 10) {\n                blTree.codeFrequency[17]++;\n            }\n            else {\n                blTree.codeFrequency[18]++;\n            }\n        }\n    };\n    /**\n     * @param {CompressorHuffmanTree} blTree - write tree to output stream\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.writeTree = function (blTree) {\n        var maxRepeatCount;\n        var minRepeatCount;\n        var currentRepeatCount;\n        var currentCodeLength = -1;\n        var i = 0;\n        while (i < this.codeCount) {\n            currentRepeatCount = 1;\n            var nextLen = this.codeLength[i];\n            if (nextLen === 0) {\n                maxRepeatCount = 138;\n                minRepeatCount = 3;\n            }\n            else {\n                maxRepeatCount = 6;\n                minRepeatCount = 3;\n                if (currentCodeLength !== nextLen) {\n                    blTree.writeCodeToStream(nextLen);\n                    currentRepeatCount = 0;\n                }\n            }\n            currentCodeLength = nextLen;\n            i++;\n            while (i < this.codeCount && currentCodeLength === this.codeLength[i]) {\n                i++;\n                if (++currentRepeatCount >= maxRepeatCount) {\n                    break;\n                }\n            }\n            if (currentRepeatCount < minRepeatCount) {\n                while (currentRepeatCount-- > 0) {\n                    blTree.writeCodeToStream(currentCodeLength);\n                }\n            }\n            else if (currentCodeLength !== 0) {\n                blTree.writeCodeToStream(16);\n                this.writer.pendingBufferWriteBits(currentRepeatCount - 3, 2);\n            }\n            else if (currentRepeatCount <= 10) {\n                blTree.writeCodeToStream(17);\n                this.writer.pendingBufferWriteBits(currentRepeatCount - 3, 3);\n            }\n            else {\n                blTree.writeCodeToStream(18);\n                this.writer.pendingBufferWriteBits(currentRepeatCount - 11, 7);\n            }\n        }\n    };\n    /**\n     * Build huffman tree\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.buildTree = function () {\n        var codesCount = this.codeFrequency.length;\n        var arrTree = new Int32Array(codesCount);\n        var treeLength = 0;\n        var maxCount = 0;\n        for (var n = 0; n < codesCount; n++) {\n            var freq = this.codeFrequency[n];\n            if (freq !== 0) {\n                var pos = treeLength++;\n                var pPos = 0;\n                while (pos > 0 && this.codeFrequency[arrTree[pPos = Math.floor((pos - 1) / 2)]] > freq) {\n                    arrTree[pos] = arrTree[pPos];\n                    pos = pPos;\n                }\n                arrTree[pos] = n;\n                maxCount = n;\n            }\n        }\n        while (treeLength < 2) {\n            arrTree[treeLength++] =\n                (maxCount < 2) ? ++maxCount : 0;\n        }\n        this.codeCount = Math.max(maxCount + 1, this.codeMinCount);\n        var leafsCount = treeLength;\n        var nodesCount = leafsCount;\n        var child = new Int32Array(4 * treeLength - 2);\n        var values = new Int32Array(2 * treeLength - 1);\n        for (var i = 0; i < treeLength; i++) {\n            var node = arrTree[i];\n            var iIndex = 2 * i;\n            child[iIndex] = node;\n            child[iIndex + 1] = -1;\n            values[i] = (this.codeFrequency[node] << 8);\n            arrTree[i] = i;\n        }\n        this.constructHuffmanTree(arrTree, treeLength, values, nodesCount, child);\n        this.buildLength(child);\n    };\n    CompressorHuffmanTree.prototype.constructHuffmanTree = function (arrTree, treeLength, values, nodesCount, child) {\n        do {\n            var first = arrTree[0];\n            var last = arrTree[--treeLength];\n            var lastVal = values[last];\n            var pPos = 0;\n            var path = 1;\n            while (path < treeLength) {\n                if (path + 1 < treeLength && values[arrTree[path]] > values[arrTree[path + 1]]) {\n                    path++;\n                }\n                arrTree[pPos] = arrTree[path];\n                pPos = path;\n                path = pPos * 2 + 1;\n            }\n            while ((path = pPos) > 0 && values[arrTree[pPos = Math.floor((path - 1) / 2)]] > lastVal) {\n                arrTree[path] = arrTree[pPos];\n            }\n            arrTree[path] = last;\n            var second = arrTree[0];\n            last = nodesCount++;\n            child[2 * last] = first;\n            child[2 * last + 1] = second;\n            var minDepth = Math.min(values[first] & 0xff, values[second] & 0xff);\n            values[last] = lastVal = values[first] + values[second] - minDepth + 1;\n            pPos = 0;\n            path = 1;\n            /* tslint:disable */\n            while (path < treeLength) {\n                if (path + 1 < treeLength && values[arrTree[path]] > values[arrTree[path + 1]]) {\n                    path++;\n                }\n                arrTree[pPos] = arrTree[path];\n                pPos = path;\n                path = pPos * 2 + 1;\n            } /* tslint:disable */\n            while ((path = pPos) > 0 && values[arrTree[pPos = Math.floor((path - 1) / 2)]] > lastVal) {\n                arrTree[path] = arrTree[pPos];\n            }\n            arrTree[path] = last;\n        } while (treeLength > 1);\n    };\n    CompressorHuffmanTree.prototype.buildLength = function (child) {\n        this.codeLength = new Uint8Array(this.codeFrequency.length);\n        var numNodes = Math.floor(child.length / 2);\n        var numLeafs = Math.floor((numNodes + 1) / 2);\n        var overflow = 0;\n        for (var i = 0; i < this.maxLength; i++) {\n            this.lengthCount[i] = 0;\n        }\n        overflow = this.calculateOptimalCodeLength(child, overflow, numNodes);\n        if (overflow === 0) {\n            return;\n        }\n        var iIncreasableLength = this.maxLength - 1;\n        do {\n            while (this.lengthCount[--iIncreasableLength] === 0) {\n                /* tslint:disable */\n            }\n            do {\n                this.lengthCount[iIncreasableLength]--;\n                this.lengthCount[++iIncreasableLength]++;\n                overflow -= (1 << (this.maxLength - 1 - iIncreasableLength));\n            } while (overflow > 0 && iIncreasableLength < this.maxLength - 1);\n        } while (overflow > 0);\n        this.recreateTree(child, overflow, numLeafs);\n    };\n    CompressorHuffmanTree.prototype.recreateTree = function (child, overflow, numLeafs) {\n        this.lengthCount[this.maxLength - 1] += overflow;\n        this.lengthCount[this.maxLength - 2] -= overflow;\n        var nodePtr = 2 * numLeafs;\n        for (var bits = this.maxLength; bits !== 0; bits--) {\n            var n = this.lengthCount[bits - 1];\n            while (n > 0) {\n                var childPtr = 2 * child[nodePtr++];\n                if (child[childPtr + 1] === -1) {\n                    this.codeLength[child[childPtr]] = bits;\n                    n--;\n                }\n            }\n        }\n    };\n    CompressorHuffmanTree.prototype.calculateOptimalCodeLength = function (child, overflow, numNodes) {\n        var lengths = new Int32Array(numNodes);\n        lengths[numNodes - 1] = 0;\n        for (var i = numNodes - 1; i >= 0; i--) {\n            var childIndex = 2 * i + 1;\n            if (child[childIndex] !== -1) {\n                var bitLength = lengths[i] + 1;\n                if (bitLength > this.maxLength) {\n                    bitLength = this.maxLength;\n                    overflow++;\n                }\n                lengths[child[childIndex - 1]] = lengths[child[childIndex]] = bitLength;\n            }\n            else {\n                var bitLength = lengths[i];\n                this.lengthCount[bitLength - 1]++;\n                this.codeLength[child[childIndex - 1]] = lengths[i];\n            }\n        }\n        return overflow;\n    };\n    CompressorHuffmanTree.reverseBits = [0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15];\n    CompressorHuffmanTree.huffCodeLengthOrders = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n    return CompressorHuffmanTree;\n}());\nexport { CompressorHuffmanTree };\n/**\n * Checksum calculator, based on Adler32 algorithm.\n */\nvar ChecksumCalculator = /** @class */ (function () {\n    function ChecksumCalculator() {\n    }\n    /**\n     * Updates checksum by calculating checksum of the\n     * given buffer and adding it to current value.\n     * @param {number} checksum - current checksum.\n     * @param {Uint8Array} buffer - data byte array.\n     * @param {number} offset - offset in the buffer.\n     * @param {number} length - length of data to be used from the stream.\n     * @returns {number}\n     */\n    ChecksumCalculator.checksumUpdate = function (checksum, buffer, offset, length) {\n        var uint = new Uint32Array(1);\n        uint[0] = checksum;\n        var checksum_uint = uint[0];\n        var s1 = uint[0] = checksum_uint & 65535;\n        var s2 = uint[0] = checksum_uint >> ChecksumCalculator.checkSumBitOffset;\n        while (length > 0) {\n            var steps = Math.min(length, ChecksumCalculator.checksumIterationCount);\n            length -= steps;\n            while (--steps >= 0) {\n                s1 = s1 + (uint[0] = (buffer[offset++] & 255));\n                s2 = s2 + s1;\n            }\n            s1 %= ChecksumCalculator.checksumBase;\n            s2 %= ChecksumCalculator.checksumBase;\n        }\n        checksum_uint = (s2 << ChecksumCalculator.checkSumBitOffset) | s1;\n        return checksum_uint;\n    };\n    ChecksumCalculator.checkSumBitOffset = 16;\n    ChecksumCalculator.checksumBase = 65521;\n    ChecksumCalculator.checksumIterationCount = 3800;\n    return ChecksumCalculator;\n}());\nexport { ChecksumCalculator };\n/**\n * Huffman Tree literal calculation\n */\n(function () {\n    var i = 0;\n    while (i < 144) {\n        arrLiteralCodes[i] = CompressorHuffmanTree.bitReverse((0x030 + i) << 8);\n        arrLiteralLengths[i++] = 8;\n    }\n    while (i < 256) {\n        arrLiteralCodes[i] = CompressorHuffmanTree.bitReverse((0x190 - 144 + i) << 7);\n        arrLiteralLengths[i++] = 9;\n    }\n    while (i < 280) {\n        arrLiteralCodes[i] = CompressorHuffmanTree.bitReverse((0x000 - 256 + i) << 9);\n        arrLiteralLengths[i++] = 7;\n    }\n    while (i < 286) {\n        arrLiteralCodes[i] = CompressorHuffmanTree.bitReverse((0x0c0 - 280 + i) << 8);\n        arrLiteralLengths[i++] = 8;\n    }\n    for (i = 0; i < 30; i++) {\n        arrDistanceCodes[i] = CompressorHuffmanTree.bitReverse(i << 11);\n        arrDistanceLengths[i] = 5;\n    }\n})();\n","import { CompressedStreamWriter } from './compression-writer';\nimport { Save } from '@syncfusion/ej2-file-utils';\nvar crc32Table = [];\n/**\n * class provide compression library\n * ```typescript\n * let archive = new ZipArchive();\n * archive.compressionLevel = 'Normal';\n * let archiveItem = new ZipArchiveItem(archive, 'directoryName\\fileName.txt');\n * archive.addItem(archiveItem);\n * archive.save(fileName.zip);\n * ```\n */\nvar ZipArchive = /** @class */ (function () {\n    /**\n     * constructor for creating ZipArchive instance\n     */\n    function ZipArchive() {\n        this.files = [];\n        this.level = 'Normal';\n        Save.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n    }\n    Object.defineProperty(ZipArchive.prototype, \"compressionLevel\", {\n        /**\n         * gets compression level\n         */\n        get: function () {\n            return this.level;\n        },\n        /**\n         * sets compression level\n         */\n        set: function (level) {\n            this.level = level;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ZipArchive.prototype, \"length\", {\n        /**\n         * gets items count\n         */\n        get: function () {\n            if (this.files === undefined) {\n                return 0;\n            }\n            return this.files.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * add new item to archive\n     * @param {ZipArchiveItem} item - item to be added\n     * @returns {void}\n     */\n    ZipArchive.prototype.addItem = function (item) {\n        if (item === null || item === undefined) {\n            throw new Error('ArgumentException: item cannot be null or undefined');\n        }\n        for (var i = 0; i < this.files.length; i++) {\n            var file = this.files[i];\n            if (file instanceof ZipArchiveItem) {\n                if (file.name === item.name) {\n                    throw new Error('item with same name already exist');\n                }\n            }\n        }\n        this.files.push(item);\n    };\n    /**\n     * add new directory to archive\n     * @param directoryName directoryName to be created\n     * @returns {void}\n     */\n    ZipArchive.prototype.addDirectory = function (directoryName) {\n        if (directoryName === null || directoryName === undefined) {\n            throw new Error('ArgumentException: string cannot be null or undefined');\n        }\n        if (directoryName.length === 0) {\n            throw new Error('ArgumentException: string cannot be empty');\n        }\n        if (directoryName.slice(-1) !== '/') {\n            directoryName += '/';\n        }\n        if (this.files.indexOf(directoryName) !== -1) {\n            throw new Error('item with same name already exist');\n        }\n        this.files.push(directoryName);\n    };\n    /**\n     * gets item at specified index\n     * @param {number} index - item index\n     * @returns {ZipArchiveItem}\n     */\n    ZipArchive.prototype.getItem = function (index) {\n        if (index >= 0 && index < this.files.length) {\n            return this.files[index];\n        }\n        return undefined;\n    };\n    /**\n     * determines whether an element is in the collection\n     * @param {string | ZipArchiveItem} item - item to search\n     * @returns {boolean}\n     */\n    ZipArchive.prototype.contains = function (item) {\n        return this.files.indexOf(item) !== -1 ? true : false;\n    };\n    /**\n     * save archive with specified file name\n     * @param {string} fileName save archive with specified file name\n     * @returns {Promise<ZipArchive>}\n     */\n    ZipArchive.prototype.save = function (fileName) {\n        if (fileName === null || fileName === undefined || fileName.length === 0) {\n            throw new Error('ArgumentException: fileName cannot be null or undefined');\n        }\n        if (this.files.length === 0) {\n            throw new Error('InvalidOperation');\n        }\n        var zipArchive = this;\n        var promise;\n        return promise = new Promise(function (resolve, reject) {\n            zipArchive.saveInternal(fileName, false).then(function () {\n                resolve(zipArchive);\n            });\n        });\n    };\n    /**\n     * Save archive as blob\n     * @return {Promise<Blob>}\n     */\n    ZipArchive.prototype.saveAsBlob = function () {\n        var zipArchive = this;\n        var promise;\n        return promise = new Promise(function (resolve, reject) {\n            zipArchive.saveInternal('', true).then(function (blob) {\n                resolve(blob);\n            });\n        });\n    };\n    ZipArchive.prototype.saveInternal = function (fileName, skipFileSave) {\n        var _this = this;\n        var zipArchive = this;\n        var promise;\n        return promise = new Promise(function (resolve, reject) {\n            var zipData = [];\n            var dirLength = 0;\n            for (var i = 0; i < zipArchive.files.length; i++) {\n                var compressedObject = _this.getCompressedData(_this.files[i]);\n                compressedObject.then(function (data) {\n                    dirLength = zipArchive.constructZippedObject(zipData, data, dirLength, data.isDirectory);\n                    if (zipData.length === zipArchive.files.length) {\n                        var blob = zipArchive.writeZippedContent(fileName, zipData, dirLength, skipFileSave);\n                        resolve(blob);\n                    }\n                });\n            }\n        });\n    };\n    /**\n     * release allocated un-managed resource\n     * @returns {void}\n     */\n    ZipArchive.prototype.destroy = function () {\n        if (this.files !== undefined && this.files.length > 0) {\n            for (var i = 0; i < this.files.length; i++) {\n                var file = this.files[i];\n                if (file instanceof ZipArchiveItem) {\n                    file.destroy();\n                }\n                file = undefined;\n            }\n            this.files = [];\n        }\n        this.files = undefined;\n        this.level = undefined;\n    };\n    ZipArchive.prototype.getCompressedData = function (item) {\n        var zipArchive = this;\n        var promise = new Promise(function (resolve, reject) {\n            if (item instanceof ZipArchiveItem) {\n                var reader_1 = new FileReader();\n                reader_1.onload = function () {\n                    var input = new Uint8Array(reader_1.result);\n                    var data = {\n                        fileName: item.name, crc32Value: 0, compressedData: [],\n                        compressedSize: undefined, uncompressedDataSize: input.length, compressionType: undefined,\n                        isDirectory: false\n                    };\n                    if (zipArchive.level === 'Normal') {\n                        zipArchive.compressData(input, data, crc32Table);\n                        var length_1 = 0;\n                        for (var i = 0; i < data.compressedData.length; i++) {\n                            length_1 += data.compressedData[i].length;\n                        }\n                        data.compressedSize = length_1;\n                        data.compressionType = '\\x08\\x00'; //Deflated = 8\n                    }\n                    else {\n                        data.compressedSize = input.length;\n                        data.crc32Value = zipArchive.calculateCrc32Value(0, input, crc32Table);\n                        data.compressionType = '\\x00\\x00'; // Stored = 0\n                        data.compressedData.push(input);\n                    }\n                    resolve(data);\n                };\n                reader_1.readAsArrayBuffer(item.data);\n            }\n            else {\n                var data = {\n                    fileName: item, crc32Value: 0, compressedData: '', compressedSize: 0, uncompressedDataSize: 0,\n                    compressionType: '\\x00\\x00', isDirectory: true\n                };\n                resolve(data);\n            }\n        });\n        return promise;\n    };\n    ZipArchive.prototype.compressData = function (input, data, crc32Table) {\n        var compressor = new CompressedStreamWriter(true);\n        var currentIndex = 0;\n        var nextIndex = 0;\n        do {\n            if (currentIndex >= input.length) {\n                compressor.close();\n                break;\n            }\n            nextIndex = Math.min(input.length, currentIndex + 16384);\n            var subArray = input.subarray(currentIndex, nextIndex);\n            data.crc32Value = this.calculateCrc32Value(data.crc32Value, subArray, crc32Table);\n            compressor.write(subArray, 0, nextIndex - currentIndex);\n            currentIndex = nextIndex;\n        } while (currentIndex <= input.length);\n        data.compressedData = compressor.compressedData;\n        compressor.destroy();\n    };\n    ZipArchive.prototype.constructZippedObject = function (zipParts, data, dirLength, isDirectory) {\n        var extFileAttr = 0;\n        var date = new Date();\n        if (isDirectory) {\n            extFileAttr = extFileAttr | 0x00010; // directory flag\n        }\n        extFileAttr = extFileAttr | (0 & 0x3F);\n        var header = this.writeHeader(data, date);\n        var localHeader = 'PK\\x03\\x04' + header + data.fileName;\n        var centralDir = this.writeCentralDirectory(data, header, dirLength, extFileAttr);\n        zipParts.push({ localHeader: localHeader, centralDir: centralDir, compressedData: data });\n        return dirLength + localHeader.length + data.compressedSize;\n    };\n    ZipArchive.prototype.writeHeader = function (data, date) {\n        var zipHeader = '';\n        zipHeader += '\\x0A\\x00' + '\\x00\\x00'; // version needed to extract & general purpose bit flag\n        zipHeader += data.compressionType; // compression method Deflate=8,Stored=0\n        zipHeader += this.getBytes(this.getModifiedTime(date), 2); // last modified Time\n        zipHeader += this.getBytes(this.getModifiedDate(date), 2); // last modified date\n        zipHeader += this.getBytes(data.crc32Value, 4); // crc-32 value\n        zipHeader += this.getBytes(data.compressedSize, 4); // compressed file size\n        zipHeader += this.getBytes(data.uncompressedDataSize, 4); // uncompressed file size\n        zipHeader += this.getBytes(data.fileName.length, 2); // file name length\n        zipHeader += this.getBytes(0, 2); // extra field length\n        return zipHeader;\n    };\n    ZipArchive.prototype.writeZippedContent = function (fileName, zipData, localDirLen, skipFileSave) {\n        var cenDirLen = 0;\n        var buffer = [];\n        for (var i = 0; i < zipData.length; i++) {\n            var item = zipData[i];\n            cenDirLen += item.centralDir.length;\n            buffer.push(this.getArrayBuffer(item.localHeader));\n            while (item.compressedData.compressedData.length) {\n                buffer.push(item.compressedData.compressedData.shift().buffer);\n            }\n        }\n        for (var i = 0; i < zipData.length; i++) {\n            buffer.push(this.getArrayBuffer(zipData[i].centralDir));\n        }\n        buffer.push(this.getArrayBuffer(this.writeFooter(zipData, cenDirLen, localDirLen)));\n        var blob = new Blob(buffer, { type: 'application/zip' });\n        if (!skipFileSave) {\n            Save.save(fileName, blob);\n        }\n        return blob;\n    };\n    ZipArchive.prototype.writeCentralDirectory = function (data, localHeader, offset, externalFileAttribute) {\n        var directoryHeader = 'PK\\x01\\x02' +\n            this.getBytes(0x0014, 2) + localHeader + // inherit from file header\n            this.getBytes(0, 2) + // comment length\n            '\\x00\\x00' + '\\x00\\x00' + // internal file attributes \n            this.getBytes(externalFileAttribute, 4) + // external file attributes\n            this.getBytes(offset, 4) + // local fileHeader relative offset\n            data.fileName;\n        return directoryHeader;\n    };\n    ZipArchive.prototype.writeFooter = function (zipData, centralLength, localLength) {\n        var dirEnd = 'PK\\x05\\x06' + '\\x00\\x00' + '\\x00\\x00' +\n            this.getBytes(zipData.length, 2) + this.getBytes(zipData.length, 2) +\n            this.getBytes(centralLength, 4) + this.getBytes(localLength, 4) +\n            this.getBytes(0, 2);\n        return dirEnd;\n    };\n    ZipArchive.prototype.getArrayBuffer = function (input) {\n        var a = new Uint8Array(input.length);\n        for (var j = 0; j < input.length; ++j) {\n            a[j] = input.charCodeAt(j) & 0xFF;\n        }\n        return a.buffer;\n    };\n    ZipArchive.prototype.getBytes = function (value, offset) {\n        var bytes = '';\n        for (var i = 0; i < offset; i++) {\n            bytes += String.fromCharCode(value & 0xff);\n            value = value >>> 8;\n        }\n        return bytes;\n    };\n    ZipArchive.prototype.getModifiedTime = function (date) {\n        var modTime = date.getHours();\n        modTime = modTime << 6;\n        modTime = modTime | date.getMinutes();\n        modTime = modTime << 5;\n        return modTime = modTime | date.getSeconds() / 2;\n    };\n    ZipArchive.prototype.getModifiedDate = function (date) {\n        var modiDate = date.getFullYear() - 1980;\n        modiDate = modiDate << 4;\n        modiDate = modiDate | (date.getMonth() + 1);\n        modiDate = modiDate << 5;\n        return modiDate = modiDate | date.getDate();\n    };\n    ZipArchive.prototype.calculateCrc32Value = function (crc32Value, input, crc32Table) {\n        crc32Value ^= -1;\n        for (var i = 0; i < input.length; i++) {\n            crc32Value = (crc32Value >>> 8) ^ crc32Table[(crc32Value ^ input[i]) & 0xFF];\n        }\n        return (crc32Value ^ (-1));\n    };\n    return ZipArchive;\n}());\nexport { ZipArchive };\n/**\n * Class represent unique ZipArchive item\n * ```typescript\n * let archiveItem = new ZipArchiveItem(archive, 'directoryName\\fileName.txt');\n * ```\n */\nvar ZipArchiveItem = /** @class */ (function () {\n    /**\n     * constructor for creating {ZipArchiveItem} instance\n     * @param {Blob|ArrayBuffer} data file data\n     * @param {itemName} itemName absolute file path\n     */\n    function ZipArchiveItem(data, itemName) {\n        if (data === null || data === undefined) {\n            throw new Error('ArgumentException: data cannot be null or undefined');\n        }\n        if (itemName === null || itemName === undefined) {\n            throw new Error('ArgumentException: string cannot be null or undefined');\n        }\n        if (itemName.length === 0) {\n            throw new Error('string cannot be empty');\n        }\n        this.data = data;\n        this.name = itemName;\n    }\n    Object.defineProperty(ZipArchiveItem.prototype, \"name\", {\n        /**\n         * Get the name of archive item\n         * @returns string\n         */\n        get: function () {\n            return this.fileName;\n        },\n        /**\n         * Set the name of archive item\n         * @param  {string} value\n         */\n        set: function (value) {\n            this.fileName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * release allocated un-managed resource\n     * @returns {void}\n     */\n    ZipArchiveItem.prototype.destroy = function () {\n        this.fileName = undefined;\n        this.data = undefined;\n    };\n    return ZipArchiveItem;\n}());\nexport { ZipArchiveItem };\n/**\n * construct cyclic redundancy code table\n */\n(function () {\n    var i;\n    for (var j = 0; j < 256; j++) {\n        i = j;\n        for (var k = 0; k < 8; k++) {\n            i = ((i & 1) ? (0xEDB88320 ^ (i >>> 1)) : (i >>> 1));\n        }\n        crc32Table[j] = i;\n    }\n})();\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            output.push(0);\n            output.push(value.charCodeAt(i));\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isImageStream = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isFontStream = false;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isImage\", {\n        /**\n         * Gets or sets 'is image' flag.\n         * @private\n         */\n        get: function () {\n            return this.isImageStream;\n        },\n        set: function (value) {\n            this.isImageStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isFont\", {\n        /**\n         * Gets or sets 'is font' flag.\n         * @private\n         */\n        get: function () {\n            return this.isFontStream;\n        },\n        set: function (value) {\n            this.isFontStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isImage && !this.isFont) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            // if (obj1 === null) {\n            //     throw new Error('ArgumentNullException : obj');\n            // }\n            this.primitiveObject = obj1;\n            // } else if (obj1 instanceof PdfPageBase\n            //             || obj1 instanceof PdfPage\n            //             || obj1 instanceof PdfSection\n            //             || obj1 instanceof PdfSectionCollection) {\n        }\n        else {\n            var tempObj = obj1;\n            this.constructor(tempObj.element);\n        }\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'number' && typeof color3 === 'number' &&\n            typeof color4 === 'undefined') {\n            this.constructor(PdfColor.maxColourChannelValue, color1, color2, color3); //doubt-byte/float\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'number' && typeof color3 === 'number' && typeof color4 === 'number') {\n            this.redColor = color2;\n            this.cyanColor = 0;\n            this.greenColor = color3;\n            this.magentaColor = 0;\n            this.blueColor = color4;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.alpha = color1;\n            this.filled = true;\n            this.assignCMYK(color2, color3, color4);\n        }\n    }\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        return this.rgbToString(stroke);\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n            default:\n                throw new Error('NotSupportedException : Unsupported colour space.');\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        if (typeof arg1 === 'undefined') {\n            this.internalLineLimit = true;\n            this.wordWrapType = PdfWordWrapType.Word;\n        }\n        else if (typeof arg1 === 'string') {\n            this.constructor();\n        }\n        else {\n            if (typeof arg2 === 'undefined') {\n                this.constructor();\n                this.textAlignment = arg1;\n            }\n            else {\n                this.constructor(arg1);\n                this.verticalAlignment = arg2;\n            }\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            // if (!lineResult.Empty) {\n            var numSymbolsInserted = 0;\n            /* tslint:disable */\n            var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n            /* tslint:enable */\n            var success = returnedValue.success;\n            numSymbolsInserted = returnedValue.numInserted;\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() == PdfWordWrapType.None)\n                        break;\n                    if (this.getWrapType() != PdfWordWrapType.Character || !readWord) {\n                        var ln = builder.toString();\n                        if (ln.indexOf(' ') === -1) {\n                            isSingleWord = true;\n                            this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                        }\n                        else {\n                            this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                        }\n                        if (this.isOverloadWithPosition) {\n                            maxWidth = this.clientSize.width;\n                        }\n                        curLine = '';\n                        builder = '';\n                        lineWidth = 0;\n                        curIndent = 0;\n                        curLineWidth = 0;\n                        lineType = LineType.None;\n                        if (isSingleWord) {\n                            reader.readWord();\n                            readWord = false;\n                        }\n                        word = (readWord) ? word : reader.peekWord();\n                        isSingleWord = false;\n                        readWord = true;\n                    }\n                    else {\n                        readWord = false;\n                        curLine = curLine + builder.toString();\n                        word = reader.peek().toString();\n                    }\n                    continue;\n                }\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n        /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n            var expHeight = height + lineResult.lineHeight;\n            var info = lineResult.lines[i];\n            numInserted += info.text.length;\n            info = this.trimLine(info, (lines.length === 0));\n            lines.push(info);\n            // Update width.\n            var size_1 = result.actualSize;\n            size_1.width = Math.max(size_1.width, info.width);\n            result.size = size_1;\n            height = expHeight;\n        }\n        var size = result.actualSize;\n        size.height = height;\n        result.size = size;\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        // let trimStartSpaces : boolean = ((info.LineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            lineWidth += this.getLineIndent(firstLine);\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substring(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    this.currentPosition++;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substring(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","import { StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { Encoding } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        if (typeof free === 'undefined') {\n            var tempOffset = offset;\n            this.offsetNumber = tempOffset;\n            var tempReference = reference;\n            this.generation = tempReference.genNumber;\n            this.object = tempReference.objNumber;\n            this.type = ObjectType.Normal;\n        }\n        else {\n            var tempOffset = offset;\n            var tempReference = reference;\n            this.constructor(tempOffset, tempReference);\n            var tempFree = free;\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        /* tslint:disable */\n        if (String.fromCharCode(imgData.getBuffer(i + 2)) === 'J' && String.fromCharCode(imgData.getBuffer(i + 3)) === 'F' && String.fromCharCode(imgData.getBuffer(i + 4)) === 'I' && String.fromCharCode(imgData.getBuffer(i + 5)) === 'F' && imgData.getBuffer(i + 6) === 0) {\n            var length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n            while (i + length_1 < imgData.count) {\n                i += length_1;\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isImage = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (typeof arg2 === 'number') {\n            this.constructor(arg1);\n            this.width = arg2;\n        }\n        else if (typeof arg2 === 'undefined' && arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (typeof arg2 === 'undefined' && arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.constructor();\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n","var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n","/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n","/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n","var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n","/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n","/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n","/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n","/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n","/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n","/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n","/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n","/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n","/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n","/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n","/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var result = [];\n        for (var i = 0; i < this.position; i++) {\n            result.push(this.buffer[i]);\n        }\n        for (var i = 0; i < buff.length; i++) {\n            result.push(buff[i]);\n        }\n        for (var i = this.position; i < this.buffer.length; i++) {\n            result.push(this.buffer[i]);\n        }\n        this.buffer = result;\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n","/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[0], glyphChars.getValue(glyphCharKeys[0]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[0];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    /**\n     * Gets glyph's info by char code.\n     */\n    TtfReader.prototype.getGlyph = function (charCode) {\n        var obj = null;\n        var code = charCode.charCodeAt(0);\n        if (!this.metrics.isSymbol && this.microsoft !== null) {\n            if (this.microsoft.containsKey(code)) {\n                obj = this.microsoft.getValue(code);\n                if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = true;\n                }\n            }\n            else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                this.isFontPresent = false;\n            }\n        }\n        else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            if (this.maxMacIndex !== 0) {\n                code %= this.maxMacIndex + 1;\n            }\n            else {\n                code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n            }\n            if (this.macintosh.containsKey(code)) {\n                obj = this.macintosh.getValue(code);\n                this.isFontPresent = true;\n            }\n        }\n        // Fix for StackOverFlow exception in XPS to PDF converter\n        if (charCode === StringTokenizer.whiteSpace && obj === null) {\n            obj = new TtfGlyphInfo();\n        }\n        var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n        return glyph;\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isFont = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isFont = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isFont = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isFont = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        var fontProgram = null;\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n        this.fontProgram.clearStream();\n        this.fontProgram.isFont = true;\n        this.fontProgram.writeBytes(fontProgram);\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        this.getDescendantWidth();\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n            this.getResources = arg2;\n            this.canvasSize = arg1;\n            this.initialize();\n        }\n        else {\n            this.constructor(arg1, arg2, new PdfStreamWriter(arg3));\n        }\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, 0), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    }; /* tslint:enable */\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPath(temparg1, temparg2, false);\n        }\n    };\n    PdfGraphics.prototype.drawPath = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPath(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /* tslint:disable */\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            /* tslint:disable */\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent; /* tslint:enable */\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /* tslint:disable */\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && format.rightToLeft);\n        var useWordSpace = (format !== null && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        if (useWordSpace) {\n            var result = this.breakUnicodeLine(line, ttfFont, null);\n            var blocks = result.tokens;\n            var words = result.words;\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            var token = this.convertToUnicode(line, ttfFont);\n            var value = this.getUnicodeString(token);\n            this.streamWriter.showNextLineText(value);\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        /* tslint:enable */\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null) {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null) {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0);\n        /* tslint:disable */\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.Justify)); /* tslint:enable */\n        return shouldJustify;\n    };\n    /* tslint:disable */\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    /* tslint:disable */\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    /* tslint:enable */\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format != null && format.rightToLeft);\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    /* tslint:disable */\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n            this.bCSInitialized = true;\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            this.colorSpace = PdfColorSpace.Rgb;\n            /* tslint:disable */\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            /* tslint:enable */\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null) {\n            this.currentBrush = brush;\n            /* tslint:disable */\n            brush.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            /* tslint:enable */\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            /* tslint:disable */\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None; /* tslint:enable */\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                /* tslint:disable */\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /* tslint:disable */\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    /* tslint:enable */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            this.transformationMatrix = matrix;\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.pdfPage = page;\n            this.clipPageTemplates = true;\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (page == null) {\n                throw new Error('ArgumentNullException:page');\n            }\n            if (streamClipPageTemplates == null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.pdfPage = page;\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.constructor(page);\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        if (baseDictionary instanceof PdfDictionary) {\n            _this = _super.call(this, baseDictionary) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            // let savable : IPdfPrimitive = (arg1 as IPdfWrapper).Element;\n            // if (savable != null)\n            // {\n            //     let pattern : PdfDictionary = this.Items.getValue(this.dictionaryProperties.pattern) as PdfDictionary;\n            //     // Create a new pattern dictionary.\n            //     if (pattern == null) {\n            //         pattern = new PdfDictionary();\n            //         this.Items.setValue(this.dictionaryProperties.pattern, pattern);\n            //     }\n            //     pattern.Items.setValue(name, new PdfReferenceHolder(savable));\n            // }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    /**\n     * Initialize an `instance of GUID` class.\n     * @private\n     */\n    function Guid(stringValue) {\n        this.stringValue = stringValue || Guid.getNewGuidString();\n    }\n    Object.defineProperty(Guid, \"randomNumber\", {\n        /**\n         * Generate `Random number` for GUID.\n         * @private\n         */\n        get: function () {\n            Guid.guid = Guid.guid + 1;\n            Guid.guid = Guid.guid > 999999999999 ? 0 : Guid.guid;\n            return Guid.guid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the value of `GUID as string`.\n     * @private\n     */\n    Guid.prototype.toString = function () {\n        return this.stringValue;\n    };\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        var guid = 'abc7def4-ghi9-jkl2-m6n3-';\n        var temproaryString = 'opqrstuvwxyz';\n        var randomString = Guid.randomNumber.toString();\n        randomString = guid + temproaryString.substr(0, (12 - randomString.length)) + randomString;\n        return randomString;\n    };\n    /**\n     * static field to store `endding value of current GUID`.\n     * @private\n     */\n    Guid.guid = 0;\n    return Guid;\n}());\nexport { Guid };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (typeof pageSettings === 'undefined') {\n            this.constructor(document, document.pageSettings);\n        }\n        else {\n            this.pdfDocument = document;\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, true, foreground);\n        var documentTemplates = this.getDocumentTemplates(document, page, false, foreground);\n        var contains = (documentHeaders.length > 0 || documentTemplates.length > 0);\n        return contains;\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, headers, foreground) {\n        var templates = [];\n        if (headers) {\n            if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n                if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                    templates.push(document.template.getTop(page));\n                }\n            }\n            if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n                if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                    templates.push(document.template.getBottom(page));\n                }\n            }\n            if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n                if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                    templates.push(document.template.getLeft(page));\n                }\n            }\n            if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n                if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                    templates.push(document.template.getRight(page));\n                }\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, true, foreground);\n        var documentTemplates = this.getDocumentTemplates(document, page, false, foreground);\n        if (foreground) {\n            this.drawTemplatesHelper(layer, document, documentHeaders);\n            this.drawTemplatesHelper(layer, document, documentTemplates);\n        }\n        else {\n            this.drawTemplatesHelper(layer, document, documentHeaders);\n            this.drawTemplatesHelper(layer, document, documentTemplates);\n        }\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfPageOrientation } from './enum';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        /**\n         * Stores the previous pages's `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.previousPageOrientation = PdfPageOrientation.Portrait;\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            if (section.pageSettings.orientation !== this.previousPageOrientation) {\n                section = this.document.sections.add();\n                section.pageSettings.orientation = this.document.pageSettings.orientation;\n            }\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this = _super.call(this, _this) || this;\n        if (isMerging === true || isMerging === false || typeof isMerging !== 'undefined') {\n            var objects = new PdfMainObjectCollection();\n            _this.setMainObjectCollection(objects);\n            var crossTable = new PdfCrossTable();\n            crossTable.isMerging = isMerging;\n            crossTable.document = _this;\n            _this.setCrossTable(crossTable);\n            var catalog = new PdfCatalog();\n            _this.setCatalog(catalog);\n            objects.add(catalog);\n            catalog.position = -1;\n            _this.sectionCollection = new PdfSectionCollection(_this);\n            _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n            catalog.pages = _this.sectionCollection;\n        }\n        else {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            _this.constructor(false);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if ((typeof fontFamilyPrototype === 'number') && (typeof style === 'undefined')) {\n            _this.constructor(fontFamilyPrototype, size, PdfFontStyle.Regular);\n        }\n        else if ((typeof fontFamilyPrototype === 'number') && (typeof style !== 'undefined')) {\n            _this = _super.call(this, size, style) || this;\n            _this.pdfFontFamily = fontFamilyPrototype;\n            _this.checkStyle();\n            _this.initializeInternals();\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont) && (typeof style === 'undefined')) {\n            _this.constructor(fontFamilyPrototype.fontFamily, size, fontFamilyPrototype.style);\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont) && (typeof style !== 'undefined')) {\n            _this.constructor(fontFamilyPrototype.fontFamily, size, style);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        var _this = this;\n        if (typeof rectangle === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else {\n            _this = _super.call(this, rectangle) || this;\n        }\n        return _this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../enum';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    ElementLayouter.prototype.layout = function (param, isBoundsChanged) {\n        if (typeof isBoundsChanged === 'boolean' && isBoundsChanged === true) {\n            return this.layoutInternal(param, true);\n        }\n        else {\n            return this.layoutInternal(param);\n        }\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n                this.layoutType = PdfLayoutType.Paginate;\n            }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n                this.breakType = PdfLayoutBreakType.FitPage;\n            }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n                this.boundsSet = false;\n            }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        retval += this.generateNumber(intArabic, 1000, 'M');\n        retval += this.generateNumber(intArabic, 900, 'CM');\n        retval += this.generateNumber(intArabic, 500, 'D');\n        retval += this.generateNumber(intArabic, 400, 'CD');\n        retval += this.generateNumber(intArabic, 100, 'C');\n        retval += this.generateNumber(intArabic, 90, 'XC');\n        retval += this.generateNumber(intArabic, 50, 'L');\n        retval += this.generateNumber(intArabic, 40, 'XL');\n        retval += this.generateNumber(intArabic, 10, 'X');\n        retval += this.generateNumber(intArabic, 9, 'IX');\n        retval += this.generateNumber(intArabic, 5, 'V');\n        retval += this.generateNumber(intArabic, 4, 'IV');\n        retval += this.generateNumber(intArabic, 1, 'I');\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return numberstring.toString();\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        if (typeof arg2 === 'undefined') {\n            var angle = PdfPageRotateAngle.RotateAngle0;\n            this.destinationLocation = new PointF(0, this.destinationLocation.y);\n            this.pdfPage = arg1;\n        }\n        else if (arg2 instanceof PointF) {\n            this.constructor(arg1);\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.constructor(arg1);\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        // width = this.fontInternal.getLineWidth(line);\n        // let size : number = metrics.getSize(format);\n        // width *= (PdfFont.charSizeMultiplier * size);\n        // width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg2.width, arg2.height);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.constructor(arg1.width, arg1.height);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.constructor(0, 0, arg1, arg2);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.constructor(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.x = arg1;\n            this.y = arg2;\n            this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        }\n        else {\n            this.x = arg1;\n            this.y = arg2;\n            this.pdfTemplate = new PdfTemplate(arg3, arg4);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        if (bounds.x === -0) {\n            bounds.x = 0;\n        }\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = -actualBounds.x;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = -actualBounds.y;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = -actualBounds.x;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = -actualBounds.x;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = -actualBounds.x;\n                y = -actualBounds.y;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = -actualBounds.y + actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = -actualBounds.x;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        if (typeof left === 'undefined') {\n            //5.76 and 0 are taken from ms-word default table margins.\n            this.leftPad = this.rightPad = 5.76;\n            //0.5 is set for top and bottom by default.\n            this.bottom = this.topPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        /**\n         * Determine the value of the border is changed or not.\n         * @private\n         */\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        if (typeof row === 'undefined') {\n            this.gridRowSpan = 1;\n            this.colSpan = 1;\n        }\n        else {\n            this.constructor();\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return this.cellWidth;\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        if (backgroundBrush != null) {\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n            returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n            returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n            returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            if (this.rowSpan === 1) {\n                returnBounds.width -= (this.style.borders.left.width);\n            }\n        }\n        else {\n            returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n            returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n            returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            if (this.rowSpan === 1) {\n                returnBounds.width -= (this.style.borders.left.width);\n            }\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        var result = null;\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = this.adjustContentLayoutArea(bounds);\n        this.drawCellBackground(graphics, bounds);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            temp = this.remaining === '' ? this.remaining : this.objectValue;\n            graphics.drawString(temp, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            result = graphics.stringLayoutResult;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = void 0;\n            if (this.objectValue.width <= innerLayoutArea.width) {\n                imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);\n            }\n            else {\n                imageBounds = innerLayoutArea;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        if (this.style.borders != null) {\n            this.drawCellBorders(graphics, bounds);\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        // if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n        //     p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n        //     p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        // }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n    };\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1) {\n            var span = this.columnSpan;\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //     this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //     totalHeight = this.row.cells.getCell(cellIndex).height;\n            //     bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            // }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remainingString === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n        }\n        height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        //Add padding top and bottom value to height\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n        }\n        else {\n            height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        for (var i = 0; i < columnSpan; i++) {\n            width += this.row.grid.columns.getColumn(cellIndex + i).width;\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        // this.m_grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        // if(this.cells.getCell(0).RowSpan > 1) {\n        //     rowHeight=0;\n        // } else {\n        rowHeight = this.cells.getCell(0).height;\n        // }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.IsRowMergeContinue)\n            //     continue; \n            // if (!cell.IsRowMergeContinue)\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutResult, PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfHorizontalOverflowType } from './styles/style';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        var _this = this;\n        if (typeof baseFormat === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else {\n            _this = _super.call(this, baseFormat) || this;\n        }\n        return _this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginPageLayout\", {\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.pageWidth;\n        },\n        set: function (value) {\n            this.pageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.childGrid;\n        },\n        set: function (value) {\n            this.childGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if (this.gridSize.width === 0 && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n                return this.gridSize;\n            }\n            else {\n                return this.gridSize;\n            }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.layout = function (param, isGridLayouter) {\n        if (typeof isGridLayouter === 'undefined') {\n            this.setSpan();\n            this.layoutFormat = param.format;\n            this.gridLocation = param.bounds;\n            var result = this.layout(param, true);\n            return result;\n        }\n        else {\n            return this.layoutInternal(param);\n        }\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan;\n        var rowSpan = 1;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGrid.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGrid.prototype.layoutInternal = function (param) {\n        this.initialWidth = param.bounds.width;\n        var format = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.headers.count !== 0) {\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        if (param.bounds.height > 0 && !this.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        this.hType = this.style.horizontalOverflowType;\n        if (!this.style.allowHorizontalOverflow) {\n            this.measureColumnsWidth(this.currentBounds);\n            this.columnRanges.push([0, this.columns.count - 1]);\n        }\n        else {\n            this.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            var widths = this.columns.getDefaultWidths(bounds.width);\n            var tempWidth = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                this.columns.getColumn(i).width = widths[i];\n            }\n        }\n        else {\n            var widths = [];\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if (this.headers.count > 0) {\n                var colCount = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            else {\n                var colCount = this.rows.getRow(0).cells.count;\n                var rowCount = this.rows.count;\n                for (var i = 0; i < colCount; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            cellWidth = 0;\n            for (var i = 0, colCount = this.columns.count; i < colCount; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if (this.rows.getRow(j).cells.getCell(i).columnSpan == 1 || this.rows.getRow(j).cells.getCell(i).value !== null || this.rows.getRow(j).cells.getCell(i).rowSpan >= 1) {\n                        if (this.rows.getRow(j).cells.getCell(i).value !== null &&\n                            !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2\n                                + this.gridLocation.x;\n                            this.rows.getRow(j).cells.getCell(i).value.initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        var internalWidth = this.rows.getRow(j).cells.getCell(i).width;\n                        internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        var internalHeight = this.rows.getRow(j).cells.getCell(i).height;\n                        internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        var isCorrectWidth = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        var isCorrectHeight = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        if (isCorrectWidth || isCorrectHeight) {\n                            throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        }\n                        rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                this.columns.getColumn(i).width = widths[i];\n            }\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGrid.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.columns.count; i++) {\n            cellWidths += this.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGrid.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            // result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            // break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.headers.count; i_1++) {\n                var row = this.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                // if (headerHeight === this.currentBounds.y) {\n                //     drawHeader = true;\n                //     if (PdfGrid.repeatRowIndex === -1) {\n                //         PdfGrid.repeatRowIndex = this.rows.getRow.indexOf(row);\n                //     }\n                // } else {\n                drawHeader = false;\n                // }\n            }\n            var i = 0;\n            var length_1 = this.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.rows.count; j++) {\n                var row = this.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGrid.repeatRowIndex = -1;\n                var rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGrid.repeatRowIndex = this.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGrid.repeatRowIndex = -1;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPage(format);\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.repeatHeader) {\n                        for (var i_2 = 0; i_2 < this.headers.count; i_2++) {\n                            var header = this.headers.getHeader(i_2);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[0, 0]];\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPage(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    // this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.style.allowHorizontalOverflow && this.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    }; /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGrid.prototype.getNextPage = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        // if ((format.PaginateBounds.x !== format.PaginateBounds.y) && (format.PaginateBounds.y !== format.PaginateBounds.height)\n        //     && (format.PaginateBounds.height !== format.PaginateBounds.width) && (format.PaginateBounds.width !== 0)) {\n        //     this.currentBounds.x = format.PaginateBounds.x;\n        //     this.currentBounds.y = format.PaginateBounds.y;\n        //     this.currentBounds.height = format.PaginateBounds.height;\n        // }\n        return nextPage;\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGrid.prototype.getLayoutResult = function () {\n        var bounds;\n        /* tslint:disable */\n        bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y - this.startLocation.y));\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGrid.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        // for (let i : number = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n        //     if (!(row.cells.getCell(i).RemainingString === null || row.cells.getCell(i).RemainingString === '' ||\n        //           typeof row.cells.getCell(i).RemainingString === 'undefined')) {\n        //         newHeight = Math.max(newHeight, row.cells.getCell(i).MeasureHeight());\n        //     }\n        // }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGrid.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.beginPageLayout(this, args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGrid.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.raiseEndPageLayout) {\n            this.endPageLayout(this, args);\n        }\n        return args;\n    };\n    PdfGrid.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.\n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_1 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.headers.getHeader(i).height : this.rows.getRow(i).height);\n                }\n                var rowMaxHeight = rowHeightWithSpan;\n                for (var i = 0; i < row.cells.count; i++) {\n                    rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                }\n                var nextRow = this.headers.getHeader(this.headers.indexOf(row) + 1);\n                var flag = true;\n                for (var i = 0; i < nextRow.cells.count; i++) {\n                    if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                    row.height += (rowMaxHeight - rowHeightWithSpan);\n                }\n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                // If a row is repeated and still cannot fit in page, proceed draw.\n                // if (PdfGrid.repeatRowIndex > -1 && PdfGrid.repeatRowIndex === row.RowIndex) {\n                //     if (this.AllowRowBreakAcrossPages) {\n                //         result.IsFinish = true;\n                //         // this.DrawRowWithBreak(ref result, row, height);\n                //     } else {\n                //         result.IsFinish = false;\n                //         this.drawRow(row, result, height);\n                //     }\n                // } else {\n                result_1.isFinish = false;\n                // }\n            }\n            else {\n                result_1.isFinish = true;\n                this.drawRow(row, result_1, calculatedHeight);\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_2 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            result.bounds = new RectangleF(location_2, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.ClientSize.width) {\n                //     size.width = this.currentGraphics.ClientSize.width;\n                // }\n                // if (this.IsChildGrid && this.style.AllowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.ClientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_2, size), tempValue, cellstyle);\n                // if (!skipcell) {\n                // let stringResult : PdfStringLayoutResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n                var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_2, size), cancelSpans);\n                if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                    row.rowOverflowIndex = this.cellEndIndex;\n                }\n                if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan > this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) && row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                    row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ? stringResult.remainder : '' : '';\n                    row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                    row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                    row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                }\n                // }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                this.RaiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_2, size), tempValue, row.cells.getCell(i).style);\n                location_2.x += this.columns.getColumn(i).width;\n            }\n            // if (!row.RowMergeComplete || row.isRowHeightSet) {\n            this.currentBounds.y += height;\n            // }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_2.x, location_2.y));\n        }\n    };\n    /**\n     * Checks if the given format `is default format` or not.\n     * @private\n     */\n    PdfGrid.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGrid.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.beginCellDraw(this, args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGrid.prototype.RaiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Rearranges the pages`.\n     * @private\n     */\n    PdfGrid.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGrid.repeatRowIndex = -1;\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n/**\n * `GridCellEventArgs` class is alternate for grid events.\n */\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\n/**\n * `PdfGridBeginCellDrawEventArgs` class is alternate for begin cell draw events.\n */\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\n/**\n * `PdfGridEndCellDrawEventArgs` class is alternate for end cell draw events.\n */\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\n/**\n * `PdfGridCancelEventArgs` class is alternate for cancel events.\n */\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\n/**\n * `BeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\n/**\n * `RowLayoutResult` class to store layout result of rows.\n */\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n/**\n * `PdfGridLayoutResult` class represents the results of the PdfGrid including bounds and resultant page.\n */\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridLayoutResult` class with the current page and bounds.\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n"],"names":["defaultToString","item","Object","prototype","toString","call","validateNullOrUndefined","value","message","undefined","Error","Dictionary","toStringFunction","this","table","nElements","toStr","getValue","key","pair","setValue","k","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","PdfName","stringStartMark","internalValue","isSaving6","position6","normalizeValue","defineProperty","get","status6","set","enumerable","configurable","index6","val","save","writer","write","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","forTest","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","w","cIDFontType2","cIDToGIDMap","identity","dw","fontDescriptor","cIDSystemInfo","fontName","flags","fontBBox","missingWidth","stemV","italicAngle","capHeight","ascent","descent","leading","avgWidth","fontFile2","maxWidth","xHeight","stemH","registry","ordering","supplement","type0","identityH","toUnicode","descendantFonts","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","object","archive","isFont","encrypt","dictionaryProperties","items","index","status","freezeChanges","status7","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","Count","saveItems","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","position5","integer","status5","isSaving5","index5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","array","startMark","endMark","position9","clonedObject9","internalElements","tempArray","elements","tempNumberArray","pdfNumber","add","status9","isSaving9","index9","pdfCrossTable","element","markedChange","contains","tempElement","inputElement","getItems","len","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","Save","fileName","buffer","extension","substring","lastIndexOf","mimeType","getMimeType","Blob","isMicrosoftBrowser","navigator","msSaveBlob","downloadLink","document","createElementNS","saveInternal","hasDownloadAttribute","download","dataUrl_1","window","URL","createObjectURL","href","event_1","createEvent","initEvent","dispatchEvent","setTimeout","revokeObjectURL","url","open","location","reader_1","FileReader","onloadend","readAsDataURL","Encoding","includeBom","emitBOM","encodingType","initBOM","getByteCount","chars","utf8Len","charCodeAt","getByteCountInternal","codePoint","isHighSurrogate","codeUnit","toCodepoint","highCodeUnit","lowCodeUnit","charIndex","charCount","byteCount","isUtf8","charCode","high","low","getBytes","RangeError","ArrayBuffer","getBytesOfUtf8Encoding","getBytesOfUnicodeEncoding","getBytesOfAnsiEncoding","getString","bytes","byteLength","out","byteCal","Uint8Array","getStringOfUtf8Encoding","byteUnicode","Uint16Array","getStringofUnicodeEncoding","j","String","fromCharCode","bufview","charcode","uint","uint16","byteUni","byte16","apply","destroy","StreamWriter","bufferBlob","bufferText","init","flush","enc","setBomByte","arrayUnicode","uint8","arrayUtf8","utf8","bufferArray","writeLine","arrLiteralCodes","Int16Array","arrLiteralLengths","arrDistanceCodes","arrDistanceLengths","CompressedStreamWriter","noWrap","pendingBuffer","pendingBufLength","pendingBufCache","pendingBufBitsInCache","bufferPosition","extraBits","currentHash","matchStart","matchLength","matchPrevAvail","blockStart","stringStart","lookAhead","totalBytesIn","inputOffset","inputEnd","windowSize","windowMask","hashSize","hashMask","hashShift","floor","maxDist","checkSum","treeLiteral","CompressorHuffmanTree","treeDistances","treeCodeLengths","arrDistances","arrLiterals","dataWindow","hashHead","hashPrevious","writeZLibHeader","compressedString","data","offset","end","encode","inputBuffer","ChecksumCalculator","checksumUpdate","pendingBufferFlush","compressData","headerDate","pendingBufferWriteShortBytes","finish","success","fillWindow","canFlush","compressSlow","lookAheadCompleted","slideWindow","prevMatch","prevLen","discardMatch","matchPreviousBest","matchPreviousAvailable","huffmanIsFull","insertString","findLongestMatch","huffmanTallyLit","huffmanTallyDist","huffmanFlushBlock","lastBlock","more","subarray","updateHash","m","match","hash","curMatch","chainLen","niceLen","scan","bestEnd","bestLength","max","limit","stringEnd","scanEnd1","scanEnd","literal","codeFrequencies","dist","lc","huffmanLengthCode","dc","huffmanDistanceCode","stored","storedOffset","storedLength","buildTree","calculateBLFreq","blTreeCodes","codeLengths","huffCodeLengthOrders","opt_len","getEncodedLength","static_len","huffmanFlushStoredBlock","pendingBufferWriteBits","setStaticCodes","huffmanCompressBlock","huffmanReset","huffmanSendAllTrees","pendingBufferAlignToByte","pendingBufferWriteShort","pendingBufferWriteByteBlock","code","distance","buildCodes","treeLength","rank","writeTree","reset","literalLen","writeCodeToStream","bits","b","Uint32Array","pendingBufferFlushBits","isClose","close","elementCount","minCodes","maxLength","codeMinCount","codeFrequency","lengthCount","Int32Array","codeCount","codeLength","codes","lengths","temp","lengthTemp","nextCode","bitsCount","bitReverse","reverseBits","blTree","maxCount","minCount","curLen","nextLen","maxRepeatCount","minRepeatCount","currentRepeatCount","currentCodeLength","codesCount","arrTree","freq","pos","pPos","nodesCount","child","node","iIndex","constructHuffmanTree","buildLength","first","last","lastVal","path","second","minDepth","numNodes","numLeafs","overflow","calculateOptimalCodeLength","iIncreasableLength","recreateTree","nodePtr","childPtr","childIndex","bitLength","checksum","checksum_uint","s1","s2","checkSumBitOffset","steps","checksumIterationCount","checksumBase","crc32Table","ZipArchive","files","level","addItem","file","ZipArchiveItem","name","addDirectory","directoryName","slice","getItem","zipArchive","Promise","resolve","reject","then","saveAsBlob","blob","skipFileSave","_this","zipData","dirLength","getCompressedData","constructZippedObject","isDirectory","writeZippedContent","onload","input","crc32Value","compressedData","compressedSize","uncompressedDataSize","compressionType","length_1","calculateCrc32Value","readAsArrayBuffer","compressor","currentIndex","nextIndex","subArray","zipParts","extFileAttr","date","Date","writeHeader","localHeader","centralDir","writeCentralDirectory","zipHeader","getModifiedTime","getModifiedDate","localDirLen","cenDirLen","getArrayBuffer","shift","writeFooter","externalFileAttribute","centralLength","localLength","modTime","getHours","getMinutes","getSeconds","modiDate","getFullYear","getMonth","getDate","itemName","InternalEnum","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","hasOwnProperty","__","constructor","create","PdfStream","_super","dicPrefix","dicSuffix","clonedObject2","bCompress","isImageStream","isFontStream","dataStream2","bCompress2","clearStream","internalStream","text","writeBytes","onCmapBeginSave","cmapBeginSave","onFontProgramBeginSave","fontProgramBeginSave","compressContent","byteArray","dataArray","sw","getCompressedString","addFilter","filterName","PdfReferenceHolder","isImage","bytesToString","output","SaveCmapEventHandler","SaveFontProgramEventHandler","ForceEncoding","SourceType","PdfHorizontalAlignment","PdfString","bHex","position1","clonedObject1","bDecrypted","isParentDecrypted","isPacked","isFormField","isColorSpace","isHexString","status1","isSaving1","bConverted","bForceEncoding","bytesToHex","Ascii","pdfEncode","stringMark","escapeSymbols","currentData","CrossTable","newString","toUnicodeArray","bAddPrefix","byteToString","hexStringMark","hexFormatPattern","PdfReference","objNumber","genNumber","index3","position3","Number","status3","isSaving3","obj1","obj2","index4","position4","objectIndex","primitiveObject","tempObj","status4","isSaving4","pdfReference","position","cTable","isSaving","getReference","PdfAction","initialize","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfFontStyle","PdfColor","color1","color2","color3","color4","redColor","greenColor","g","blueColor","grayColor","gray","alpha","filled","maxColourChannelValue","cyanColor","magentaColor","yellowColor","blackColor","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","rgbToString","ifStroking","colour","rgbStrings","toArray","Rgb","grayStringsSroke","grayStringsFill","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","Rectangle","left","top","right","bottom","topLeft","PdfBrush","PdfSolidBrush","color","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags","LineType","PdfStringFormat","scalingFactor","internalLineLimit","wordWrapType","Word","textAlignment","verticalAlignment","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","trailingSpaces","isNoClip","initialLineIndent","StringTokenizer","textValue","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","text2","peekLine","line","readWord","substr","peekWord","word","read","peek","symbol","tab","spaces","whiteSpacePattern","PdfStringLayouter","isOverloadWithPosition","layout","arg5","arg6","arg7","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lineResult","lines","lineIndent","getLineIndent","layoutLine","numSymbolsInserted","returnedValue","copyToResult","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","lineWidth","lineType","FirstParagraphLine","round","addToLineResult","NewLineBreak","builder","curLine","curIndent","isSingleWord","curLineWidth","getWrapType","Character","ln","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","lineLimit","maxHeight","expHeight","lineHeight","trimLine","size_1","rightToLeft","trim","wordWrap","textRemainder","empty","content","ObjectStatus","PdfFont","style","fontStyle","Regular","fontSize","setStyle","metrics","getHeight","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","PdfWriter","pdfDocument","overload","tempOverload","ObjectType","PdfMainObjectCollection","objectCollections","mainObjectCollection","primitiveObjectCollection","isNew","objInfo","ObjectInfo","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","_i","_a","pdfObject","objectCollectionIndex","PdfDocumentBase","isStreamCopied","PdfDocument","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","SW","encoding_1","SW_1","blobData","docSave","PdfPageOrientation","PdfCatalog","sections","tempDictionaryProperties","PdfCrossTable","maxGenNumIndex","objectCount","merging","internalTrailer","pdfObjects","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","str","Free","generation","isFree","addOffsetLength","addGenNumberLength","total","split","version","generateFileVersion","bNew","getSubReference","objnumber","nextObjNumber","tempIndex","tempkey","tempvalue","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","dereference","rh","tempOffset","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","ImageFormat","PdfMargins","pdfMargin","setMargins","leftMargin","topMargin","rightMargin","bottomMargin","margin1","margin2","margin3","margin4","PdfPageSettings","margins","pageMargins","pageSize","rotateAngle","RotateAngle0","pageOrientation","Portrait","pageOrigin","isRotation","setSize","orientation","updateSize","Landscape","settings","getActualSize","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","showText","checkTextParam","writeText","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","setColorSpace","temparg1","op","matrix","opcode","start","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Solid","pdfLineCap","pdfLineJoin","penWidth","internalMiterLimit","setBrush","Custom","Dash","Dot","DashDot","DashDotDot","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","radDegFactor","PI","transformationMatrix","Matrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","mValues","ReferenceError","splice","PdfTransparency","mode","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalTemplateSize","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","scalingX","scalingY","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","field","pageNumberFieldLocation","pageNumberField","ByteArray","mPosition","dataView","DataView","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","chr1","chr2","chr3","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","PdfBoolean","objectStatus","saving","boolToStr","PdfLayoutType","ImageDecoder","mFormat","Unknown","mbitsPerComponent","mStream","mHeight","mWidth","mImageData","internalBuffer","checkIfJpeg","Jpeg","parseJpegImage","imgData","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","dpi","updateProportionsHelper","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","pixelPerInch","horizontalResolution","verticalResolution","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","dpiX","dpiY","ucX","ucY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","imageStatus","loadImage","initializeAsync","decoder","TtfTableInfo","TtfNameTable","TtfNameRecord","TtfHeadTable","TtfMetrics","macStyle","TtfHorizontalHeaderTable","TtfOS2Table","TtfPostTable","TtfLongHorMetric","TtfCmapSubTable","TtfCmapTable","TtfGlyphInfo","compareTo","glyph","TtfLocaTable","TtfAppleCmapSubTable","TtfMicrosoftCmapSubTable","TtfTrimmedCmapSubTable","TtfGlyphHeader","BigEndianWriter","capacity","int32Size","int16Size","int64Size","bufferLength","internalPosition","writeShort","writeInt","writeUInt","buff","writeString","TtfReader","fontData","isTtcFont","isMacTtf","metricsName","isMacTTF","missedGlyphs","tableNames","entrySelectors","macintoshDictionary","microsoftDictionary","internalMacintoshGlyphs","internalMicrosoftGlyphs","readFontDictionary","nameTable","readNameTable","headTable","readHeadTable","initializeFontName","checkPreambula","numTables","readInt16","tableDirectory","tableKey","readString","readInt32","lowestPosition","fixOffsets","minOffset","MAX_VALUE","tableKeys","tableInfo","getTable","formatSelector","readUInt16","recordsCount","nameRecords","record","platformID","encodingID","languageID","nameID","unicode","readFixed","fontRevision","checkSumAdjustment","readUInt32","magicNumber","unitsPerEm","created","readInt64","modified","xMin","yMin","xMax","yMax","lowestReadableSize","fontDirectionHint","indexToLocalFormat","glyphDataFormat","readHorizontalHeaderTable","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","metricDataFormat","numberOfHMetrics","readOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","readBytes","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","vendorIdentifier","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","readPostTable","formatType","underlinePosition","underlineThickness","isFixedPitch","minType42","maxType42","minType1","maxType1","readWidthTable","glyphCount","advanceWidth","lsb","glyphWidth","readCmapTable","tablesCount","subTables","subTable","readCmapSubTable","getCmapEncoding","Macintosh","Microsoft","Apple","readAppleCmapTable","readMicrosoftCmapTable","Trimmed","readTrimmedCmapTable","maxMacIndex","glyphInfo","getWidth","macintosh","addGlyph","collection","Unicode","microsoft","segCountX2","searchRange","entrySelector","rangeShift","segCount","endCount","readUshortArray","reservedPad","startCount","idDelta","idRangeOffset","glyphID","codeOffset","id","Symbol","firstCode","entryCount","fontFamily","postScriptName","glyphCode","Undefined","Roman","microsoftGlyphs","macintoshGlyphs","initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","isSymbol","factor","winAscent","macAscent","winDescent","macDescent","ceil","fontBox","widthTable","updateWidth","subScriptSizeFactor","superscriptSizeFactor","getGlyph","byteToProcess","space","getDefaultGlyph","readLocaTable","bShort","offsets","updateGlyphChars","glyphChars","locaTable","glyphCharKeys","nextKey","processCompositeGlyph","glyphOffset","glyphHeader","numberOfContours","skipBytes","glyphIndex","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","generateGlyphTable","newLocaTable","newGlyphTable","activeGlyphs","sort","glyphSize","glyphSizeAligned","align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","glyphTableSize","updateLocaTable","bLocaIsShort","newLocaTableOut","newLocaUpdated","newLocaSize","getFontProgram","locaTableSize","getFontProgramLength","fontProgramLength","writeCheckSums","writeGlyphs","tableName","usedTablesSize","nextTableSize","calculateCheckSum","byte1","byte2","byte3","byte4","i_1","setOffset","createInternals","bIsLocaShort","isFontPresent","getGlyphChars","charKeys","getAllGlyphs","allGlyphInfo","readFontProgram","result1","result2","convertString","getCharWidth","isUnicode","i1","i2","i3","i4","written","PdfFontMetrics","getAscent","getDescent","getLineGap","clearTypeFonts","clearTypeFontCollection","subSuperScript","SubScript","SuperScript","WidthTable","internalWidthTable","StandardWidthTable","widths","swt","UnicodeTrueTypeFont","base64String","nameString","isCompress","cmapPrefix","cmapEndCodespaceRange","cmapBeginRange","cmapEndRange","cmapSuffix","fontString","Initialize","ttfReader","ttfMetrics","fontDictionary","fontProgram","cmap","descendantFont","subsetName","getFontName","createDescendantFont","createCmap","createFontDictionary","createFontProgram","isBold","random","formatName","ret","createFontDescriptor","systemInfo","createSystemInfo","descriptor","getDescriptorFlags","getBoundBox","descFonts","usedChars","getDescendantWidth","generateCmap","generateFontProgram","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","middlePart","toHexString","nextRange","FixedPitch","Symbolic","Nonsymbolic","isItalic","ForceBold","abs","isCaseChange","toUpperCase","setSymbols","PdfGraphics","previousTextRenderingMode","Fill","previousCharacterSpacing","previousWordSpacing","previousTextScaling","procedureSets","isNormalRender","isUseFontSize","isEmfTextScaled","isEmf","isEmfPlus","isBaselineFormat","emfScalingFactor","colorSpaceChanged","isPointOverload","currentColorSpaces","isImageOptimized","graphicsState","istransparencySet","internalAutomaticFields","startCutIndex","pdfStreamWriter","canvasSize","pdfStringLayoutResult","internalMediaBoxUpperRightBound","clipBounds","pageLayer","bStateSaved","currentBrush","currentFont","bCSInitialized","currentStringFormat","requireProcedureSet","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","name_1","getName","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","drawLine","stateControl","drawRectangle","drawPath","Winding","isPen","isBrush","isEvenOdd","Alternate","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","layer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","resultHeight","remainingString","drawLayoutResult","underlineStrikeoutText","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","ttfFont","isEmbedFont","lineInfo","hAlignShift","drawUnicodeLine","drawAsciiLine","useWordSpace","Justify","justifyLine","breakUnicodeLine","blocks","tokens","words","drawUnicodeBlocks","token","convertToUnicode","getUnicodeString","xShift","spaceWidth","tokenWidth","converted","fontInternal","boundsWidth","hasWordSpacing","whitespacesCount","wordSpace","initializeCoordinates","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","x1","FillStroke","Stroke","ClipFlag","layoutBounds","firstParagraphLine","Left","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","curSubSuper","prevSubSuper","setTransparency","trasparencies","transp","td","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","doRestoreState","pop","pathTypesValuesMask","transparencyObject","GetResourceEventHandler","internalTextRenderingMode","internalTextScaling","pdfColorSpace","pdfGraphics","pdfPen","pdfFont","alphaPen","alphaBrush","blendMode","PdfPageLayer","streamClipPageTemplates","isVisible","sublayer","contentLength","pdfPage","clipPageTemplates","layerid","layerName","initializeGraphics","PdfPageLayerCollection","sign","oPage","gr","sc","isSame","origin","clipRect","getActualBounds","pageSettings","PdfCollection","parentLayerCount","optionalContent","PdfPageBase","lPage","parseLayers","list","firstArgument","secondArgument","addLayer","insertLayer","loadedPage","saveStream","restoreStream","saveData","PdfTemplate","writeTransformation","tempSize","templateSize","PdfResources","addType","addSubType","baseDictionary","properties","getNames","primitive","names","sName","generateName","pdfNames","fonts","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","guid","randomString","randomNumber","defLayerIndex","pageDictionary","pdfSection","layers","defaultLayerIndex","layerCollection","res","PdfAnnotationCollection","alreadyExistsAnnotationError","missingAnnotationException","internalAnnotations","lists","annotation","doAdd","destination","setPage","layoutResult","lastPosition","setColor","colours","PdfPage","annotationCollection","defaultLayer","parentDocument","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","containsTemplates","backLayer","drawTemplates","frontLayer","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","pageAdded","pdfPages","initialSettings","sectionCollection","pagesReferences","pageTemplate","pagesCollection","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","documentTemplates","headers","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","args","onPageAdded","document_1","getLeftIndentWidth","top_1","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","drawTemplatesHelper","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","forEach","PdfDocumentPageCollection","pdfPageCollectionIndex","previousPageOrientation","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","referenceObjects","pdfFontCollection","search","group","getGroup","createNewGroup","tGroup","representative","removeGroup","isMerging","defaultMargin","documentPageCollection","cacheCollection","defaultStandardFont","PdfStandardFont","Helvetica","isCacheEnabled","Cmyk","GrayScale","checkPagesPresence","cache","PdfStandardFontMetricsFactory","getMetrics","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","arialWidth","helveticaAscent","helveticaDescent","helveticaName","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","fixedWidth","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","fontFamilyPrototype","encodings","pdfFontFamily","checkStyle","initializeInternals","convert","getCharWidthInternal","equal","stFont","fontFamilyEqual","lineReducer","styleEqual","WinAnsiEncoding","charOffset","PdfAnnotation","textBrush","textFont","internalColor","darkness","nativeRectangle","initialHeight","tempLoacation","PdfLinkAnnotation","PdfActionLinkAnnotation","pdfAction","getSetAction","PdfDocumentLinkAnnotation","pdfDestination","PdfLayoutBreakType","PdfDestinationMode","ElementLayouter","layoutElement","getElement","param","isBoundsChanged","layoutInternal","PdfLayoutFormat","baseFormat","break","paginateBounds","boundsSet","usePaginateBounds","layoutType","Paginate","FitPage","layoutPaginateBounds","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfLayoutElement","bEmbedFonts","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","PdfTextElement","elementValue","hasPointOverload","isPdfTextElement","drawText","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","previousFontStyle","calculateBounds","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","generateNumber","arabic","stack","convertToLetter","num","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","arguments","internalText","automaticField","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfBorderOverlapStyle","PdfDestination","destinationMode","Location","zoomFactor","destinationLocation","initializePrimitive","simplePage","FitToPage","PdfTrueTypeFont","createFontInternal","codeWidth","calculateStyle","iStyle","equalFont","enableCache","isEmbed","isUnicodeFont","PdfPageTemplateElement","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","currentLocation","templateType","updateDocking","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","getSimpleDockBounds","getTemplateDockBounds","PdfBorders","defaultBorderPenLeft","dashStyle","defaultBorderPenRight","defaultBorderPenTop","defaultBorderPenBottom","leftPen","rightPen","topPen","bottomPen","PdfPaddings","leftPad","rightPad","topPad","bottomPad","PdfHorizontalOverflowType","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","PdfGridStyle","gridBorderOverlapStyle","Overlap","bAllowHorizontalOverflow","gridHorizontalOverflowType","LastPage","gridCellSpacing","gridCellPadding","PdfGridCellStyle","gridCellBorders","default","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","PdfGridCell","row","cellWidth","cellHeight","finsh","rowSpanRemainingHeight","gridRowSpan","colSpan","gridRow","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","objectValue","rowSpanExists","cellStyle","measureHeight","columnSpanExists","grid","isComplete","measureWidth","layouter","getTextFont","webLink","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","adjustContentLayoutArea","returnBounds","rowSpan","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","getTextPen","getTextBrush","strFormat","getStringFormat","innerLayoutArea","imageBounds","drawCellBorders","borderOverlapStyle","Inside","p1","p2","Square","isHeader","currentColIndex","columnSpan","span","totalWidth","compWidth","getColumn","currentRowIndex","rows","rowCollection","totalHeight","getHeader","getRow","rowMergeComplete","calculateWidth","currentValue","slr","cellIndex","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","gridRowOverflowIndex","isRowHeightSet","isRowMergeComplete","pdfGrid","bRowSpanExists","gridCells","rowStyle","border","gridRowBreakHeight","rowHeight","bColumnSpanExists","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","PdfGridLayoutFormat","PdfGrid","gridSize","isRearranged","pageBounds","listOfNavigatePages","flag","columnRanges","breakRow","beginCellDraw","endCellDraw","beginPageLayout","endPageLayout","bRepeatHeader","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","pageWidth","childGrid","measure","isGridLayouter","setSpan","gridLocation","currentCellIndex","rowCount","colCount","isCellMergeContinue","isRowMergeContinue","isCellMergeStart","isRowMergeStart","getFormat","currentPageBounds","currentGraphics","startLocation","isChildGrid","hType","horizontalOverflowType","determineColumnDrawRanges","rowWidth","internalWidth","internalHeight","isCorrectWidth","isCorrectHeight","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","range","cellStartIndex","cellEndIndex","returnObject","raiseBeforePageLayout","drawRow","repeatRow","originalHeight","repeatRowIndex","rowResult","isFinish","OnePage","repeatHeader","i_2","maximumCellBoundsWidth","largeNavigatePage","rowLayoutBoundsWidth","NextPage","reArrangePages","raisePageLayouted","nextPage","pageindex","PdfGridLayoutResult","ReCalculateHeight","currentRow","cancel","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","maxSpan","currRowIndex","rowMaxHeight","nextRow","calculatedHeight","rowBreakHeight","location_2","cancelSpans","CheckIfDefaultFormat","cellstyle","tempValue","RaiseBeforeCellDraw","RaiseAfterCellDraw","defaultFormat","measureTrailingSpaces","noClip","rowIndex","raiseBeginCellDraw","PdfGridBeginCellDrawEventArgs","raiseEndCellDraw","PdfGridEndCellDrawEventArgs","count_1","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","layoutedBounds","bIsFinished"],"mappings":"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,IAAK,IAAK,IAC5E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTd,EAA8B4B,YAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK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,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTjD,EAA8ByC,4BAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAA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"}