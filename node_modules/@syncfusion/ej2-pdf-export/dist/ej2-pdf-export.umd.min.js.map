{"version":3,"file":"ej2-pdf-export.umd.min.js","sources":["src/es5/implementation/collections/utils.js","src/es5/implementation/collections/dictionary.js","src/es5/implementation/primitives/pdf-name.js","src/es5/implementation/input-output/pdf-operators.js","src/es5/implementation/input-output/pdf-dictionary-properties.js","src/es5/implementation/primitives/pdf-dictionary.js","src/es5/implementation/primitives/pdf-number.js","src/es5/implementation/primitives/pdf-array.js","src/es5/implementation/primitives/pdf-stream.js","src/es5/implementation/primitives/pdf-string.js","src/es5/implementation/primitives/pdf-reference.js","src/es5/implementation/actions/action.js","src/es5/implementation/actions/uri-action.js","src/es5/implementation/graphics/enum.js","src/es5/implementation/graphics/pdf-color.js","src/es5/implementation/drawing/pdf-drawing.js","src/es5/implementation/graphics/brushes/pdf-brush.js","src/es5/implementation/graphics/brushes/pdf-solid-brush.js","src/es5/implementation/graphics/fonts/enum.js","src/es5/implementation/graphics/fonts/pdf-string-format.js","src/es5/implementation/graphics/fonts/string-tokenizer.js","src/es5/implementation/graphics/fonts/string-layouter.js","src/es5/implementation/graphics/fonts/pdf-font.js","src/es5/implementation/input-output/pdf-writer.js","src/es5/implementation/input-output/enum.js","src/es5/implementation/input-output/pdf-main-object-collection.js","src/es5/implementation/document/pdf-document-base.js","src/es5/implementation/input-output/cross-table.js","src/es5/implementation/document/pdf-catalog.js","src/es5/implementation/input-output/pdf-cross-table.js","src/es5/implementation/pages/pdf-page-size.js","src/es5/implementation/pages/enum.js","src/es5/implementation/graphics/pdf-margins.js","src/es5/implementation/pages/pdf-page-settings.js","src/es5/implementation/input-output/pdf-stream-writer.js","src/es5/implementation/graphics/pdf-pen.js","src/es5/implementation/graphics/pdf-transformation-matrix.js","src/es5/implementation/graphics/constants.js","src/es5/implementation/collections/object-object-pair/dictionary.js","src/es5/implementation/graphics/pdf-transparency.js","src/es5/implementation/document/automatic-fields/automatic-field-info-collection.js","src/es5/implementation/graphics/figures/base/graphics-element.js","src/es5/implementation/document/automatic-fields/automatic-field.js","src/es5/implementation/document/automatic-fields/automatic-field-info.js","src/es5/implementation/graphics/images/byte-array.js","src/es5/implementation/primitives/pdf-boolean.js","src/es5/implementation/graphics/images/image-decoder.js","src/es5/implementation/graphics/unit-convertor.js","src/es5/implementation/graphics/images/pdf-image.js","src/es5/implementation/graphics/images/pdf-bitmap.js","src/es5/implementation/graphics/fonts/ttf-table-info.js","src/es5/implementation/graphics/fonts/ttf-name-table.js","src/es5/implementation/graphics/fonts/ttf-name-record.js","src/es5/implementation/graphics/fonts/ttf-head-table.js","src/es5/implementation/graphics/fonts/ttf-metrics.js","src/es5/implementation/graphics/fonts/ttf-horizontal-header-table.js","src/es5/implementation/graphics/fonts/ttf-OS2-Table.js","src/es5/implementation/graphics/fonts/ttf-post-table.js","src/es5/implementation/graphics/fonts/ttf-long-hor-metric.js","src/es5/implementation/graphics/fonts/ttf-cmap-sub-table.js","src/es5/implementation/graphics/fonts/ttf-cmap-table.js","src/es5/implementation/graphics/fonts/ttf-glyph-info.js","src/es5/implementation/graphics/fonts/ttf-loca-table.js","src/es5/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js","src/es5/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js","src/es5/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js","src/es5/implementation/graphics/fonts/ttf-glyph-header.js","src/es5/implementation/input-output/big-endian-writer.js","src/es5/implementation/graphics/fonts/ttf-reader.js","src/es5/implementation/graphics/fonts/pdf-font-metrics.js","src/es5/implementation/graphics/fonts/unicode-true-type-font.js","src/es5/implementation/graphics/pdf-graphics.js","src/es5/implementation/pages/pdf-page-layer.js","src/es5/implementation/general/pdf-collection.js","src/es5/implementation/pages/pdf-page-layer-collection.js","src/es5/implementation/graphics/figures/pdf-template.js","src/es5/implementation/graphics/pdf-resources.js","src/es5/implementation/pages/pdf-page-base.js","src/es5/implementation/annotations/annotation-collection.js","src/es5/implementation/pages/pdf-page.js","src/es5/implementation/pages/page-added-event-arguments.js","src/es5/implementation/pages/pdf-section-page-collection.js","src/es5/implementation/document/pdf-document-template.js","src/es5/implementation/pages/pdf-section-templates.js","src/es5/implementation/pages/pdf-section.js","src/es5/implementation/pages/pdf-section-collection.js","src/es5/implementation/pages/pdf-document-page-collection.js","src/es5/implementation/general/pdf-cache-collection.js","src/es5/implementation/document/pdf-document.js","src/es5/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","src/es5/implementation/graphics/fonts/pdf-standard-font.js","src/es5/implementation/annotations/annotation.js","src/es5/implementation/annotations/link-annotation.js","src/es5/implementation/annotations/action-link-annotation.js","src/es5/implementation/annotations/document-link-annotation.js","src/es5/implementation/graphics/figures/enum.js","src/es5/implementation/graphics/figures/base/element-layouter.js","src/es5/implementation/graphics/figures/layout-element.js","src/es5/implementation/graphics/figures/base/text-layouter.js","src/es5/implementation/graphics/figures/text-element.js","src/es5/implementation/annotations/uri-annotation.js","src/es5/implementation/annotations/pdf-text-web-link.js","src/es5/implementation/document/automatic-fields/pdf-numbers-convertor.js","src/es5/implementation/document/automatic-fields/pdf-template-value-pair.js","src/es5/implementation/document/automatic-fields/multiple-value-field.js","src/es5/implementation/document/automatic-fields/pdf-page-number-field.js","src/es5/implementation/document/automatic-fields/composite-field.js","src/es5/implementation/document/automatic-fields/single-value-field.js","src/es5/implementation/document/automatic-fields/page-count-field.js","src/es5/implementation/general/enum.js","src/es5/implementation/general/pdf-destination.js","src/es5/implementation/graphics/fonts/pdf-true-type-font.js","src/es5/implementation/pages/pdf-page-template-element.js","src/es5/implementation/structured-elements/grid/styles/pdf-borders.js","src/es5/implementation/structured-elements/tables/light-tables/enum.js","src/es5/implementation/structured-elements/grid/styles/style.js","src/es5/implementation/structured-elements/grid/pdf-grid-cell.js","src/es5/implementation/structured-elements/grid/pdf-grid-column.js","src/es5/implementation/structured-elements/grid/pdf-grid-row.js","src/es5/implementation/structured-elements/grid/pdf-grid.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isImageStream = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isFontStream = false;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isImage\", {\n        /**\n         * Gets or sets 'is image' flag.\n         * @private\n         */\n        get: function () {\n            return this.isImageStream;\n        },\n        set: function (value) {\n            this.isImageStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isFont\", {\n        /**\n         * Gets or sets 'is font' flag.\n         * @private\n         */\n        get: function () {\n            return this.isFontStream;\n        },\n        set: function (value) {\n            this.isFontStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isImage && !this.isFont) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            output.push(0);\n            output.push(value.charCodeAt(i));\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            // if (obj1 === null) {\n            //     throw new Error('ArgumentNullException : obj');\n            // }\n            this.primitiveObject = obj1;\n            // } else if (obj1 instanceof PdfPageBase\n            //             || obj1 instanceof PdfPage\n            //             || obj1 instanceof PdfSection\n            //             || obj1 instanceof PdfSectionCollection) {\n        }\n        else {\n            var tempObj = obj1;\n            this.constructor(tempObj.element);\n        }\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'number' && typeof color3 === 'number' &&\n            typeof color4 === 'undefined') {\n            this.constructor(PdfColor.maxColourChannelValue, color1, color2, color3); //doubt-byte/float\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'number' && typeof color3 === 'number' && typeof color4 === 'number') {\n            this.redColor = color2;\n            this.cyanColor = 0;\n            this.greenColor = color3;\n            this.magentaColor = 0;\n            this.blueColor = color4;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.alpha = color1;\n            this.filled = true;\n            this.assignCMYK(color2, color3, color4);\n        }\n    }\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        return this.rgbToString(stroke);\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n            default:\n                throw new Error('NotSupportedException : Unsupported colour space.');\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        if (typeof arg1 === 'undefined') {\n            this.internalLineLimit = true;\n            this.wordWrapType = PdfWordWrapType.Word;\n        }\n        else if (typeof arg1 === 'string') {\n            this.constructor();\n        }\n        else {\n            if (typeof arg2 === 'undefined') {\n                this.constructor();\n                this.textAlignment = arg1;\n            }\n            else {\n                this.constructor(arg1);\n                this.verticalAlignment = arg2;\n            }\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substring(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    this.currentPosition++;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substring(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            // if (!lineResult.Empty) {\n            var numSymbolsInserted = 0;\n            /* tslint:disable */\n            var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n            /* tslint:enable */\n            var success = returnedValue.success;\n            numSymbolsInserted = returnedValue.numInserted;\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() == PdfWordWrapType.None)\n                        break;\n                    if (this.getWrapType() != PdfWordWrapType.Character || !readWord) {\n                        var ln = builder.toString();\n                        if (ln.indexOf(' ') === -1) {\n                            isSingleWord = true;\n                            this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                        }\n                        else {\n                            this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                        }\n                        if (this.isOverloadWithPosition) {\n                            maxWidth = this.clientSize.width;\n                        }\n                        curLine = '';\n                        builder = '';\n                        lineWidth = 0;\n                        curIndent = 0;\n                        curLineWidth = 0;\n                        lineType = LineType.None;\n                        if (isSingleWord) {\n                            reader.readWord();\n                            readWord = false;\n                        }\n                        word = (readWord) ? word : reader.peekWord();\n                        isSingleWord = false;\n                        readWord = true;\n                    }\n                    else {\n                        readWord = false;\n                        curLine = curLine + builder.toString();\n                        word = reader.peek().toString();\n                    }\n                    continue;\n                }\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n        /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n            var expHeight = height + lineResult.lineHeight;\n            var info = lineResult.lines[i];\n            numInserted += info.text.length;\n            info = this.trimLine(info, (lines.length === 0));\n            lines.push(info);\n            // Update width.\n            var size_1 = result.actualSize;\n            size_1.width = Math.max(size_1.width, info.width);\n            result.size = size_1;\n            height = expHeight;\n        }\n        var size = result.actualSize;\n        size.height = height;\n        result.size = size;\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        // let trimStartSpaces : boolean = ((info.LineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            lineWidth += this.getLineIndent(firstLine);\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","import { StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { Encoding } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        if (typeof free === 'undefined') {\n            var tempOffset = offset;\n            this.offsetNumber = tempOffset;\n            var tempReference = reference;\n            this.generation = tempReference.genNumber;\n            this.object = tempReference.objNumber;\n            this.type = ObjectType.Normal;\n        }\n        else {\n            var tempOffset = offset;\n            var tempReference = reference;\n            this.constructor(tempOffset, tempReference);\n            var tempFree = free;\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (typeof arg2 === 'number') {\n            this.constructor(arg1);\n            this.width = arg2;\n        }\n        else if (typeof arg2 === 'undefined' && arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (typeof arg2 === 'undefined' && arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.constructor();\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        /* tslint:disable */\n        if (String.fromCharCode(imgData.getBuffer(i + 2)) === 'J' && String.fromCharCode(imgData.getBuffer(i + 3)) === 'F' && String.fromCharCode(imgData.getBuffer(i + 4)) === 'I' && String.fromCharCode(imgData.getBuffer(i + 5)) === 'F' && imgData.getBuffer(i + 6) === 0) {\n            var length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n            while (i + length_1 < imgData.count) {\n                i += length_1;\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isImage = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n","var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n","/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n","/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n","var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n","/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n","/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n","/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n","/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n","/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n","/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n","/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n","/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n","/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n","/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n","/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var result = [];\n        for (var i = 0; i < this.position; i++) {\n            result.push(this.buffer[i]);\n        }\n        for (var i = 0; i < buff.length; i++) {\n            result.push(buff[i]);\n        }\n        for (var i = this.position; i < this.buffer.length; i++) {\n            result.push(this.buffer[i]);\n        }\n        this.buffer = result;\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n","/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[0], glyphChars.getValue(glyphCharKeys[0]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[0];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    /**\n     * Gets glyph's info by char code.\n     */\n    TtfReader.prototype.getGlyph = function (charCode) {\n        var obj = null;\n        var code = charCode.charCodeAt(0);\n        if (!this.metrics.isSymbol && this.microsoft !== null) {\n            if (this.microsoft.containsKey(code)) {\n                obj = this.microsoft.getValue(code);\n                if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = true;\n                }\n            }\n            else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                this.isFontPresent = false;\n            }\n        }\n        else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            if (this.maxMacIndex !== 0) {\n                code %= this.maxMacIndex + 1;\n            }\n            else {\n                code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n            }\n            if (this.macintosh.containsKey(code)) {\n                obj = this.macintosh.getValue(code);\n                this.isFontPresent = true;\n            }\n        }\n        // Fix for StackOverFlow exception in XPS to PDF converter\n        if (charCode === StringTokenizer.whiteSpace && obj === null) {\n            obj = new TtfGlyphInfo();\n        }\n        var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n        return glyph;\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isFont = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isFont = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isFont = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isFont = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        var fontProgram = null;\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n        this.fontProgram.clearStream();\n        this.fontProgram.isFont = true;\n        this.fontProgram.writeBytes(fontProgram);\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        this.getDescendantWidth();\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n            this.getResources = arg2;\n            this.canvasSize = arg1;\n            this.initialize();\n        }\n        else {\n            this.constructor(arg1, arg2, new PdfStreamWriter(arg3));\n        }\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, 0), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    }; /* tslint:enable */\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPath(temparg1, temparg2, false);\n        }\n    };\n    PdfGraphics.prototype.drawPath = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPath(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /* tslint:disable */\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            /* tslint:disable */\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent; /* tslint:enable */\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /* tslint:disable */\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && format.rightToLeft);\n        var useWordSpace = (format !== null && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        if (useWordSpace) {\n            var result = this.breakUnicodeLine(line, ttfFont, null);\n            var blocks = result.tokens;\n            var words = result.words;\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            var token = this.convertToUnicode(line, ttfFont);\n            var value = this.getUnicodeString(token);\n            this.streamWriter.showNextLineText(value);\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        /* tslint:enable */\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null) {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null) {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0);\n        /* tslint:disable */\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.Justify)); /* tslint:enable */\n        return shouldJustify;\n    };\n    /* tslint:disable */\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    /* tslint:disable */\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    /* tslint:enable */\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format != null && format.rightToLeft);\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    /* tslint:disable */\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n            this.bCSInitialized = true;\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            this.colorSpace = PdfColorSpace.Rgb;\n            /* tslint:disable */\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            /* tslint:enable */\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null) {\n            this.currentBrush = brush;\n            /* tslint:disable */\n            brush.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            /* tslint:enable */\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            /* tslint:disable */\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None; /* tslint:enable */\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                /* tslint:disable */\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /* tslint:disable */\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    /* tslint:enable */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            this.transformationMatrix = matrix;\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.pdfPage = page;\n            this.clipPageTemplates = true;\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (page == null) {\n                throw new Error('ArgumentNullException:page');\n            }\n            if (streamClipPageTemplates == null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.pdfPage = page;\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.constructor(page);\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        if (baseDictionary instanceof PdfDictionary) {\n            _this = _super.call(this, baseDictionary) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            // let savable : IPdfPrimitive = (arg1 as IPdfWrapper).Element;\n            // if (savable != null)\n            // {\n            //     let pattern : PdfDictionary = this.Items.getValue(this.dictionaryProperties.pattern) as PdfDictionary;\n            //     // Create a new pattern dictionary.\n            //     if (pattern == null) {\n            //         pattern = new PdfDictionary();\n            //         this.Items.setValue(this.dictionaryProperties.pattern, pattern);\n            //     }\n            //     pattern.Items.setValue(name, new PdfReferenceHolder(savable));\n            // }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    /**\n     * Initialize an `instance of GUID` class.\n     * @private\n     */\n    function Guid(stringValue) {\n        this.stringValue = stringValue || Guid.getNewGuidString();\n    }\n    Object.defineProperty(Guid, \"randomNumber\", {\n        /**\n         * Generate `Random number` for GUID.\n         * @private\n         */\n        get: function () {\n            Guid.guid = Guid.guid + 1;\n            Guid.guid = Guid.guid > 999999999999 ? 0 : Guid.guid;\n            return Guid.guid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the value of `GUID as string`.\n     * @private\n     */\n    Guid.prototype.toString = function () {\n        return this.stringValue;\n    };\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        var guid = 'abc7def4-ghi9-jkl2-m6n3-';\n        var temproaryString = 'opqrstuvwxyz';\n        var randomString = Guid.randomNumber.toString();\n        randomString = guid + temproaryString.substr(0, (12 - randomString.length)) + randomString;\n        return randomString;\n    };\n    /**\n     * static field to store `endding value of current GUID`.\n     * @private\n     */\n    Guid.guid = 0;\n    return Guid;\n}());\nexport { Guid };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (typeof pageSettings === 'undefined') {\n            this.constructor(document, document.pageSettings);\n        }\n        else {\n            this.pdfDocument = document;\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, true, foreground);\n        var documentTemplates = this.getDocumentTemplates(document, page, false, foreground);\n        var contains = (documentHeaders.length > 0 || documentTemplates.length > 0);\n        return contains;\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, headers, foreground) {\n        var templates = [];\n        if (headers) {\n            if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n                if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                    templates.push(document.template.getTop(page));\n                }\n            }\n            if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n                if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                    templates.push(document.template.getBottom(page));\n                }\n            }\n            if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n                if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                    templates.push(document.template.getLeft(page));\n                }\n            }\n            if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n                if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                    templates.push(document.template.getRight(page));\n                }\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, true, foreground);\n        var documentTemplates = this.getDocumentTemplates(document, page, false, foreground);\n        if (foreground) {\n            this.drawTemplatesHelper(layer, document, documentHeaders);\n            this.drawTemplatesHelper(layer, document, documentTemplates);\n        }\n        else {\n            this.drawTemplatesHelper(layer, document, documentHeaders);\n            this.drawTemplatesHelper(layer, document, documentTemplates);\n        }\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfPageOrientation } from './enum';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        /**\n         * Stores the previous pages's `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.previousPageOrientation = PdfPageOrientation.Portrait;\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            if (section.pageSettings.orientation !== this.previousPageOrientation) {\n                section = this.document.sections.add();\n                section.pageSettings.orientation = this.document.pageSettings.orientation;\n            }\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this = _super.call(this, _this) || this;\n        if (isMerging === true || isMerging === false || typeof isMerging !== 'undefined') {\n            var objects = new PdfMainObjectCollection();\n            _this.setMainObjectCollection(objects);\n            var crossTable = new PdfCrossTable();\n            crossTable.isMerging = isMerging;\n            crossTable.document = _this;\n            _this.setCrossTable(crossTable);\n            var catalog = new PdfCatalog();\n            _this.setCatalog(catalog);\n            objects.add(catalog);\n            catalog.position = -1;\n            _this.sectionCollection = new PdfSectionCollection(_this);\n            _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n            catalog.pages = _this.sectionCollection;\n        }\n        else {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            _this.constructor(false);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if ((typeof fontFamilyPrototype === 'number') && (typeof style === 'undefined')) {\n            _this.constructor(fontFamilyPrototype, size, PdfFontStyle.Regular);\n        }\n        else if ((typeof fontFamilyPrototype === 'number') && (typeof style !== 'undefined')) {\n            _this = _super.call(this, size, style) || this;\n            _this.pdfFontFamily = fontFamilyPrototype;\n            _this.checkStyle();\n            _this.initializeInternals();\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont) && (typeof style === 'undefined')) {\n            _this.constructor(fontFamilyPrototype.fontFamily, size, fontFamilyPrototype.style);\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont) && (typeof style !== 'undefined')) {\n            _this.constructor(fontFamilyPrototype.fontFamily, size, style);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        var _this = this;\n        if (typeof rectangle === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else {\n            _this = _super.call(this, rectangle) || this;\n        }\n        return _this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../enum';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    ElementLayouter.prototype.layout = function (param, isBoundsChanged) {\n        if (typeof isBoundsChanged === 'boolean' && isBoundsChanged === true) {\n            return this.layoutInternal(param, true);\n        }\n        else {\n            return this.layoutInternal(param);\n        }\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n                this.layoutType = PdfLayoutType.Paginate;\n            }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n                this.breakType = PdfLayoutBreakType.FitPage;\n            }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n                this.boundsSet = false;\n            }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this = _super.call(this) || this;\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        retval += this.generateNumber(intArabic, 1000, 'M');\n        retval += this.generateNumber(intArabic, 900, 'CM');\n        retval += this.generateNumber(intArabic, 500, 'D');\n        retval += this.generateNumber(intArabic, 400, 'CD');\n        retval += this.generateNumber(intArabic, 100, 'C');\n        retval += this.generateNumber(intArabic, 90, 'XC');\n        retval += this.generateNumber(intArabic, 50, 'L');\n        retval += this.generateNumber(intArabic, 40, 'XL');\n        retval += this.generateNumber(intArabic, 10, 'X');\n        retval += this.generateNumber(intArabic, 9, 'IX');\n        retval += this.generateNumber(intArabic, 5, 'V');\n        retval += this.generateNumber(intArabic, 4, 'IV');\n        retval += this.generateNumber(intArabic, 1, 'I');\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return numberstring.toString();\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        if (typeof arg2 === 'undefined') {\n            var angle = PdfPageRotateAngle.RotateAngle0;\n            this.destinationLocation = new PointF(0, this.destinationLocation.y);\n            this.pdfPage = arg1;\n        }\n        else if (arg2 instanceof PointF) {\n            this.constructor(arg1);\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.constructor(arg1);\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        // width = this.fontInternal.getLineWidth(line);\n        // let size : number = metrics.getSize(format);\n        // width *= (PdfFont.charSizeMultiplier * size);\n        // width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg2.width, arg2.height);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.constructor(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.constructor(arg1.width, arg1.height);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.constructor(0, 0, arg1, arg2);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.constructor(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.x = arg1;\n            this.y = arg2;\n            this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        }\n        else {\n            this.x = arg1;\n            this.y = arg2;\n            this.pdfTemplate = new PdfTemplate(arg3, arg4);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        if (bounds.x === -0) {\n            bounds.x = 0;\n        }\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = -actualBounds.x;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = -actualBounds.y;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = -actualBounds.x;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = -actualBounds.x;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = -actualBounds.x;\n                y = -actualBounds.y;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = -actualBounds.y + actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = -actualBounds.x;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        if (typeof left === 'undefined') {\n            //5.76 and 0 are taken from ms-word default table margins.\n            this.leftPad = this.rightPad = 5.76;\n            //0.5 is set for top and bottom by default.\n            this.bottom = this.topPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        /**\n         * Determine the value of the border is changed or not.\n         * @private\n         */\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        if (typeof row === 'undefined') {\n            this.gridRowSpan = 1;\n            this.colSpan = 1;\n        }\n        else {\n            this.constructor();\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return this.cellWidth;\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        if (backgroundBrush != null) {\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n            returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n            returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n            returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            if (this.rowSpan === 1) {\n                returnBounds.width -= (this.style.borders.left.width);\n            }\n        }\n        else {\n            returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n            returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n            returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            if (this.rowSpan === 1) {\n                returnBounds.width -= (this.style.borders.left.width);\n            }\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        var result = null;\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = this.adjustContentLayoutArea(bounds);\n        this.drawCellBackground(graphics, bounds);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            temp = this.remaining === '' ? this.remaining : this.objectValue;\n            graphics.drawString(temp, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            result = graphics.stringLayoutResult;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = void 0;\n            if (this.objectValue.width <= innerLayoutArea.width) {\n                imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);\n            }\n            else {\n                imageBounds = innerLayoutArea;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        if (this.style.borders != null) {\n            this.drawCellBorders(graphics, bounds);\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        // if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n        //     p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n        //     p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        // }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n    };\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1) {\n            var span = this.columnSpan;\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //     this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //     totalHeight = this.row.cells.getCell(cellIndex).height;\n            //     bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            // }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remainingString === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n        }\n        height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        //Add padding top and bottom value to height\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n        }\n        else {\n            height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        for (var i = 0; i < columnSpan; i++) {\n            width += this.row.grid.columns.getColumn(cellIndex + i).width;\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        // this.m_grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        // if(this.cells.getCell(0).RowSpan > 1) {\n        //     rowHeight=0;\n        // } else {\n        rowHeight = this.cells.getCell(0).height;\n        // }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.IsRowMergeContinue)\n            //     continue; \n            // if (!cell.IsRowMergeContinue)\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutResult, PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfHorizontalOverflowType } from './styles/style';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        var _this = this;\n        if (typeof baseFormat === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else {\n            _this = _super.call(this, baseFormat) || this;\n        }\n        return _this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginPageLayout\", {\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.pageWidth;\n        },\n        set: function (value) {\n            this.pageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.childGrid;\n        },\n        set: function (value) {\n            this.childGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if (this.gridSize.width === 0 && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n                return this.gridSize;\n            }\n            else {\n                return this.gridSize;\n            }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.layout = function (param, isGridLayouter) {\n        if (typeof isGridLayouter === 'undefined') {\n            this.setSpan();\n            this.layoutFormat = param.format;\n            this.gridLocation = param.bounds;\n            var result = this.layout(param, true);\n            return result;\n        }\n        else {\n            return this.layoutInternal(param);\n        }\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan;\n        var rowSpan = 1;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGrid.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGrid.prototype.layoutInternal = function (param) {\n        this.initialWidth = param.bounds.width;\n        var format = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.headers.count !== 0) {\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        if (param.bounds.height > 0 && !this.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        this.hType = this.style.horizontalOverflowType;\n        if (!this.style.allowHorizontalOverflow) {\n            this.measureColumnsWidth(this.currentBounds);\n            this.columnRanges.push([0, this.columns.count - 1]);\n        }\n        else {\n            this.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            var widths = this.columns.getDefaultWidths(bounds.width);\n            var tempWidth = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                this.columns.getColumn(i).width = widths[i];\n            }\n        }\n        else {\n            var widths = [];\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if (this.headers.count > 0) {\n                var colCount = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            else {\n                var colCount = this.rows.getRow(0).cells.count;\n                var rowCount = this.rows.count;\n                for (var i = 0; i < colCount; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            cellWidth = 0;\n            for (var i = 0, colCount = this.columns.count; i < colCount; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if (this.rows.getRow(j).cells.getCell(i).columnSpan == 1 || this.rows.getRow(j).cells.getCell(i).value !== null || this.rows.getRow(j).cells.getCell(i).rowSpan >= 1) {\n                        if (this.rows.getRow(j).cells.getCell(i).value !== null &&\n                            !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2\n                                + this.gridLocation.x;\n                            this.rows.getRow(j).cells.getCell(i).value.initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        var internalWidth = this.rows.getRow(j).cells.getCell(i).width;\n                        internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        var internalHeight = this.rows.getRow(j).cells.getCell(i).height;\n                        internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        var isCorrectWidth = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        var isCorrectHeight = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        if (isCorrectWidth || isCorrectHeight) {\n                            throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        }\n                        rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                this.columns.getColumn(i).width = widths[i];\n            }\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGrid.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.columns.count; i++) {\n            cellWidths += this.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGrid.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            // result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            // break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.headers.count; i_1++) {\n                var row = this.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                // if (headerHeight === this.currentBounds.y) {\n                //     drawHeader = true;\n                //     if (PdfGrid.repeatRowIndex === -1) {\n                //         PdfGrid.repeatRowIndex = this.rows.getRow.indexOf(row);\n                //     }\n                // } else {\n                drawHeader = false;\n                // }\n            }\n            var i = 0;\n            var length_1 = this.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.rows.count; j++) {\n                var row = this.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGrid.repeatRowIndex = -1;\n                var rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGrid.repeatRowIndex = this.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGrid.repeatRowIndex = -1;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPage(format);\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.repeatHeader) {\n                        for (var i_2 = 0; i_2 < this.headers.count; i_2++) {\n                            var header = this.headers.getHeader(i_2);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[0, 0]];\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPage(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    // this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.style.allowHorizontalOverflow && this.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    }; /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGrid.prototype.getNextPage = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        // if ((format.PaginateBounds.x !== format.PaginateBounds.y) && (format.PaginateBounds.y !== format.PaginateBounds.height)\n        //     && (format.PaginateBounds.height !== format.PaginateBounds.width) && (format.PaginateBounds.width !== 0)) {\n        //     this.currentBounds.x = format.PaginateBounds.x;\n        //     this.currentBounds.y = format.PaginateBounds.y;\n        //     this.currentBounds.height = format.PaginateBounds.height;\n        // }\n        return nextPage;\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGrid.prototype.getLayoutResult = function () {\n        var bounds;\n        /* tslint:disable */\n        bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y - this.startLocation.y));\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGrid.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        // for (let i : number = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n        //     if (!(row.cells.getCell(i).RemainingString === null || row.cells.getCell(i).RemainingString === '' ||\n        //           typeof row.cells.getCell(i).RemainingString === 'undefined')) {\n        //         newHeight = Math.max(newHeight, row.cells.getCell(i).MeasureHeight());\n        //     }\n        // }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGrid.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.beginPageLayout(this, args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGrid.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.raiseEndPageLayout) {\n            this.endPageLayout(this, args);\n        }\n        return args;\n    };\n    PdfGrid.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.\n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_1 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.headers.getHeader(i).height : this.rows.getRow(i).height);\n                }\n                var rowMaxHeight = rowHeightWithSpan;\n                for (var i = 0; i < row.cells.count; i++) {\n                    rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                }\n                var nextRow = this.headers.getHeader(this.headers.indexOf(row) + 1);\n                var flag = true;\n                for (var i = 0; i < nextRow.cells.count; i++) {\n                    if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                    row.height += (rowMaxHeight - rowHeightWithSpan);\n                }\n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                // If a row is repeated and still cannot fit in page, proceed draw.\n                // if (PdfGrid.repeatRowIndex > -1 && PdfGrid.repeatRowIndex === row.RowIndex) {\n                //     if (this.AllowRowBreakAcrossPages) {\n                //         result.IsFinish = true;\n                //         // this.DrawRowWithBreak(ref result, row, height);\n                //     } else {\n                //         result.IsFinish = false;\n                //         this.drawRow(row, result, height);\n                //     }\n                // } else {\n                result_1.isFinish = false;\n                // }\n            }\n            else {\n                result_1.isFinish = true;\n                this.drawRow(row, result_1, calculatedHeight);\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_2 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            result.bounds = new RectangleF(location_2, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.ClientSize.width) {\n                //     size.width = this.currentGraphics.ClientSize.width;\n                // }\n                // if (this.IsChildGrid && this.style.AllowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.ClientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_2, size), tempValue, cellstyle);\n                // if (!skipcell) {\n                // let stringResult : PdfStringLayoutResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n                var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_2, size), cancelSpans);\n                if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                    row.rowOverflowIndex = this.cellEndIndex;\n                }\n                if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan > this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) && row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                    row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ? stringResult.remainder : '' : '';\n                    row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                    row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                    row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                }\n                // }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                this.RaiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_2, size), tempValue, row.cells.getCell(i).style);\n                location_2.x += this.columns.getColumn(i).width;\n            }\n            // if (!row.RowMergeComplete || row.isRowHeightSet) {\n            this.currentBounds.y += height;\n            // }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_2.x, location_2.y));\n        }\n    };\n    /**\n     * Checks if the given format `is default format` or not.\n     * @private\n     */\n    PdfGrid.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGrid.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.beginCellDraw(this, args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGrid.prototype.RaiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Rearranges the pages`.\n     * @private\n     */\n    PdfGrid.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGrid.repeatRowIndex = -1;\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n/**\n * `GridCellEventArgs` class is alternate for grid events.\n */\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\n/**\n * `PdfGridBeginCellDrawEventArgs` class is alternate for begin cell draw events.\n */\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\n/**\n * `PdfGridEndCellDrawEventArgs` class is alternate for end cell draw events.\n */\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\n/**\n * `PdfGridCancelEventArgs` class is alternate for cancel events.\n */\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\n/**\n * `BeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\n/**\n * `RowLayoutResult` class to store layout result of rows.\n */\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n/**\n * `PdfGridLayoutResult` class represents the results of the PdfGrid including bounds and resultant page.\n */\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridLayoutResult` class with the current page and bounds.\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n"],"names":["defaultToString","item","Object","prototype","toString","call","Dictionary","toStringFunction","this","table","nElements","toStr","getValue","key","pair","value","setValue","k","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","PdfName","stringStartMark","internalValue","isSaving6","position6","normalizeValue","defineProperty","get","status6","set","enumerable","configurable","index6","val","save","writer","write","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","forTest","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","w","cIDFontType2","cIDToGIDMap","identity","dw","fontDescriptor","cIDSystemInfo","fontName","flags","fontBBox","missingWidth","stemV","italicAngle","capHeight","ascent","descent","leading","avgWidth","fontFile2","maxWidth","xHeight","stemH","registry","ordering","supplement","type0","identityH","toUnicode","descendantFonts","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","object","archive","isFont","encrypt","dictionaryProperties","items","index","status","freezeChanges","status7","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","Count","saveItems","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","position5","integer","status5","isSaving5","index5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","array","startMark","endMark","position9","clonedObject9","internalElements","tempArray","elements","tempNumberArray","pdfNumber","add","status9","isSaving9","index9","pdfCrossTable","element","markedChange","contains","tempElement","inputElement","getItems","len","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","hasOwnProperty","__","constructor","create","PdfStream","_super","data","_this","dicPrefix","dicSuffix","clonedObject2","bCompress","isImageStream","isFontStream","dataStream2","bCompress2","clearStream","internalStream","text","Error","writeBytes","String","fromCharCode","onCmapBeginSave","cmapBeginSave","onFontProgramBeginSave","fontProgramBeginSave","compressContent","byteArray","charCodeAt","dataArray","Uint8Array","sw","CompressedStreamWriter","close","getCompressedString","addFilter","filterName","PdfReferenceHolder","name","isImage","bytesToString","output","SaveCmapEventHandler","SaveFontProgramEventHandler","InternalEnum","ForceEncoding","SourceType","PdfString","bHex","position1","clonedObject1","bDecrypted","isParentDecrypted","isPacked","isFormField","isColorSpace","isHexString","status1","isSaving1","bConverted","bForceEncoding","bytesToHex","bytes","undefined","encode","Ascii","pdfEncode","stringMark","escapeSymbols","currentData","CrossTable","newString","toUnicodeArray","bAddPrefix","byteToString","hexStringMark","hexFormatPattern","PdfReference","objNumber","genNumber","index3","position3","Number","status3","isSaving3","obj1","obj2","index4","position4","objectIndex","primitiveObject","tempObj","status4","isSaving4","pdfReference","position","cTable","document","isSaving","getReference","PdfAction","initialize","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfHorizontalAlignment","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfColor","color1","color2","color3","color4","redColor","greenColor","g","blueColor","grayColor","gray","alpha","filled","maxColourChannelValue","cyanColor","magentaColor","yellowColor","blackColor","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","rgbToString","ifStroking","colour","rgbStrings","toArray","Rgb","grayStringsSroke","grayStringsFill","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","Rectangle","left","top","right","bottom","topLeft","PdfBrush","PdfSolidBrush","color","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags","PdfStringFormat","scalingFactor","internalLineLimit","wordWrapType","Word","textAlignment","verticalAlignment","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","trailingSpaces","isNoClip","initialLineIndent","StringTokenizer","textValue","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","pos","substring","text2","peekLine","line","readWord","substr","peekWord","word","read","peek","symbol","tab","spaces","whiteSpacePattern","PdfStringLayouter","isOverloadWithPosition","layout","arg5","arg6","arg7","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lineResult","lines","lineIndent","getLineIndent","layoutLine","numSymbolsInserted","returnedValue","copyToResult","success","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","lineWidth","lineType","LineType","FirstParagraphLine","round","addToLineResult","NewLineBreak","builder","curLine","curIndent","isSingleWord","curLineWidth","getWrapType","Character","ln","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","max","lineLimit","maxHeight","expHeight","lineHeight","trimLine","size_1","rightToLeft","trim","wordWrap","textRemainder","empty","content","PdfFont","style","fontStyle","Regular","fontSize","setStyle","metrics","getHeight","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","PdfWriter","pdfDocument","buffer","overload","tempOverload","ObjectStatus","PdfMainObjectCollection","objectCollections","mainObjectCollection","primitiveObjectCollection","isNew","objInfo","ObjectInfo","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","destroy","_i","_a","pdfObject","objectCollectionIndex","PdfDocumentBase","isStreamCopied","PdfDocument","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","Encoding","SW","StreamWriter","encoding_1","SW_1","Promise","resolve","reject","blobData","Blob","docSave","ObjectType","PdfCatalog","sections","tempDictionaryProperties","PdfCrossTable","maxGenNumIndex","objectCount","merging","internalTrailer","pdfObjects","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","str","Free","getItem","offset","generation","isFree","addOffsetLength","addGenNumberLength","total","split","version","generateFileVersion","bNew","getSubReference","objnumber","nextObjNumber","tempIndex","tempkey","tempvalue","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","dereference","tempOffset","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageOrientation","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","PdfMargins","pdfMargin","setMargins","leftMargin","topMargin","rightMargin","bottomMargin","margin1","margin2","margin3","margin4","PdfPageSettings","margins","pageMargins","pageSize","rotateAngle","RotateAngle0","pageOrientation","Portrait","pageOrigin","isRotation","setSize","orientation","updateSize","Landscape","getActualSize","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","showText","checkTextParam","writeText","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","setColorSpace","temparg1","op","matrix","opcode","start","end","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Solid","pdfLineCap","pdfLineJoin","penWidth","internalMiterLimit","setBrush","Custom","Dash","Dot","DashDot","DashDotDot","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","radDegFactor","PI","transformationMatrix","Matrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","mValues","ReferenceError","RangeError","splice","PdfTransparency","mode","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalTemplateSize","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","location","scalingX","scalingY","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","field","pageNumberFieldLocation","pageNumberField","ByteArray","mPosition","dataView","DataView","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","input","chr1","chr2","chr3","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","byteLength","PdfBoolean","objectStatus","saving","boolToStr","ImageFormat","ImageDecoder","mFormat","Unknown","mbitsPerComponent","mStream","mHeight","mWidth","mImageData","internalBuffer","checkIfJpeg","Jpeg","parseJpegImage","reset","imgData","length_1","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","dpi","updateProportionsHelper","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","pixelPerInch","horizontalResolution","verticalResolution","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","dpiX","dpiY","ucX","ucY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","imageStatus","loadImage","initializeAsync","decoder","TtfTableInfo","checksum","TtfNameTable","TtfNameRecord","TtfHeadTable","TtfMetrics","macStyle","TtfHorizontalHeaderTable","TtfOS2Table","TtfPostTable","TtfLongHorMetric","TtfCmapSubTable","TtfCmapTable","TtfGlyphInfo","charCode","compareTo","glyph","TtfLocaTable","TtfAppleCmapSubTable","TtfMicrosoftCmapSubTable","TtfTrimmedCmapSubTable","TtfGlyphHeader","BigEndianWriter","capacity","int32Size","int16Size","int64Size","bufferLength","internalPosition","writeShort","flush","writeInt","writeUInt","buff","writeString","TtfReader","fontData","isTtcFont","isMacTtf","metricsName","isMacTTF","missedGlyphs","tableNames","entrySelectors","macintoshDictionary","microsoftDictionary","internalMacintoshGlyphs","internalMicrosoftGlyphs","readFontDictionary","nameTable","readNameTable","headTable","readHeadTable","initializeFontName","checkPreambula","numTables","readInt16","tableDirectory","tableKey","readString","readInt32","lowestPosition","fixOffsets","minOffset","MAX_VALUE","tableKeys","shift","tableInfo","getTable","formatSelector","readUInt16","recordsCount","nameRecords","record","platformID","encodingID","languageID","nameID","unicode","readFixed","fontRevision","checkSumAdjustment","readUInt32","magicNumber","unitsPerEm","created","readInt64","modified","xMin","yMin","xMax","yMax","lowestReadableSize","fontDirectionHint","indexToLocalFormat","glyphDataFormat","readHorizontalHeaderTable","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","metricDataFormat","numberOfHMetrics","readOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","readBytes","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","vendorIdentifier","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","readPostTable","formatType","underlinePosition","underlineThickness","isFixedPitch","minType42","maxType42","minType1","maxType1","readWidthTable","glyphCount","advanceWidth","lsb","glyphWidth","floor","readCmapTable","tablesCount","subTables","subTable","readCmapSubTable","getCmapEncoding","Macintosh","Microsoft","Apple","readAppleCmapTable","readMicrosoftCmapTable","Trimmed","readTrimmedCmapTable","maxMacIndex","glyphInfo","getWidth","macintosh","addGlyph","collection","Unicode","microsoft","segCountX2","searchRange","entrySelector","rangeShift","segCount","endCount","readUshortArray","reservedPad","startCount","idDelta","idRangeOffset","glyphID","codeOffset","j","id","Symbol","firstCode","entryCount","fontFamily","postScriptName","glyphCode","Undefined","Roman","microsoftGlyphs","macintoshGlyphs","initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","isSymbol","factor","winAscent","macAscent","winDescent","macDescent","ceil","fontBox","widthTable","updateWidth","subScriptSizeFactor","superscriptSizeFactor","getGlyph","byteToProcess","space","getString","getDefaultGlyph","readLocaTable","bShort","offsets","updateGlyphChars","glyphChars","locaTable","glyphCharKeys","nextKey","processCompositeGlyph","glyphOffset","glyphHeader","numberOfContours","skipBytes","glyphIndex","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","generateGlyphTable","newLocaTable","newGlyphTable","activeGlyphs","sort","glyphSize","glyphSizeAligned","align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","glyphTableSize","updateLocaTable","bLocaIsShort","newLocaTableOut","newLocaUpdated","newLocaSize","getFontProgram","locaTableSize","getFontProgramLength","fontProgramLength","writeCheckSums","writeGlyphs","tableName","usedTablesSize","nextTableSize","calculateCheckSum","byte1","byte2","byte3","byte4","i_1","setOffset","createInternals","bIsLocaShort","code","isFontPresent","getGlyphChars","chars","charKeys","getAllGlyphs","allGlyphInfo","readFontProgram","result1","result2","convertString","getCharWidth","isUnicode","i1","i2","i3","i4","low","written","PdfFontMetrics","getAscent","getDescent","getLineGap","clearTypeFonts","clearTypeFontCollection","subSuperScript","SubScript","SuperScript","WidthTable","internalWidthTable","StandardWidthTable","widths","UnicodeTrueTypeFont","base64String","nameString","isCompress","cmapPrefix","cmapEndCodespaceRange","cmapBeginRange","cmapEndRange","cmapSuffix","fontString","Initialize","ttfReader","ttfMetrics","fontDictionary","fontProgram","cmap","descendantFont","subsetName","getFontName","createDescendantFont","createCmap","createFontDictionary","createFontProgram","isBold","random","formatName","ret","createFontDescriptor","systemInfo","createSystemInfo","descriptor","getDescriptorFlags","getBoundBox","descFonts","usedChars","getDescendantWidth","generateCmap","generateFontProgram","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","first","last","middlePart","toHexString","nextRange","FixedPitch","Symbolic","Nonsymbolic","isItalic","ForceBold","abs","isCaseChange","toUpperCase","setSymbols","PdfGraphics","previousTextRenderingMode","Fill","previousCharacterSpacing","previousWordSpacing","previousTextScaling","procedureSets","isNormalRender","isUseFontSize","isEmfTextScaled","isEmf","isEmfPlus","isBaselineFormat","emfScalingFactor","colorSpaceChanged","isPointOverload","currentColorSpaces","isImageOptimized","graphicsState","istransparencySet","internalAutomaticFields","startCutIndex","pdfStreamWriter","canvasSize","pdfStringLayoutResult","internalMediaBoxUpperRightBound","clipBounds","pageLayer","bStateSaved","currentBrush","currentFont","bCSInitialized","currentStringFormat","requireProcedureSet","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","name_1","getName","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","drawLine","stateControl","drawRectangle","drawPath","Winding","isPen","isBrush","isEvenOdd","Alternate","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","layer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","resultHeight","remainingString","drawLayoutResult","underlineStrikeoutText","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","ttfFont","isEmbedFont","lineInfo","hAlignShift","drawUnicodeLine","drawAsciiLine","useWordSpace","Justify","justifyLine","breakUnicodeLine","blocks","tokens","words","drawUnicodeBlocks","token","convertToUnicode","getUnicodeString","xShift","spaceWidth","tokenWidth","converted","fontInternal","boundsWidth","hasWordSpacing","whitespacesCount","wordSpace","initializeCoordinates","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","x1","FillStroke","Stroke","ClipFlag","layoutBounds","firstParagraphLine","Left","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","curSubSuper","prevSubSuper","setTransparency","trasparencies","transp","td","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","doRestoreState","pop","pathTypesValuesMask","transparencyObject","GetResourceEventHandler","internalTextRenderingMode","internalTextScaling","pdfColorSpace","pdfGraphics","pdfPen","pdfFont","alphaPen","alphaBrush","blendMode","PdfPageLayer","streamClipPageTemplates","isVisible","sublayer","contentLength","pdfPage","clipPageTemplates","layerid","layerName","initializeGraphics","PdfPageLayerCollection","sign","oPage","gr","sc","isSame","origin","clipRect","getActualBounds","pageSettings","PdfCollection","parentLayerCount","optionalContent","PdfPageBase","lPage","parseLayers","list","firstArgument","secondArgument","addLayer","insertLayer","loadedPage","saveStream","restoreStream","saveData","PdfTemplate","writeTransformation","tempSize","templateSize","PdfResources","addType","addSubType","baseDictionary","properties","getNames","primitive","names","sName","generateName","pdfNames","fonts","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","guid","randomString","randomNumber","defLayerIndex","pageDictionary","pdfSection","layers","defaultLayerIndex","layerCollection","res","PdfAnnotationCollection","alreadyExistsAnnotationError","missingAnnotationException","internalAnnotations","lists","annotation","doAdd","destination","setPage","layoutResult","lastPosition","setColor","colours","PdfPage","annotationCollection","defaultLayer","parentDocument","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","containsTemplates","backLayer","drawTemplates","frontLayer","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","pageAdded","pdfPages","settings","initialSettings","sectionCollection","pagesReferences","pageTemplate","pagesCollection","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","documentTemplates","headers","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","rh","args","onPageAdded","document_1","getLeftIndentWidth","top_1","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","drawTemplatesHelper","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","forEach","PdfDocumentPageCollection","pdfPageCollectionIndex","previousPageOrientation","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","referenceObjects","pdfFontCollection","search","group","getGroup","createNewGroup","tGroup","representative","removeGroup","slice","isMerging","defaultMargin","documentPageCollection","cacheCollection","defaultStandardFont","PdfStandardFont","Helvetica","isCacheEnabled","Cmyk","GrayScale","checkPagesPresence","cache","PdfStandardFontMetricsFactory","getMetrics","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","arialWidth","helveticaAscent","helveticaDescent","helveticaName","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","fixedWidth","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","fontFamilyPrototype","encodings","pdfFontFamily","checkStyle","initializeInternals","convert","getCharWidthInternal","equal","stFont","fontFamilyEqual","lineReducer","styleEqual","WinAnsiEncoding","charOffset","PdfAnnotation","textBrush","textFont","internalColor","darkness","nativeRectangle","initialHeight","tempLoacation","PdfLinkAnnotation","PdfActionLinkAnnotation","pdfAction","getSetAction","PdfDocumentLinkAnnotation","pdfDestination","PdfLayoutType","PdfLayoutBreakType","ElementLayouter","layoutElement","getElement","param","isBoundsChanged","layoutInternal","PdfLayoutFormat","baseFormat","break","paginateBounds","boundsSet","usePaginateBounds","layoutType","Paginate","FitPage","layoutPaginateBounds","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfLayoutElement","bEmbedFonts","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","PdfTextElement","elementValue","hasPointOverload","isPdfTextElement","drawText","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","previousFontStyle","calculateBounds","url","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","generateNumber","arabic","stack","convertToLetter","num","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","arguments","internalText","automaticField","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfDestinationMode","PdfDestination","destinationMode","Location","zoomFactor","destinationLocation","initializePrimitive","simplePage","FitToPage","PdfTrueTypeFont","createFontInternal","codeWidth","calculateStyle","iStyle","equalFont","enableCache","isEmbed","isUnicodeFont","PdfPageTemplateElement","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","currentLocation","templateType","updateDocking","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","getSimpleDockBounds","getTemplateDockBounds","PdfBorders","defaultBorderPenLeft","dashStyle","defaultBorderPenRight","defaultBorderPenTop","defaultBorderPenBottom","leftPen","rightPen","topPen","bottomPen","PdfPaddings","leftPad","rightPad","topPad","bottomPad","PdfBorderOverlapStyle","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","PdfGridStyle","gridBorderOverlapStyle","Overlap","bAllowHorizontalOverflow","gridHorizontalOverflowType","PdfHorizontalOverflowType","LastPage","gridCellSpacing","gridCellPadding","PdfGridCellStyle","gridCellBorders","default","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","PdfGridCell","row","cellWidth","cellHeight","finsh","rowSpanRemainingHeight","gridRowSpan","colSpan","gridRow","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","objectValue","rowSpanExists","cellStyle","measureHeight","columnSpanExists","grid","isComplete","measureWidth","layouter","getTextFont","webLink","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","adjustContentLayoutArea","returnBounds","rowSpan","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","getTextPen","getTextBrush","strFormat","getStringFormat","innerLayoutArea","temp","imageBounds","drawCellBorders","borderOverlapStyle","Inside","p1","p2","Square","isHeader","currentColIndex","columnSpan","span","totalWidth","compWidth","getColumn","currentRowIndex","rows","rowCollection","totalHeight","getHeader","getRow","rowMergeComplete","calculateWidth","currentValue","cellIndex","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","gridRowOverflowIndex","isRowHeightSet","isRowMergeComplete","pdfGrid","bRowSpanExists","gridCells","rowStyle","border","gridRowBreakHeight","rowHeight","bColumnSpanExists","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","PdfGridLayoutFormat","PdfGrid","gridSize","isRearranged","pageBounds","listOfNavigatePages","flag","columnRanges","breakRow","beginCellDraw","endCellDraw","beginPageLayout","endPageLayout","bRepeatHeader","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","pageWidth","childGrid","measure","isGridLayouter","setSpan","gridLocation","currentCellIndex","rowCount","colCount","isCellMergeContinue","isRowMergeContinue","isCellMergeStart","isRowMergeStart","getFormat","currentPageBounds","currentGraphics","startLocation","isChildGrid","hType","horizontalOverflowType","determineColumnDrawRanges","rowWidth","internalWidth","internalHeight","isCorrectWidth","isCorrectHeight","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","range","cellStartIndex","cellEndIndex","returnObject","raiseBeforePageLayout","drawRow","repeatRow","originalHeight","repeatRowIndex","rowResult","isFinish","OnePage","repeatHeader","i_2","maximumCellBoundsWidth","rowLayoutBoundsWidth","NextPage","reArrangePages","raisePageLayouted","nextPage","pageindex","PdfGridLayoutResult","ReCalculateHeight","currentRow","cancel","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","maxSpan","currRowIndex","rowMaxHeight","nextRow","calculatedHeight","rowBreakHeight","location_2","cancelSpans","CheckIfDefaultFormat","cellstyle","tempValue","RaiseBeforeCellDraw","RaiseAfterCellDraw","defaultFormat","measureTrailingSpaces","noClip","rowIndex","raiseBeginCellDraw","PdfGridBeginCellDrawEventArgs","raiseEndCellDraw","PdfGridEndCellDrawEventArgs","count_1","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","layoutedBounds","bIsFinished"],"mappings":"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IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAM/E5B,EAA8BqD,iBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK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IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTjD,EAA8ByC,4BAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTzC,EAA8ByD,aAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAMxCzD,EAA8B6D,mBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,KAEtB7D,KCllBPj/C,GAAwC,WACx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"}