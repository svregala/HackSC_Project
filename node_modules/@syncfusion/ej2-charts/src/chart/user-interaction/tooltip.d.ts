import { Chart } from '../chart';
import { PointData } from '../../common/utils/helper';
import { BaseTooltip } from '../../common/user-interaction/tooltip';
/**
 * `Tooltip` module is used to render the tooltip for chart series.
 */
export declare class Tooltip extends BaseTooltip {
    /**
     * Constructor for tooltip module.
     * @private.
     */
    constructor(chart: Chart);
    /**
     * @hidden
     */
    private addEventListener();
    private mouseUpHandler();
    private mouseLeaveHandler();
    private mouseMoveHandler();
    /**
     * Handles the long press on chart.
     * @return {boolean}
     * @private
     */
    private longPress();
    /**
     * Renders the tooltip.
     * @return {void}
     */
    tooltip(): void;
    private findHeader(data);
    private findShapes();
    private renderSeriesTooltip(chart, isFirst, tooltipDiv);
    private findMarkerHeight(pointData);
    private findData(data, previous);
    private getSymbolLocation(data);
    private getRangeArea(data, location);
    private getWaterfallRegion(data, location);
    private getTooltipText(pointData);
    private getTemplateText(data);
    private findMouseValue(data, chart);
    private renderGroupedTooltip(chart, isFirst, tooltipDiv);
    private findSharedLocation();
    private getBoxLocation(data);
    private parseTemplate(point, series, format, xAxis, yAxis);
    private formatPointValue(point, axis, dataValue, isXPoint, isYPoint);
    private getFormat(chart, series);
    private getIndicatorTooltipFormat(series, chart, format);
    removeHighlightedMarker(data: PointData[]): void;
    /**
     * Get module name.
     */
    protected getModuleName(): string;
    /**
     * To destroy the tooltip.
     * @return {void}
     * @private
     */
    destroy(chart: Chart): void;
}
