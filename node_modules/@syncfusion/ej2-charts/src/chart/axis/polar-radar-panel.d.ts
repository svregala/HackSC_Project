import { Chart } from '../chart';
import { Axis, Row, Column } from '../axis/axis';
import { Size, Rect } from '../../common/utils/helper';
import { LineBase } from '../series/line-base';
export declare class PolarRadarPanel extends LineBase {
    private initialClipRect;
    private htmlObject;
    private element;
    private centerX;
    private centerY;
    private startAngle;
    /** @private */
    seriesClipRect: Rect;
    /**
     * Measure the polar radar axis size.
     * @return {void}
     * @private
     */
    measureAxis(rect: Rect): void;
    private measureRowAxis(chart, rect);
    private measureColumnAxis(chart, rect);
    /**
     * Measure the column and row in chart.
     * @return {void}
     * @private
     */
    measureDefinition(definition: Row | Column, chart: Chart, size: Size, clipRect: Rect): void;
    /**
     * Measure the axis.
     * @return {void}
     * @private
     */
    private calculateAxisSize();
    /**
     * Measure the axis.
     * @return {void}
     * @private
     */
    measure(): void;
    /**
     * Measure the row size.
     * @return {void}
     */
    private calculateRowSize(rect);
    /**
     * Measure the row size.
     * @return {void}
     */
    private calculateColumnSize(rect);
    /**
     * To render the axis element.
     * @return {void}
     * @private
     */
    renderAxes(): Element;
    private drawYAxisLine(axis, index, plotX, plotY);
    drawYAxisLabels(axis: Axis, index: number): void;
    private drawYAxisGridLine(axis, index);
    private drawXAxisGridLine(axis, index);
    private drawAxisMinorLine(axis, tempInterval, minorGird, minorTick);
    /**
     * To render the axis label.
     * @return {void}
     * @private
     */
    drawXAxisLabels(axis: Axis, index: number): void;
    private renderTickLine(axis, index, majorTickLine, minorTickLine?);
    private renderGridLine(axis, index, majorGrid, minorGird);
}
